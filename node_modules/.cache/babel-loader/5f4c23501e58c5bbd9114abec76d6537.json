{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BaseCard, MemoryImage } from '../cardcollection/card';\nimport { SubTag } from '../buttons/buttons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css';\nimport logo from \"../navigation/Logo_black.png\";\nimport { Icon, ICONS } from '../icons/icons';\nimport { getAllMemoryFiles, getTaggedPeople, getMemoryClouds, getCloudPeople, updateHeroImage, updateDescription, updateLocation, updateStory, updateTitle, updateTaggedPeople, updateClouds, deleteMemory, addTaggedPerson, deleteTaggedPerson } from '../memriioserver';\nimport { Container, Row, Col, Form, Carousel, Button, Dropdown, DropdownButton, Alert } from 'react-bootstrap';\n\nclass MemoryEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.titleChange = event => {\n      this.setState({\n        title: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.descriptionChange = event => {\n      this.setState({\n        description: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.locationChange = event => {\n      this.setState({\n        location: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.storyChange = event => {\n      this.setState({\n        story: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.handleExpandStory = () => {\n      const expanded = !this.state.storyExpanded;\n      this.setState({\n        storyExpanded: expanded\n      });\n      console.log('storyExpanded ' + this.state.storyExpanded);\n    };\n\n    this.populateCloudInfo = clouds => {\n      this.setState({\n        memoryClouds: clouds\n      });\n      getCloudPeople(clouds, people => {\n        this.setState({\n          cloudPeople: people\n        });\n      });\n    };\n\n    this.handleDeleteMemory = () => {\n      console.log('handleDeleteMemory ' + this.state.memid);\n      deleteMemory(this.state.memid);\n      this.props.onRouteChange('memoryUpdated');\n    };\n\n    this.updateMemory = () => {\n      updateTitle(this.state.memid, this.state.title);\n      updateDescription(this.state.memid, this.state.description);\n      updateLocation(this.state.memid, this.state.location);\n      updateStory(this.state.memid, this.state.story);\n      this.props.onRouteChange('memoryUpdated');\n    };\n\n    this.addPerson = (userid, event) => {\n      let alreadyTagged = false;\n      let newArray = this.state.taggedPeople;\n      this.state.taggedPeople.map(person => {\n        if (person.userid == userid) {\n          alreadyTagged = true;\n        }\n      });\n\n      if (!alreadyTagged) {\n        let p = this.getCloudPersonDetails(userid);\n        if (p) newArray.push(p);\n        this.setState({\n          taggedPeople: newArray\n        });\n        console.log('addPerson memid is ' + this.state.memid);\n        addTaggedPerson(this.state.memid, p.userid);\n      }\n    };\n\n    this.getCloudPersonDetails = userid => {\n      let person = null;\n      this.state.cloudPeople.map(p => {\n        if (p.userid == userid) {\n          person = p;\n        }\n      });\n      return person;\n    };\n\n    this.handleDeleteTaggedPerson = userid => {\n      let array = this.state.taggedPeople;\n      this.state.taggedPeople.map((p, index) => {\n        if (p.userid == userid) {\n          array.splice(index, 1);\n        }\n      });\n      this.setState({\n        taggedPeople: array\n      });\n      deleteTaggedPerson(this.state.memid, userid);\n    };\n\n    this.handleDeleteCloud = cloudid => {\n      alert('handleDeleteCloud : cloudid ' + cloudid);\n    };\n\n    console.log('location ' + props.memory.title);\n    this.state = {\n      memid: props.memory.memid,\n      title: props.memory.title,\n      description: props.memory.description,\n      story: props.memory.story,\n      location: props.memory.location,\n      owner: props.memory.memid,\n      fileurl: props.memory.fileurl,\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      memfiles: null,\n      cloudPeople: [],\n      uploadNeeded: false,\n      storyExpanded: false\n    };\n  } //------------------------------------------------------------------------\n\n\n  componentDidMount() {\n    getAllMemoryFiles(this.props.memory.memid, memoryFiles => {\n      this.setState({\n        memfiles: memoryFiles\n      });\n    });\n    getTaggedPeople(this.props.memory.memid, people => {\n      this.setState({\n        taggedPeople: people\n      });\n    });\n    getMemoryClouds(this.props.memory.memid, clouds => {\n      this.populateCloudInfo(clouds);\n    });\n  } //------------------------------------------------------------------------\n\n\n  //------------------------------------------------------------------------\n  render() {\n    let imageArray = [];\n    let upperform = null;\n    let lowerform = null;\n\n    if (this.state.memfiles) {\n      this.state.memfiles.map((item, index) => {\n        imageArray.push({\n          src: item.fileurl\n        });\n      });\n    } else {//do something else here\n    }\n\n    if (!this.state.storyExpanded) {\n      upperform = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.title,\n        onChange: this.titleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2 pb0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.description,\n        onChange: this.descriptionChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2 pb0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.location,\n        onChange: this.locationChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }, \"Tagged People\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dib  w-100 float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }\n      }, this.state.taggedPeople.map(person => {\n        let fullname = person.firstname + ' ' + person.lastname;\n        return /*#__PURE__*/React.createElement(SubTag, {\n          tagKey: person.userid,\n          text: fullname,\n          onClick: () => this.handleDeleteTaggedPerson(person.userid),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 48\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex ma1 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        size: \"sm\",\n        title: \"++\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 37\n        }\n      }, this.state.cloudPeople.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: person.userid.toString(),\n          onSelect: this.addPerson,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 49\n          }\n        }, person.firstname + ' ' + person.lastname);\n      })))), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, \"Memory Clouds\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dib  w-100 float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }\n      }, this.state.memoryClouds.map(cloud => {\n        return /*#__PURE__*/React.createElement(SubTag, {\n          tagKey: cloud.id,\n          text: cloud.name,\n          onClick: () => this.handleDeleteCloud(cloud.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 48\n          }\n        });\n      })));\n      lowerform = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex w-100 justify-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \" W-50 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }\n      }, \"Story\"), /*#__PURE__*/React.createElement(Icon, {\n        icon: ICONS.CHEVRON_UP,\n        onClick: this.handleExpandStory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"10\",\n        value: this.state.story,\n        onChange: this.storyChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }));\n    } else {\n      upperform = null;\n      lowerform = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex w-100 justify-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \" W-50 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }\n      }, \"Story\"), /*#__PURE__*/React.createElement(Icon, {\n        icon: ICONS.CHEVRON_DOWN,\n        onClick: this.handleExpandStory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"10\",\n        value: this.state.story,\n        onChange: this.storyChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }));\n    }\n\n    if (this.props.memory && this.state.memfiles) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"dt w-100 border-box pa3 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"dtc v-mid f4-ns link dim dark-gray w-25 flex justify-left\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"w2 h2 \",\n        alt: \"Site Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }\n      }), \"memriio\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\",\n        onClick: () => this.props.onRouteChange(\"home\"),\n        href: \"#\",\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 37\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.updateMemory,\n        href: \"#\",\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 37\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleDeleteMemory,\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 37\n        }\n      }, \"Delete\"))), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        float: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        className: \"ba pa2 br3\",\n        autoPlay: false,\n        interval: 1200000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 29\n        }\n      }, this.state.memfiles.map((item, i) => {\n        return /*#__PURE__*/React.createElement(Carousel.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(MemoryImage, {\n          key: i,\n          index: i,\n          fileurl: item.fileurl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 45\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ba pa2 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 29\n        }\n      }, upperform, lowerform))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        className: \"ba pa2 br3 \",\n        interval: 1200000,\n        nextIcon: /*#__PURE__*/React.createElement(Icon, {\n          icon: ICONS.CHEVRON_RIGHT,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 45\n          }\n        }),\n        prevIcon: /*#__PURE__*/React.createElement(Icon, {\n          icon: ICONS.CHEVRON_LEFT,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 45\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 29\n        }\n      }, this.state.memfiles.map((item, i) => {\n        return /*#__PURE__*/React.createElement(Carousel.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(BaseCard, {\n          key: i,\n          memory: this.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 45\n          }\n        }));\n      }))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }\n      }, \"No Memory To Display\");\n    }\n  }\n\n} //------------------------------------------------------------------------    \n\n\nexport default MemoryEditor;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js"],"names":["React","useState","ReactDOM","BaseCard","MemoryImage","SubTag","logo","Icon","ICONS","getAllMemoryFiles","getTaggedPeople","getMemoryClouds","getCloudPeople","updateHeroImage","updateDescription","updateLocation","updateStory","updateTitle","updateTaggedPeople","updateClouds","deleteMemory","addTaggedPerson","deleteTaggedPerson","Container","Row","Col","Form","Carousel","Button","Dropdown","DropdownButton","Alert","MemoryEditor","Component","constructor","props","titleChange","event","setState","title","target","value","uploadNeeded","descriptionChange","description","locationChange","location","storyChange","story","handleExpandStory","expanded","state","storyExpanded","console","log","populateCloudInfo","clouds","memoryClouds","people","cloudPeople","handleDeleteMemory","memid","onRouteChange","updateMemory","addPerson","userid","alreadyTagged","newArray","taggedPeople","map","person","p","getCloudPersonDetails","push","handleDeleteTaggedPerson","array","index","splice","handleDeleteCloud","cloudid","alert","memory","owner","fileurl","searchWords","memfiles","componentDidMount","memoryFiles","render","imageArray","upperform","lowerform","item","src","fullname","firstname","lastname","toString","cloud","id","name","CHEVRON_UP","CHEVRON_DOWN","i","CHEVRON_RIGHT","CHEVRON_LEFT"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BaseCard,MemoryImage} from '../cardcollection/card'\nimport {SubTag} from '../buttons/buttons'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css'\nimport logo from \"../navigation/Logo_black.png\"\nimport {Icon, ICONS} from '../icons/icons'\n\n\n\nimport {getAllMemoryFiles, \n        getTaggedPeople,\n        getMemoryClouds,\n        getCloudPeople,\n        updateHeroImage,\n        updateDescription,\n        updateLocation,\n        updateStory,\n        updateTitle,\n        updateTaggedPeople,\n        updateClouds,\n        deleteMemory,\n        addTaggedPerson,\n        deleteTaggedPerson,\n       \n       } from '../memriioserver'\n       \n\nimport {Container,\n        Row,\n        Col,\n        Form,\n        Carousel,\n        Button,\n        Dropdown,\n        DropdownButton,\n        Alert,\n        } from 'react-bootstrap'\n\n\nclass MemoryEditor extends React.Component{\n\n    constructor(props){\n        super(props);\n        console.log('location ' + props.memory.title);\n        \n        this.state = {\n                memid:props.memory.memid,\n                title:props.memory.title,\n                description:props.memory.description,\n                story:props.memory.story,\n                location:props.memory.location,\n                owner:props.memory.memid,\n                fileurl:props.memory.fileurl,\n\n                taggedPeople:[],\n                memoryClouds:[],\n                searchWords:[],\n                memfiles:null,\n                cloudPeople:[],\n        \n                uploadNeeded:false,\n                storyExpanded:false,\n            }\n            \n    }    \n\n    \n\n//------------------------------------------------------------------------\n\n    componentDidMount(){\n\n       \n        getAllMemoryFiles   (this.props.memory.memid,((memoryFiles)=>{this.setState({memfiles:memoryFiles})}))\n        getTaggedPeople     (this.props.memory.memid,((people)=>{this.setState({taggedPeople:people})}))\n        getMemoryClouds     (this.props.memory.memid,((clouds)=>{this.populateCloudInfo(clouds)}))\n        \n\n    }\n\n    \n\n//------------------------------------------------------------------------\n\ntitleChange         = (event) => {this.setState({title:event.target.value,uploadNeeded:true})}\ndescriptionChange   = (event) => {this.setState({description:event.target.value,uploadNeeded:true})}\nlocationChange      = (event) => {this.setState({location:event.target.value,uploadNeeded:true})}\nstoryChange         = (event) => {this.setState({story:event.target.value,uploadNeeded:true})}\nhandleExpandStory   =  ()   =>   {\n    const expanded = !this.state.storyExpanded\n    this.setState({storyExpanded:expanded})\n    console.log('storyExpanded ' + this.state.storyExpanded);\n    \n}\n\n//------------------------------------------------------------------------\n\npopulateCloudInfo = (clouds) =>{\n\n    this.setState({memoryClouds:clouds})\n    getCloudPeople (clouds,((people)=>{this.setState({cloudPeople:people})}))\n\n    \n}\n//------------------------------------------------------------------------\n\nhandleDeleteMemory = () =>{\n    console.log('handleDeleteMemory ' + this.state.memid);\n    deleteMemory(this.state.memid)\n    this.props.onRouteChange('memoryUpdated')\n}\n\n\n//------------------------------------------------------------------------\n\nupdateMemory = () =>{\n\n    updateTitle         (this.state.memid,this.state.title)\n    updateDescription   (this.state.memid,this.state.description)\n    updateLocation      (this.state.memid,this.state.location)\n    updateStory         (this.state.memid,this.state.story)\n    \n    \n\n    this.props.onRouteChange('memoryUpdated')\n\n}\n\n//------------------------------------------------------------------------\n\naddPerson = (userid,event) =>{\n    let alreadyTagged = false\n    let newArray = this.state.taggedPeople\n    \n    this.state.taggedPeople.map(person =>{\n        \n       if(person.userid == userid){\n            alreadyTagged = true\n        }\n    })\n    \n    if(!alreadyTagged){\n        let p = this.getCloudPersonDetails(userid)\n        if(p) newArray.push(p)\n        this.setState({taggedPeople:newArray})\n        console.log('addPerson memid is ' + this.state.memid);\n        \n        addTaggedPerson(this.state.memid ,p.userid)\n    }\n}\n\n//------------------------------------------------------------------------\n\ngetCloudPersonDetails = (userid) =>{\n    let person = null\n    this.state.cloudPeople.map(p =>{\n        if(p.userid == userid){person = p}\n    })\n    return person\n}\n\n//------------------------------------------------------------------------\n\nhandleDeleteTaggedPerson = (userid) =>{\n    \n    let array = this.state.taggedPeople\n    \n    this.state.taggedPeople.map((p,index) =>{\n        if(p.userid == userid){\n            array.splice(index,1)\n        }\n    })\n    this.setState({taggedPeople:array})\n    deleteTaggedPerson(this.state.memid ,userid)\n}\n\n//------------------------------------------------------------------------\n\nhandleDeleteCloud = (cloudid) =>{\n    alert('handleDeleteCloud : cloudid ' + cloudid)\n}\n\n//------------------------------------------------------------------------\n\n\n    render(){\n        let imageArray = []\n        let upperform = null\n        let lowerform = null\n       \n        \n        if(this.state.memfiles){\n            this.state.memfiles.map((item,index)=>{imageArray.push({ src: item.fileurl})})\n        }else{\n            //do something else here\n        }\n        \n        if(!this.state.storyExpanded){\n            upperform = \n                    <div>\n                        <Form.Label className='float-left W-100' >Title</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            value={this.state.title} \n                            onChange={this.titleChange}\n                        />\n\n                        <Form.Label className='float-left W-100 pt2 pb0'>Description</Form.Label>\n                        <Form.Control\n                            type=\"text\" \n                            value={this.state.description} \n                            onChange={this.descriptionChange}\n                            \n                        />\n                        \n                        <Form.Label className='float-left W-100 pt2 pb0'>Location</Form.Label>\n                        <Form.Control\n                            type=\"text\" \n                            value={this.state.location} \n                            onChange={this.locationChange}\n                        />\n                        \n                        <Form.Label className='float-left W-100 pt2'>Tagged People</Form.Label>\n                            <div className='dib  w-100 float-left'>\n                                {this.state.taggedPeople.map(person => {\n                                    let fullname = person.firstname + ' ' + person.lastname\n                                   \n                                        return(<SubTag \n                                                tagKey={person.userid}\n                                                text={fullname} \n                                                onClick={() => this.handleDeleteTaggedPerson(person.userid)}\n                                              />)\n                                    })\n                                }\n                                <div className='inline-flex ma1 br3' >\n                                    <DropdownButton\n                                        id='dropdown-basic-button'\n                                        size=\"sm\"\n                                        title=\"++\"\n                                        >\n                                        {this.state.cloudPeople.map((person,index) => {\n                                            \n                                            return(\n                                                <Dropdown.Item \n                                                    eventKey={person.userid.toString()}\n                                                    onSelect={this.addPerson}\n                                                >\n                                                    {person.firstname + ' ' + person.lastname}\n                                                </Dropdown.Item>)})\n                                        } \n                                    </DropdownButton> \n                                 </div>    \n                            </div>\n\n                        <Form.Label className='float-left W-100 pt2'>Memory Clouds</Form.Label>\n                            <div className='dib  w-100 float-left'>\n                                {this.state.memoryClouds.map(cloud => {\n                                    \n                                        return(<SubTag \n                                                tagKey={cloud.id}\n                                                text={cloud.name} \n                                                onClick={() => this.handleDeleteCloud(cloud.id)}\n                                            />)\n                                    })\n                                }\n                            </div>\n                    </div>\n            lowerform = \n                    <div>\n                        <div className='inline-flex w-100 justify-between'>\n                            <Form.Label className=' W-50 pt2'>Story</Form.Label>\n                            <Icon icon={ICONS.CHEVRON_UP} onClick={this.handleExpandStory}/>\n                        </div>\n                        \n                        <Form.Control \n                            as=\"textarea\" \n                            rows='10' \n                            value={this.state.story} \n                            onChange={this.storyChange}\n                        />\n                    </div>\n\n        }else{\n            upperform = null\n            lowerform = \n                    <div>\n                        <div className='inline-flex w-100 justify-between'>\n                            <Form.Label className=' W-50 pt2'>Story</Form.Label>\n                            <Icon icon={ICONS.CHEVRON_DOWN} onClick={this.handleExpandStory}/>\n                        </div>\n                        \n                        <Form.Control \n                            as=\"textarea\" \n                            rows='10' \n                            value={this.state.story} \n                            onChange={this.storyChange}\n                        />\n                    </div>\n        }\n\n        if(this.props.memory && this.state.memfiles){\n            return (\n                <div>\n\n                    <nav className=\"dt w-100 border-box pa3 \">\n                            <a className=\"dtc v-mid f4-ns link dim dark-gray w-25 flex justify-left\" href=\"#\" title=\"Home\">\n                            <img src={logo} className=\"w2 h2 \" alt=\"Site Name\"></img>\n                                memriio</a>\n                                <div className=\"dtc v-mid w-75 tr\">\n                                    \n                                    <a className=\"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\" \n                                        onClick={()=>this.props.onRouteChange(\"home\")}\n                                        href=\"#\" \n                                        title=\"Post\">Cancel</a>\n                                    <a className=\"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\" \n                                        onClick={this.updateMemory}\n                                        href=\"#\" \n                                        title=\"Post\">Update</a>\n                                    <a  onClick={this.handleDeleteMemory}\n                                        className=\"link dim dark-gray f6 f4-ns dib\" \n                                        href=\"#\" \n                                        title=\"Login\">Delete</a>\n                                </div>\n                        </nav>\n                \n                    \n                <Container fluid>\n                   <Row>\n                        <Col xs={5} float='center'>\n                            <Carousel \n                                className='ba pa2 br3' \n                                autoPlay={false} \n                                interval={1200000}\n                                >\n                                {\n                                    this.state.memfiles.map((item,i) => {\n                                    return (\n                                        <Carousel.Item>\n                                            <MemoryImage\n                                                key={i} \n                                                index={i}\n                                                fileurl={item.fileurl}\n                                            />\n                                        </Carousel.Item>\n                                        )\n                                    })\n                                }\n                                \n                            </Carousel>\n                        </Col>\n                        <Col>\n                            <div class ='ba pa2 br3'>\n                            <Form > \n                               {upperform}\n                               {lowerform}\n                               \n                            </Form>\n                            </div>\n                        </Col>\n                        <Col>\n                            <Carousel \n                                className='ba pa2 br3 ' \n                                interval={1200000}\n                                nextIcon = {<Icon icon={ICONS.CHEVRON_RIGHT}/>}\n                                prevIcon = {<Icon icon={ICONS.CHEVRON_LEFT}/>}\n                            >\n                                {\n                                    \n                                    this.state.memfiles.map((item,i) => {\n                                    return (\n                                        <Carousel.Item>\n                                            <BaseCard\n                                                key = {i}\n                                                memory={this.state}\n                                            /> \n                                        </Carousel.Item>\n                                        \n                                        )\n                                    })\n                                \n                                }\n                                    \n                            </Carousel>\n                            \n                        </Col>\n                    </Row>                 \n                </Container>   \n            </div>  \n            )\n        }else{\n            return (\n                <div>                \n                    No Memory To Display\n                    \n                </div>   \n            )\n\n        }\n    }\n\n}\n        \n//------------------------------------------------------------------------    \n\n\n\nexport default MemoryEditor;\n"]},"metadata":{},"sourceType":"module"}