{"ast":null,"code":"/*\n* Underscore.string\n* (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\n* Underscore.string is freely distributable under the terms of the MIT license.\n* Documentation: https://github.com/epeli/underscore.string\n* Some code is borrowed from MooTools and Alexandru Marasteanu.\n* Version '3.3.4'\n* @preserve\n*/\n'use strict';\n\nfunction s(value) {\n  /* jshint validthis: true */\n  if (!(this instanceof s)) return new s(value);\n  this._wrapped = value;\n}\n\ns.VERSION = '3.3.4';\ns.isBlank = require('./isBlank');\ns.stripTags = require('./stripTags');\ns.capitalize = require('./capitalize');\ns.decapitalize = require('./decapitalize');\ns.chop = require('./chop');\ns.trim = require('./trim');\ns.clean = require('./clean');\ns.cleanDiacritics = require('./cleanDiacritics');\ns.count = require('./count');\ns.chars = require('./chars');\ns.swapCase = require('./swapCase');\ns.escapeHTML = require('./escapeHTML');\ns.unescapeHTML = require('./unescapeHTML');\ns.splice = require('./splice');\ns.insert = require('./insert');\ns.replaceAll = require('./replaceAll');\ns.include = require('./include');\ns.join = require('./join');\ns.lines = require('./lines');\ns.dedent = require('./dedent');\ns.reverse = require('./reverse');\ns.startsWith = require('./startsWith');\ns.endsWith = require('./endsWith');\ns.pred = require('./pred');\ns.succ = require('./succ');\ns.titleize = require('./titleize');\ns.camelize = require('./camelize');\ns.underscored = require('./underscored');\ns.dasherize = require('./dasherize');\ns.classify = require('./classify');\ns.humanize = require('./humanize');\ns.ltrim = require('./ltrim');\ns.rtrim = require('./rtrim');\ns.truncate = require('./truncate');\ns.prune = require('./prune');\ns.words = require('./words');\ns.pad = require('./pad');\ns.lpad = require('./lpad');\ns.rpad = require('./rpad');\ns.lrpad = require('./lrpad');\ns.sprintf = require('./sprintf');\ns.vsprintf = require('./vsprintf');\ns.toNumber = require('./toNumber');\ns.numberFormat = require('./numberFormat');\ns.strRight = require('./strRight');\ns.strRightBack = require('./strRightBack');\ns.strLeft = require('./strLeft');\ns.strLeftBack = require('./strLeftBack');\ns.toSentence = require('./toSentence');\ns.toSentenceSerial = require('./toSentenceSerial');\ns.slugify = require('./slugify');\ns.surround = require('./surround');\ns.quote = require('./quote');\ns.unquote = require('./unquote');\ns.repeat = require('./repeat');\ns.naturalCmp = require('./naturalCmp');\ns.levenshtein = require('./levenshtein');\ns.toBoolean = require('./toBoolean');\ns.exports = require('./exports');\ns.escapeRegExp = require('./helper/escapeRegExp');\ns.wrap = require('./wrap');\ns.map = require('./map'); // Aliases\n\ns.strip = s.trim;\ns.lstrip = s.ltrim;\ns.rstrip = s.rtrim;\ns.center = s.lrpad;\ns.rjust = s.lpad;\ns.ljust = s.rpad;\ns.contains = s.include;\ns.q = s.quote;\ns.toBool = s.toBoolean;\ns.camelcase = s.camelize;\ns.mapChars = s.map; // Implement chaining\n\ns.prototype = {\n  value: function value() {\n    return this._wrapped;\n  }\n};\n\nfunction fn2method(key, fn) {\n  if (typeof fn !== 'function') return;\n\n  s.prototype[key] = function () {\n    var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));\n    var res = fn.apply(null, args); // if the result is non-string stop the chain and return the value\n\n    return typeof res === 'string' ? new s(res) : res;\n  };\n} // Copy functions to instance methods for chaining\n\n\nfor (var key in s) fn2method(key, s[key]);\n\nfn2method('tap', function tap(string, fn) {\n  return fn(string);\n});\n\nfunction prototype2method(methodName) {\n  fn2method(methodName, function (context) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return String.prototype[methodName].apply(context, args);\n  });\n}\n\nvar prototypeMethods = ['toUpperCase', 'toLowerCase', 'split', 'replace', 'slice', 'substring', 'substr', 'concat'];\n\nfor (var method in prototypeMethods) prototype2method(prototypeMethods[method]);\n\nmodule.exports = s;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/node_modules/underscore.string/index.js"],"names":["s","value","_wrapped","VERSION","isBlank","require","stripTags","capitalize","decapitalize","chop","trim","clean","cleanDiacritics","count","chars","swapCase","escapeHTML","unescapeHTML","splice","insert","replaceAll","include","join","lines","dedent","reverse","startsWith","endsWith","pred","succ","titleize","camelize","underscored","dasherize","classify","humanize","ltrim","rtrim","truncate","prune","words","pad","lpad","rpad","lrpad","sprintf","vsprintf","toNumber","numberFormat","strRight","strRightBack","strLeft","strLeftBack","toSentence","toSentenceSerial","slugify","surround","quote","unquote","repeat","naturalCmp","levenshtein","toBoolean","exports","escapeRegExp","wrap","map","strip","lstrip","rstrip","center","rjust","ljust","contains","q","toBool","camelcase","mapChars","prototype","fn2method","key","fn","args","concat","Array","slice","call","arguments","res","apply","tap","string","prototype2method","methodName","context","String","prototypeMethods","method","module"],"mappings":"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","sourcesContent":["/*\n* Underscore.string\n* (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\n* Underscore.string is freely distributable under the terms of the MIT license.\n* Documentation: https://github.com/epeli/underscore.string\n* Some code is borrowed from MooTools and Alexandru Marasteanu.\n* Version '3.3.4'\n* @preserve\n*/\n\n'use strict';\n\nfunction s(value) {\n  /* jshint validthis: true */\n  if (!(this instanceof s)) return new s(value);\n  this._wrapped = value;\n}\n\ns.VERSION = '3.3.4';\n\ns.isBlank          = require('./isBlank');\ns.stripTags        = require('./stripTags');\ns.capitalize       = require('./capitalize');\ns.decapitalize     = require('./decapitalize');\ns.chop             = require('./chop');\ns.trim             = require('./trim');\ns.clean            = require('./clean');\ns.cleanDiacritics  = require('./cleanDiacritics');\ns.count            = require('./count');\ns.chars            = require('./chars');\ns.swapCase         = require('./swapCase');\ns.escapeHTML       = require('./escapeHTML');\ns.unescapeHTML     = require('./unescapeHTML');\ns.splice           = require('./splice');\ns.insert           = require('./insert');\ns.replaceAll       = require('./replaceAll');\ns.include          = require('./include');\ns.join             = require('./join');\ns.lines            = require('./lines');\ns.dedent           = require('./dedent');\ns.reverse          = require('./reverse');\ns.startsWith       = require('./startsWith');\ns.endsWith         = require('./endsWith');\ns.pred             = require('./pred');\ns.succ             = require('./succ');\ns.titleize         = require('./titleize');\ns.camelize         = require('./camelize');\ns.underscored      = require('./underscored');\ns.dasherize        = require('./dasherize');\ns.classify         = require('./classify');\ns.humanize         = require('./humanize');\ns.ltrim            = require('./ltrim');\ns.rtrim            = require('./rtrim');\ns.truncate         = require('./truncate');\ns.prune            = require('./prune');\ns.words            = require('./words');\ns.pad              = require('./pad');\ns.lpad             = require('./lpad');\ns.rpad             = require('./rpad');\ns.lrpad            = require('./lrpad');\ns.sprintf          = require('./sprintf');\ns.vsprintf         = require('./vsprintf');\ns.toNumber         = require('./toNumber');\ns.numberFormat     = require('./numberFormat');\ns.strRight         = require('./strRight');\ns.strRightBack     = require('./strRightBack');\ns.strLeft          = require('./strLeft');\ns.strLeftBack      = require('./strLeftBack');\ns.toSentence       = require('./toSentence');\ns.toSentenceSerial = require('./toSentenceSerial');\ns.slugify          = require('./slugify');\ns.surround         = require('./surround');\ns.quote            = require('./quote');\ns.unquote          = require('./unquote');\ns.repeat           = require('./repeat');\ns.naturalCmp       = require('./naturalCmp');\ns.levenshtein      = require('./levenshtein');\ns.toBoolean        = require('./toBoolean');\ns.exports          = require('./exports');\ns.escapeRegExp     = require('./helper/escapeRegExp');\ns.wrap             = require('./wrap');\ns.map              = require('./map');\n\n// Aliases\ns.strip     = s.trim;\ns.lstrip    = s.ltrim;\ns.rstrip    = s.rtrim;\ns.center    = s.lrpad;\ns.rjust     = s.lpad;\ns.ljust     = s.rpad;\ns.contains  = s.include;\ns.q         = s.quote;\ns.toBool    = s.toBoolean;\ns.camelcase = s.camelize;\ns.mapChars  = s.map;\n\n\n// Implement chaining\ns.prototype = {\n  value: function value() {\n    return this._wrapped;\n  }\n};\n\nfunction fn2method(key, fn) {\n  if (typeof fn !== 'function') return;\n  s.prototype[key] = function() {\n    var args = [this._wrapped].concat(Array.prototype.slice.call(arguments));\n    var res = fn.apply(null, args);\n    // if the result is non-string stop the chain and return the value\n    return typeof res === 'string' ? new s(res) : res;\n  };\n}\n\n// Copy functions to instance methods for chaining\nfor (var key in s) fn2method(key, s[key]);\n\nfn2method('tap', function tap(string, fn) {\n  return fn(string);\n});\n\nfunction prototype2method(methodName) {\n  fn2method(methodName, function(context) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return String.prototype[methodName].apply(context, args);\n  });\n}\n\nvar prototypeMethods = [\n  'toUpperCase',\n  'toLowerCase',\n  'split',\n  'replace',\n  'slice',\n  'substring',\n  'substr',\n  'concat'\n];\n\nfor (var method in prototypeMethods) prototype2method(prototypeMethods[method]);\n\n\nmodule.exports = s;\n"]},"metadata":{},"sourceType":"script"}