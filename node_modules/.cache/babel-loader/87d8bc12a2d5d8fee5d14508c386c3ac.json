{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memorymodal/memorymodal.js\";\nimport React from 'react';\nimport { getAllMemoryFiles, getTaggedPeople, getMemoryClouds, getMemorySearchWords, getCloudPeople } from '../memriioserver';\nconst backdropStyle = {\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  backgroundColor: 'rgba(0,0,0,0.85)',\n  padding: 50\n};\nconst modalStyle = {\n  backgroundColor: 'white',\n  boarderRadius: 5,\n  maxWidth: '75%',\n  minHeight: 300,\n  margin: '0 auto',\n  padding: 30,\n  position: 'center'\n};\nconst footerStyle = {\n  position: 'absolule',\n  bottom: 20\n};\n\nclass MemoryModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memory: null,\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      keywords: [],\n      // this is temporary   \n      memfiles: null,\n      cloudPeople: [],\n      userClouds: []\n    };\n\n    this.onHide = () => {\n      this.props.onHideModal(this.props.memory);\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (this.props.memory) {\n        if (this.props.memory.memid !== prevProps.memory.memid) {\n          console.log('modal didmount B : ' + this.props.memory.title);\n          getAllMemoryFiles(this.props.memory.memid, memoryFiles => {\n            this.setState({\n              memfiles: memoryFiles\n            });\n          });\n          getTaggedPeople(this.props.memory.memid, people => {\n            this.setState({\n              taggedPeople: people\n            });\n          });\n          getMemoryClouds(this.props.memory.memid, clouds => {\n            this.populateCloudInfo(clouds);\n          });\n          getMemorySearchWords(this.props.memory.memid, words => {\n            this.populateSearchWords(words);\n          });\n        }\n      }\n    };\n\n    this.populateSearchWords = words => {\n      words.map(worditem => {\n        this.state.keywords.push(worditem.keyword);\n      });\n      this.setState({\n        searchWords: words\n      });\n    };\n\n    this.populateCloudInfo = clouds => {\n      this.setState({\n        memoryClouds: clouds\n      });\n      getCloudPeople(clouds, people => {\n        this.setState({\n          cloudPeople: people\n        });\n      });\n    };\n  }\n\n  render() {\n    if (this.props.show) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: backdropStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: modalStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, this.props.children), /*#__PURE__*/React.createElement(\"div\", {\n        style: footerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onHide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, \" Hide\")));\n    } else {\n      return null;\n    }\n  }\n\n}\n\n;\nexport default MemoryModal;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memorymodal/memorymodal.js"],"names":["React","getAllMemoryFiles","getTaggedPeople","getMemoryClouds","getMemorySearchWords","getCloudPeople","backdropStyle","position","top","bottom","left","right","backgroundColor","padding","modalStyle","boarderRadius","maxWidth","minHeight","margin","footerStyle","MemoryModal","Component","state","memory","taggedPeople","memoryClouds","searchWords","keywords","memfiles","cloudPeople","userClouds","onHide","props","onHideModal","componentDidUpdate","prevProps","prevState","memid","console","log","title","memoryFiles","setState","people","clouds","populateCloudInfo","words","populateSearchWords","map","worditem","push","keyword","render","show","children"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {getAllMemoryFiles, \n  getTaggedPeople,\n  getMemoryClouds,\n  getMemorySearchWords, \n  getCloudPeople,\n } from '../memriioserver'\n\nconst backdropStyle ={\n  position : 'fixed',\n  top : 0,\n  bottom : 0,\n  left : 0,\n  right : 0,\n  backgroundColor : 'rgba(0,0,0,0.85)',\n  padding: 50,\n}\n\nconst modalStyle = {\n  backgroundColor: 'white',\n  boarderRadius: 5,\n  maxWidth:'75%',\n  minHeight: 300,\n  \n  margin:'0 auto',\n  padding: 30,\n  position: 'center',\n  \n\n}\nconst footerStyle = {\n  position : 'absolule',\n  bottom : 20\n}\n\n\nclass MemoryModal extends React.Component{\n\n    \n    state ={\n        memory:null,\n        taggedPeople:[],\n        memoryClouds:[],\n        searchWords:[], \n        keywords:[],    // this is temporary   \n        memfiles:null,\n        cloudPeople:[],\n        userClouds:[],\n    }\n   \n\n    onHide = () =>{\n      this.props.onHideModal(this.props.memory)\n    }\n//---------------------------------------------------------------------------------\n\n  componentDidUpdate = (prevProps,prevState) =>{\n    \n    if(this.props.memory)\n    {\n      if(this.props.memory.memid !== prevProps.memory.memid){\n        console.log('modal didmount B : ' + this.props.memory.title);      \n        getAllMemoryFiles    (this.props.memory.memid,((memoryFiles)=>{this.setState({memfiles:memoryFiles})}))\n        getTaggedPeople      (this.props.memory.memid,((people)=>{this.setState({taggedPeople:people})}))\n        getMemoryClouds      (this.props.memory.memid,((clouds)=>{this.populateCloudInfo(clouds)}))\n        getMemorySearchWords (this.props.memory.memid,((words =>{this.populateSearchWords(words)})))\n      }      \n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n\n\n  populateSearchWords = (words) =>{\n    words.map(worditem =>{\n        this.state.keywords.push(worditem.keyword)\n    })\n    this.setState({searchWords:words})\n  }\n\n//------------------------------------------------------------------------\n\n  populateCloudInfo = (clouds) =>{\n\n    this.setState({memoryClouds:clouds})\n    getCloudPeople (clouds,((people)=>{this.setState({cloudPeople:people})}))\n\n    \n  }\n\n\n    render(){\n      if(this.props.show){\n        return(\n          <div style ={backdropStyle}>\n            <div style={modalStyle}>\n              {this.props.children}\n            </div>\n            <div style={footerStyle} >\n              <button \n                onClick={this.onHide}              \n              > Hide\n              </button>\n            </div>\n          </div>\n        )\n      }else{\n        return null\n      }        \n  }\n\n};  \n\n\nexport default MemoryModal;\n\n\n"]},"metadata":{},"sourceType":"module"}