{"ast":null,"code":"var makeString = require('./helper/makeString');\n\nvar strRepeat = require('./helper/strRepeat');\n\nmodule.exports = function pad(str, length, padStr, type) {\n  str = makeString(str);\n  length = ~~length;\n  var padlen = 0;\n  if (!padStr) padStr = ' ';else if (padStr.length > 1) padStr = padStr.charAt(0);\n\n  switch (type) {\n    case 'right':\n      padlen = length - str.length;\n      return str + strRepeat(padStr, padlen);\n\n    case 'both':\n      padlen = length - str.length;\n      return strRepeat(padStr, Math.ceil(padlen / 2)) + str + strRepeat(padStr, Math.floor(padlen / 2));\n\n    default:\n      // 'left'\n      padlen = length - str.length;\n      return strRepeat(padStr, padlen) + str;\n  }\n};","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/node_modules/underscore.string/pad.js"],"names":["makeString","require","strRepeat","module","exports","pad","str","length","padStr","type","padlen","charAt","Math","ceil","floor"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAAxB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,GAAb,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AACvDH,EAAAA,GAAG,GAAGN,UAAU,CAACM,GAAD,CAAhB;AACAC,EAAAA,MAAM,GAAG,CAAC,CAACA,MAAX;AAEA,MAAIG,MAAM,GAAG,CAAb;AAEA,MAAI,CAACF,MAAL,EACEA,MAAM,GAAG,GAAT,CADF,KAEK,IAAIA,MAAM,CAACD,MAAP,GAAgB,CAApB,EACHC,MAAM,GAAGA,MAAM,CAACG,MAAP,CAAc,CAAd,CAAT;;AAEF,UAAQF,IAAR;AACA,SAAK,OAAL;AACEC,MAAAA,MAAM,GAAGH,MAAM,GAAGD,GAAG,CAACC,MAAtB;AACA,aAAOD,GAAG,GAAGJ,SAAS,CAACM,MAAD,EAASE,MAAT,CAAtB;;AACF,SAAK,MAAL;AACEA,MAAAA,MAAM,GAAGH,MAAM,GAAGD,GAAG,CAACC,MAAtB;AACA,aAAOL,SAAS,CAACM,MAAD,EAASI,IAAI,CAACC,IAAL,CAAUH,MAAM,GAAG,CAAnB,CAAT,CAAT,GAA2CJ,GAA3C,GAAiDJ,SAAS,CAACM,MAAD,EAASI,IAAI,CAACE,KAAL,CAAWJ,MAAM,GAAG,CAApB,CAAT,CAAjE;;AACF;AAAS;AACPA,MAAAA,MAAM,GAAGH,MAAM,GAAGD,GAAG,CAACC,MAAtB;AACA,aAAOL,SAAS,CAACM,MAAD,EAASE,MAAT,CAAT,GAA4BJ,GAAnC;AATF;AAWD,CAtBD","sourcesContent":["var makeString = require('./helper/makeString');\nvar strRepeat = require('./helper/strRepeat');\n\nmodule.exports = function pad(str, length, padStr, type) {\n  str = makeString(str);\n  length = ~~length;\n\n  var padlen = 0;\n\n  if (!padStr)\n    padStr = ' ';\n  else if (padStr.length > 1)\n    padStr = padStr.charAt(0);\n\n  switch (type) {\n  case 'right':\n    padlen = length - str.length;\n    return str + strRepeat(padStr, padlen);\n  case 'both':\n    padlen = length - str.length;\n    return strRepeat(padStr, Math.ceil(padlen / 2)) + str + strRepeat(padStr, Math.floor(padlen / 2));\n  default: // 'left'\n    padlen = length - str.length;\n    return strRepeat(padStr, padlen) + str;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}