{"ast":null,"code":"var makeString = require('./helper/makeString');\n\nvar from = 'ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșşšŝťțţŭùúüűûñÿýçżźž',\n    to = 'aaaaaaaaaccceeeeeghiiiijllnnoooooooossssstttuuuuuunyyczzz';\nfrom += from.toUpperCase();\nto += to.toUpperCase();\nto = to.split(''); // for tokens requireing multitoken output\n\nfrom += 'ß';\nto.push('ss');\n\nmodule.exports = function cleanDiacritics(str) {\n  return makeString(str).replace(/.{1}/g, function (c) {\n    var index = from.indexOf(c);\n    return index === -1 ? c : to[index];\n  });\n};","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/node_modules/underscore.string/cleanDiacritics.js"],"names":["makeString","require","from","to","toUpperCase","split","push","module","exports","cleanDiacritics","str","replace","c","index","indexOf"],"mappings":"AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAAxB;;AAEA,IAAIC,IAAI,GAAI,2DAAZ;AAAA,IACEC,EAAE,GAAM,2DADV;AAGAD,IAAI,IAAIA,IAAI,CAACE,WAAL,EAAR;AACAD,EAAE,IAAIA,EAAE,CAACC,WAAH,EAAN;AAEAD,EAAE,GAAGA,EAAE,CAACE,KAAH,CAAS,EAAT,CAAL,C,CAEA;;AACAH,IAAI,IAAI,GAAR;AACAC,EAAE,CAACG,IAAH,CAAQ,IAAR;;AAGAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC7C,SAAOV,UAAU,CAACU,GAAD,CAAV,CAAgBC,OAAhB,CAAwB,OAAxB,EAAiC,UAASC,CAAT,EAAW;AACjD,QAAIC,KAAK,GAAGX,IAAI,CAACY,OAAL,CAAaF,CAAb,CAAZ;AACA,WAAOC,KAAK,KAAK,CAAC,CAAX,GAAeD,CAAf,GAAmBT,EAAE,CAACU,KAAD,CAA5B;AACD,GAHM,CAAP;AAID,CALD","sourcesContent":["\nvar makeString = require('./helper/makeString');\n\nvar from  = 'ąàáäâãåæăćčĉęèéëêĝĥìíïîĵłľńňòóöőôõðøśșşšŝťțţŭùúüűûñÿýçżźž',\n  to    = 'aaaaaaaaaccceeeeeghiiiijllnnoooooooossssstttuuuuuunyyczzz';\n\nfrom += from.toUpperCase();\nto += to.toUpperCase();\n\nto = to.split('');\n\n// for tokens requireing multitoken output\nfrom += 'ß';\nto.push('ss');\n\n\nmodule.exports = function cleanDiacritics(str) {\n  return makeString(str).replace(/.{1}/g, function(c){\n    var index = from.indexOf(c);\n    return index === -1 ? c : to[index];\n  });\n};\n"]},"metadata":{},"sourceType":"script"}