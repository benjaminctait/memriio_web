{"ast":null,"code":"import React from 'react'; //--Returns and array of of images and related meta data from the server-----------------------------------------------\n\nexport function getAllMemoryFiles(memoryid, callback) {\n  console.log('Memriio.getAllMemoryFiles : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('server response : ' + res.success);\n      console.log('server data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getTaggedPeople(memoryid, callback) {\n  console.log('Memriio.getTaggedPeople : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_associatedpeople_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('server response : ' + res.success);\n      console.log('server data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //----------------------------------------------------------------------------------------------------------------------\n\nexport function getMemorySearchWords(memoryid, callback) {\n  console.log('Memriio.getMemorySearchWords : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_searchwords_memid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('getMemorySearchWords server response : ' + res.success);\n      callback(res.data);\n    } else {\n      console.log('getMemorySearchWords server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //----------------------------------------------------------------------------------------------------------------------\n\nexport function setMemorySearchWords(memoryid, searchwords) {\n  console.log('Memriio.setMemorySearchWords : memoryid ' + memoryid + ' searchwords count = ' + searchwords.length);\n  fetch('https://memriio-api-0.herokuapp.com/set_searchwords_memid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      searchwords: searchwords\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('setMemorySearchWords server response : ' + res.success);\n    } else {\n      console.log('setMemorySearchWords server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //-------------------------------------------------------------------------------------------------------------------------\n\nexport function getMemoryClouds(memoryid, callback) {\n  console.log('Memriio.getMemoryclouds : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_associatedclouds_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('getMemoryclouds server response : ' + res.success);\n      console.log('getMemoryclouds response data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('getMemoryclouds server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getCloudPeople(clouds, callback) {\n  console.log('Memriio.getCloudPeople : clouds ' + JSON.stringify(clouds));\n  fetch('https://memriio-api-0.herokuapp.com/get_cloud_people_clouds', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      clouds: clouds\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('getCloudPeople server response : ' + res.success);\n      console.log('getCloudPeople response data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('getCloudPeople server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateHeroImage(memoryid, heroImageid) {\n  console.log('Memriio.getAllImages : memoryid ' + memoryid);\n} //------------------------------------------------------------\n\nexport function updateTitle(memoryid, newTitle) {\n  console.log('Memriio.updateTitle : memoryid ' + memoryid + ' title : ' + newTitle);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_title', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newTitle: newTitle\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateTitle : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateTitle : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateDescription(memoryid, newDescription) {\n  console.log('Memriio.updateDescription : memoryid ' + memoryid + ' description : ' + newDescription);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_description', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newDescription: newDescription\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateDescription : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateDescription : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function deleteMemory(memoryid) {\n  console.log('Memriio.deleteMemory : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/delete_memory', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('deleteMemory : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('deleteMemory : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateStory(memoryid, newStory) {\n  let len = 0;\n\n  if (newStory) {\n    len = newStory.length;\n  }\n\n  console.log('Memriio.updateStory : memoryid ' + memoryid + ' story.length : ' + len + ' chars');\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_story', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newStory: newStory\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateStory : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateStory : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateTaggedPeople(memoryid, taggedPeople) {} //------------------------------------------------------------\n\nexport function updateClouds(memoryid, clouds) {} //------------------------------------------------------------\n\nexport function updateCardType(memoryid, cardtype) {\n  console.log('Memriio.updateCardType : memoryid ' + memoryid + ' card type : ' + cardtype);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_cardtype', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      cardtype: cardtype\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateCardType :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateCardType :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateLocation(memoryid, newLocation) {\n  console.log('Memriio.updateLocation : memoryid ' + memoryid + ' location : ' + newLocation);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_location', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newLocation: newLocation\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateLocation :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateLocation :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function addTaggedPerson(memoryid, userid) {\n  console.log('Memriio.addTaggedPerson : memoryid ' + memoryid + ' user : ' + userid);\n  fetch('https://memriio-api-0.herokuapp.com/associatePerson', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      userid: userid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('addTaggedPerson :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('addTaggedPerson :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function addTaggedCloud(memoryid, cloudid) {\n  console.log('Memriio.addTaggedCloud : memoryid ' + memoryid + ' clouid : ' + cloudid);\n  fetch('https://memriio-api-0.herokuapp.com/associateGroup', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      groupid: cloudid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('addTaggedCloud :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('addTaggedCloud :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function deleteTaggedPerson(memoryid, userid) {\n  console.log('Memriio.deleteTaggedPerson : memoryid ' + memoryid + ' user : ' + userid);\n  fetch('https://memriio-api-0.herokuapp.com/removeTaggedPerson', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      userid: userid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('deleteTaggedPerson :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('deleteTaggedPerson :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //---------------------------------------------------------------------------------------------------------------\n\nexport function deleteMemoryImage(memoryid, fileurl) {\n  console.log('Memriio.deleteMemoryImage : memoryid ' + memoryid + ' cloud : ' + fileurl);\n  fetch('https://memriio-api-0.herokuapp.com/removeFileFromMemory_fileurl', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      fileurl: fileurl\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('deleteMemoryImage :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('deleteMemoryImage :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //---------------------------------------------------------------------------------------------------------------\n\nexport function setHeroImage(memoryid, fileurl) {\n  console.log('Memriio.setHeroImage : memoryid ' + memoryid + ' cloud : ' + fileurl);\n  fetch('https://memriio-api-0.herokuapp.com/setHeroImage_fileurl', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      fileurl: fileurl\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('setHeroImage :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('setHeroImage :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //---------------------------------------------------------------------------------------------------------------\n\nexport function deleteTaggedCloud(memoryid, cloudid) {\n  console.log('Memriio.deleteTaggedCloud : memoryid ' + memoryid + ' cloud : ' + cloudid);\n  fetch('https://memriio-api-0.herokuapp.com/removeCloudFromMemory', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memid: memoryid,\n      cloudid: cloudid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('deleteTaggedCloud :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('deleteTaggedCloud :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function getUser(userid, callback) {\n  console.log('Memriio.getUser : userid ' + userid);\n  fetch('https://memriio-api-0.herokuapp.com/profile/:id', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userid: userid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.status != 400) {\n      console.log('getUser :server  : ' + res.userid + ' ' + res.firstname + ' ' + res.lastname);\n      callback(res);\n    } else {\n      console.log('getUser :server  : ' + res.status);\n    }\n  });\n} //------------------------------------------------------------\n\nexport function getUserClouds(userid, callback) {\n  console.log('Memriio.getUserClouds : userid ' + userid);\n  fetch('https://memriio-api-0.herokuapp.com/get_clouds_userid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      userID: userid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('getUserClouds :server response : ' + res.success);\n      callback(res.data);\n      return true;\n    } else {\n      console.log('getUserClouds :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //-------------------------------------------------------------------------------\n\nexport async function getObjectSignedurl(fileName) {\n  return new Promise((resolve, reject) => {\n    fetch('https://memriio-api-0.herokuapp.com/getObject_signedurl', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        fileName: fileName\n      })\n    }).then(response => response.json()).then(response => {\n      if (response.success) {\n        resolve(response.signedURL);\n      } else {\n        reject(response.error);\n      }\n    });\n  });\n} //-------------------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memriioserver.js"],"names":["React","getAllMemoryFiles","memoryid","callback","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","res","success","data","error","getTaggedPeople","getMemorySearchWords","memid","setMemorySearchWords","searchwords","length","getMemoryClouds","getCloudPeople","clouds","updateHeroImage","heroImageid","updateTitle","newTitle","updateDescription","newDescription","deleteMemory","updateStory","newStory","len","updateTaggedPeople","taggedPeople","updateClouds","updateCardType","cardtype","updateLocation","newLocation","addTaggedPerson","userid","addTaggedCloud","cloudid","groupid","deleteTaggedPerson","deleteMemoryImage","fileurl","setHeroImage","deleteTaggedCloud","getUser","status","firstname","lastname","getUserClouds","userID","getObjectSignedurl","fileName","Promise","resolve","reject","signedURL"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n//--Returns and array of of images and related meta data from the server-----------------------------------------------\n\nexport function getAllMemoryFiles  (memoryid,callback) {\n    console.log('Memriio.getAllMemoryFiles : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('server response : ' + res.success);\n                        console.log('server data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getTaggedPeople  (memoryid,callback) {\n    console.log('Memriio.getTaggedPeople : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_associatedpeople_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('server response : ' + res.success);\n                        console.log('server data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//----------------------------------------------------------------------------------------------------------------------\n\nexport function getMemorySearchWords  (memoryid,callback) {\n    console.log('Memriio.getMemorySearchWords : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_searchwords_memid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('getMemorySearchWords server response : ' + res.success);\n                        callback(res.data)\n                    }else{\n                        console.log('getMemorySearchWords server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//----------------------------------------------------------------------------------------------------------------------\n\nexport function setMemorySearchWords  (memoryid,searchwords) {\n    console.log('Memriio.setMemorySearchWords : memoryid ' + memoryid + ' searchwords count = ' + searchwords.length)\n    \n    fetch('https://memriio-api-0.herokuapp.com/set_searchwords_memid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,searchwords:searchwords})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('setMemorySearchWords server response : ' + res.success);\n                        \n                    }else{\n                        console.log('setMemorySearchWords server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n\n//-------------------------------------------------------------------------------------------------------------------------\n\nexport function getMemoryClouds  (memoryid,callback) {\n    console.log('Memriio.getMemoryclouds : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_associatedclouds_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('getMemoryclouds server response : ' + res.success);\n                        console.log('getMemoryclouds response data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('getMemoryclouds server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getCloudPeople  (clouds,callback) {\n    console.log('Memriio.getCloudPeople : clouds ' + JSON.stringify(clouds) )\n    \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_cloud_people_clouds', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({clouds:clouds})})\n\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('getCloudPeople server response : ' + res.success);\n                        console.log('getCloudPeople response data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('getCloudPeople server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n\n//------------------------------------------------------------\n\nexport function updateHeroImage (memoryid,heroImageid ){\n    console.log('Memriio.getAllImages : memoryid ' + memoryid )\n\n}\n\n//------------------------------------------------------------\n\nexport function updateTitle (memoryid,newTitle){\n    console.log('Memriio.updateTitle : memoryid ' + memoryid + ' title : ' + newTitle)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_title', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newTitle:newTitle})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateTitle : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateTitle : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n//------------------------------------------------------------\n\nexport function updateDescription (memoryid,newDescription){\n    console.log('Memriio.updateDescription : memoryid ' + memoryid + ' description : ' + newDescription)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_description', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newDescription:newDescription})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateDescription : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateDescription : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n//------------------------------------------------------------\n\nexport function deleteMemory (memoryid){\n    \n    console.log('Memriio.deleteMemory : memoryid ' + memoryid )\n  \n    fetch('https://memriio-api-0.herokuapp.com/delete_memory', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('deleteMemory : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('deleteMemory : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n\n//------------------------------------------------------------\n\nexport function updateStory (memoryid,newStory){\n    let len = 0\n    if(newStory){len = newStory.length}\n    console.log('Memriio.updateStory : memoryid ' + memoryid + ' story.length : ' + len + ' chars')\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_story', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newStory:newStory})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateStory : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateStory : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n\n}\n\n//------------------------------------------------------------\n\nexport function updateTaggedPeople (memoryid,taggedPeople){\n   \n    \n}\n\n//------------------------------------------------------------\n\nexport function updateClouds (memoryid,clouds){\n    \n\n}\n\n//------------------------------------------------------------\n\nexport function updateCardType (memoryid,cardtype){\n\n    console.log('Memriio.updateCardType : memoryid ' + memoryid + ' card type : ' + cardtype)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_cardtype', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,cardtype:cardtype})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateCardType :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateCardType :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//------------------------------------------------------------\n\nexport function updateLocation (memoryid,newLocation){\n    console.log('Memriio.updateLocation : memoryid ' + memoryid + ' location : ' + newLocation)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_location', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newLocation:newLocation})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateLocation :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateLocation :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//------------------------------------------------------------\n\nexport function addTaggedPerson (memoryid,userid){\n    console.log('Memriio.addTaggedPerson : memoryid ' + memoryid + ' user : ' + userid)\n  \n    fetch('https://memriio-api-0.herokuapp.com/associatePerson', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,userid:userid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('addTaggedPerson :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('addTaggedPerson :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//------------------------------------------------------------\n\nexport function addTaggedCloud (memoryid,cloudid){\n    console.log('Memriio.addTaggedCloud : memoryid ' + memoryid + ' clouid : ' + cloudid)\n  \n    fetch('https://memriio-api-0.herokuapp.com/associateGroup', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,groupid:cloudid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('addTaggedCloud :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('addTaggedCloud :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n\n//------------------------------------------------------------\n\nexport function deleteTaggedPerson (memoryid,userid){\n    console.log('Memriio.deleteTaggedPerson : memoryid ' + memoryid + ' user : ' + userid)\n  \n    fetch('https://memriio-api-0.herokuapp.com/removeTaggedPerson', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,userid:userid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('deleteTaggedPerson :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('deleteTaggedPerson :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//---------------------------------------------------------------------------------------------------------------\n\nexport function deleteMemoryImage (memoryid,fileurl){\n    console.log('Memriio.deleteMemoryImage : memoryid ' + memoryid + ' cloud : ' + fileurl)\n  \n    fetch('https://memriio-api-0.herokuapp.com/removeFileFromMemory_fileurl', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,fileurl:fileurl})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('deleteMemoryImage :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('deleteMemoryImage :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//---------------------------------------------------------------------------------------------------------------\n\nexport function setHeroImage (memoryid,fileurl){\n    console.log('Memriio.setHeroImage : memoryid ' + memoryid + ' cloud : ' + fileurl)\n  \n    fetch('https://memriio-api-0.herokuapp.com/setHeroImage_fileurl', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,fileurl:fileurl})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('setHeroImage :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('setHeroImage :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//---------------------------------------------------------------------------------------------------------------\n\nexport function deleteTaggedCloud (memoryid,cloudid){\n    console.log('Memriio.deleteTaggedCloud : memoryid ' + memoryid + ' cloud : ' + cloudid)\n  \n    fetch('https://memriio-api-0.herokuapp.com/removeCloudFromMemory', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memid:memoryid,cloudid:cloudid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('deleteTaggedCloud :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('deleteTaggedCloud :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//------------------------------------------------------------\n\nexport function getUser (userid,callback){\n    console.log('Memriio.getUser : userid ' + userid )\n  \n    fetch('https://memriio-api-0.herokuapp.com/profile/:id', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({userid:userid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.status != 400 ){\n                        console.log('getUser :server  : ' + res.userid + ' ' + res.firstname + ' ' + res.lastname);\n                        callback(res)                        \n                    }else{\n                        console.log('getUser :server  : ' + res.status );                          \n                    }\n                })\n}\n\n//------------------------------------------------------------\n\nexport function getUserClouds (userid,callback){\n    console.log('Memriio.getUserClouds : userid ' + userid )\n  \n    fetch('https://memriio-api-0.herokuapp.com/get_clouds_userid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({userID:userid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('getUserClouds :server response : ' + res.success);\n                        callback(res.data)\n                        return true\n                    }else{\n                        console.log('getUserClouds :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//-------------------------------------------------------------------------------\n\nexport async function getObjectSignedurl (fileName) {\n    \n    return new Promise((resolve,reject) => {\n        fetch('https://memriio-api-0.herokuapp.com/getObject_signedurl', {\n            method: 'post',headers: {\n                'Content-Type':'application/json'},\n                    body:JSON.stringify({fileName: fileName})})\n                    .then(response => response.json())\n                    .then(response => {\n                        if ( response.success){\n                            resolve(response.signedURL)                       \n                        }else{\n                            reject( response.error)\n                        }\n                    })\n            })\n \n}\n\n//-------------------------------------------------------------------------------\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}