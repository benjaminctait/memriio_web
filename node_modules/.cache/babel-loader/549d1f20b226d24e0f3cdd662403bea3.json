{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/memrii/web/memriio_web/src/components/navigation/navigation.js\";\nimport React from 'react';\nimport logo from \"./memrii_logo.png\";\nimport * as DropSearch from '../dropsearch/dropsearch';\nimport * as mem from '../memriioserver';\nimport * as ur from '../userrolls';\nimport NewMemoryModal from '../memorymodal/newmemorymodal';\nimport './navigation.css';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchwords: '',\n      userClouds: null,\n      selectedClouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false,\n      showNewPostModal: false\n    };\n\n    this.handleSignOut = () => {\n      this.state = {\n        searchwords: '',\n        userClouds: null,\n        selectedClouds: null,\n        showPersonalMemoryOptions: false,\n        personalMemoryunsharedOnly: false\n      };\n      console.log('handleSignout.userClouds ', this.state);\n      this.props.setCloudsLoaded(false);\n      this.props.onRouteChange('signin');\n    };\n\n    this.componentDidMount = () => {\n      console.log('NAV.mount');\n      console.log('');\n    };\n\n    this.componentDidUpdate = () => {\n      console.log('NAV.update : ', this.props.user);\n      console.log('');\n    };\n\n    this.onSearchBoxChange = event => {\n      let text = event.target.value.toLowerCase();\n      let tmparray = [];\n      console.log('navigation-onSearchBoxChange : ' + text.split(\" \"));\n\n      if (event.target.value !== '') {\n        tmparray = text.split(\" \");\n      }\n\n      this.setState({\n        searchwords: tmparray\n      }, this.showMemories);\n    };\n\n    this.handleChangeSearchClouds = (clouds, userid) => {\n      let cloudstring = '';\n      clouds.map(cloud => {\n        cloudstring += cloud.value + ',';\n      });\n\n      if (cloudstring) {\n        cloudstring = cloudstring.slice(0, cloudstring.length - 1);\n      }\n\n      mem.updatedUserClouds(userid, cloudstring);\n      this.setState({\n        selectedClouds: clouds\n      }, this.showMemories);\n    };\n\n    this.showMemories = () => {\n      let selected = this.state.selectedClouds;\n      let searchwords = this.state.searchwords;\n      let cloudids = [];\n      if (selected) cloudids = selected.map(cloud => {\n        return parseInt(cloud.value);\n      });\n      console.log('showMemories ', cloudids);\n\n      if (cloudids.length === 0) {\n        console.log('showMemories calling loadMemories(null)');\n        this.props.loadMemories(null);\n      } else if (selected.length === 1 && selected[0].value === 0) {\n        // personal only\n        console.log('personal only ' + selected[0].value);\n\n        if (this.state.personalMemoryunsharedOnly) {\n          // personal only - unshared only\n          console.log('personal : unshared ' + this.props.userid + ' ' + searchwords);\n          mem.getMemories_PersonalOnly_Unshared(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // personal only - bth shared and undshared\n          console.log('personal : all ' + this.props.userid + ' ' + searchwords);\n          mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else if (cloudids.includes(0)) {\n        // personal cloud + other clouds\n        console.log('personal cloud + other clouds  : cloudids ' + cloudids);\n\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log('personal cloud + other clouds with searchwords ' + this.props.userid + ' ' + searchwords + ' ' + cloudids);\n          mem.getMemories_User_Words_Clouds(this.props.userid, searchwords, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log('personal cloud + other clouds no searchwords ' + this.props.userid + ' : ' + cloudids);\n          mem.getMemories_User_Clouds(this.props.userid, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else {\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log('other clouds only with searchwords : ' + searchwords + ' cloudids : ' + cloudids);\n          mem.getMemories_Words_Clouds(cloudids, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log('other clouds only no searchwords : cloud ids' + cloudids);\n          mem.getMemories_Clouds(cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      }\n    };\n\n    this.loadUserClouds = userid => {\n      let temp = [];\n      console.log('loadUserClouds ', userid);\n      if (userid) mem.getUserClouds(userid, clouds => {\n        clouds.push({\n          id: 0,\n          name: 'Personal'\n        });\n        clouds.reverse();\n        clouds.map(cloud => {\n          if (this.props.startingClouds.includes(parseInt(cloud.id))) temp.push({\n            value: cloud.id,\n            name: cloud.name\n          });\n        });\n        this.setState({\n          userClouds: clouds,\n          selectedClouds: temp\n        }, () => {\n          this.props.setCloudsLoaded(true);\n          this.showMemories();\n        });\n      });\n    };\n\n    this.handleAdminClick = () => {\n      this.props.onRouteChange('admin');\n    };\n\n    this.handleRunTest = () => {\n      console.log('this does nothing anymore');\n    };\n\n    this.handleShowNewMemory = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleUploadInProgress = () => {\n      console.log('hide newmemory modal');\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleNewPost = memory => {\n      this.props.onNewMemory(memory);\n    };\n\n    this.handleCancelNewPost = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.renderStandardNav = () => {\n      const {\n        onRouteChange,\n        userid\n      } = this.props;\n      let cloudbox = null;\n      let adminButton = null;\n      let selected = this.state.selectedClouds;\n\n      if (ur.showAdminOnNavBar(userid)) {\n        adminButton = /*#__PURE__*/React.createElement(\"li\", {\n          className: \"floatRight\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"linkText\",\n          onClick: this.handleAdminClick,\n          href: \"#admin\",\n          title: \"Administration\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }\n        }, \"Admin\"));\n      }\n\n      console.log('renderStandardNav.userClouds ', this.state.userClouds);\n\n      if (this.props.cloudsLoaded) {\n        cloudbox = DropSearch.cloudDropSearch(null, this.state.userClouds, selected, true, false, this.handleChangeSearchClouds, userid);\n      } else {\n        this.loadUserClouds(userid);\n      }\n\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleSignOut,\n        className: \"linkText\",\n        href: \"#\",\n        title: \"Log Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }\n      }, \"Sign Out\")), adminButton, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"linkText\",\n        onClick: this.handleShowNewMemory,\n        href: \"#newpost\",\n        title: \"New\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, \"New\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.onSearchBoxChange,\n        className: \"searchBox\",\n        type: \"text\",\n        \"aria-describedby\": \"name-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }, cloudbox), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(NewMemoryModal, {\n        key: 'memmodal' + 42,\n        userid: this.props.userid,\n        userClouds: this.state.userClouds,\n        show: this.state.showNewPostModal,\n        onCancelNewMemory: this.handleCancelNewPost,\n        onAddNewMemory: this.handleNewPost,\n        onUploading: this.handleUploadInProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    this.renderSignInNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"signin\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Log \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      }, \"Sign In\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }))));\n    };\n\n    this.renderAdminNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange('home'),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Home \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }\n      }, \"Home\")));\n    };\n  }\n\n  //---------------------------------------------------------------------------------\n  render() {\n    const {\n      userSignedin,\n      currentRoute\n    } = this.props;\n    console.log('Nav.render ', this.state.userClouds);\n\n    if (userSignedin()) {\n      if (currentRoute === 'home') {\n        return this.renderStandardNav();\n      } else if (currentRoute === 'displayMemory') {\n        return null;\n      } else if (currentRoute === 'admin') {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  } //---------------------------------------------------------------------------------\n  //---------------------------------------------------------------------------------\n\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/bentait/memrii/web/memriio_web/src/components/navigation/navigation.js"],"names":["React","logo","DropSearch","mem","ur","NewMemoryModal","Navigation","Component","constructor","props","state","searchwords","userClouds","selectedClouds","showPersonalMemoryOptions","personalMemoryunsharedOnly","showNewPostModal","handleSignOut","console","log","setCloudsLoaded","onRouteChange","componentDidMount","componentDidUpdate","user","onSearchBoxChange","event","text","target","value","toLowerCase","tmparray","split","setState","showMemories","handleChangeSearchClouds","clouds","userid","cloudstring","map","cloud","slice","length","updatedUserClouds","selected","cloudids","parseInt","loadMemories","getMemories_PersonalOnly_Unshared","then","memories","error","getMemories_PersonalOnly_All","includes","getMemories_User_Words_Clouds","getMemories_User_Clouds","getMemories_Words_Clouds","getMemories_Clouds","loadUserClouds","temp","getUserClouds","push","id","name","reverse","startingClouds","handleAdminClick","handleRunTest","handleShowNewMemory","handleUploadInProgress","handleNewPost","memory","onNewMemory","handleCancelNewPost","renderStandardNav","cloudbox","adminButton","showAdminOnNavBar","cloudsLoaded","cloudDropSearch","renderSignInNav","renderAdminNav","render","userSignedin","currentRoute"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport logo from \"./memrii_logo.png\"\nimport * as DropSearch from '../dropsearch/dropsearch'\nimport * as mem from '../memriioserver'\nimport * as ur from '../userrolls'\nimport NewMemoryModal from '../memorymodal/newmemorymodal'\nimport './navigation.css'\n\n\nclass Navigation extends React.Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    state={\n        searchwords:'',\n        userClouds:null,\n        selectedClouds:null,\n        showPersonalMemoryOptions:false,\n        personalMemoryunsharedOnly : false,\n        showNewPostModal:false, \n    }\n\n\n//---------------------------------------------------------------------------------    \n\nhandleSignOut = () => {\n    \n    this.state={\n        searchwords:'',\n        userClouds:null,\n        selectedClouds:null,\n        showPersonalMemoryOptions:false,\n        personalMemoryunsharedOnly : false,          \n    }\n    console.log('handleSignout.userClouds ',this.state);\n    this.props.setCloudsLoaded(false)\n    this.props.onRouteChange('signin')\n}\n\n//---------------------------------------------------------------------------------\n\ncomponentDidMount = ()=>{\n    console.log('NAV.mount');\n    console.log('');\n}\n\ncomponentDidUpdate = ()=>{\n    console.log('NAV.update : ',this.props.user);\n    console.log('');\n}\n\n//---------------------------------------------------------------------------------\n\nonSearchBoxChange = (event) =>{\n    \n    let text = event.target.value.toLowerCase()\n    let tmparray = []\n\n    console.log('navigation-onSearchBoxChange : ' + text.split(\" \"))\n    \n    if(event.target.value !== ''){\n        tmparray = text.split(\" \")\n    }\n    this.setState({searchwords:tmparray},this.showMemories )      \n}\n\n\n//---------------------------------------------------------------------------------\n\nhandleChangeSearchClouds = (clouds,userid) =>{\n\n    let cloudstring = ''\n    clouds.map(cloud => {\n        cloudstring += cloud.value + ','\n    })\n    if(cloudstring){cloudstring = cloudstring.slice(0,cloudstring.length-1)}\n    \n    mem.updatedUserClouds(userid,cloudstring)\n\n    this.setState({selectedClouds:clouds},this.showMemories )\n}\n\n//---------------------------------------------------------------------------------\n\nshowMemories = () =>{\n   \n    let selected = this.state.selectedClouds\n    let searchwords = this.state.searchwords\n    let cloudids = []\n\n    \n    if(selected) cloudids = selected.map(cloud => {return parseInt(cloud.value)})\n    console.log( 'showMemories ', cloudids )\n\n    \n    if(cloudids.length === 0){\n        console.log('showMemories calling loadMemories(null)');\n        this.props.loadMemories(null)\n\n    }else if (selected.length === 1 && selected[0].value === 0 ){  // personal only\n        console.log('personal only ' + selected[0].value);\n        if(this.state.personalMemoryunsharedOnly){                 // personal only - unshared only\n            \n            console.log('personal : unshared ' + this.props.userid + ' ' + searchwords);\n            mem.getMemories_PersonalOnly_Unshared(this.props.userid,searchwords)\n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n\n        }else {                                                     // personal only - bth shared and undshared\n            \n            console.log('personal : all ' + this.props.userid + ' ' + searchwords);\n            mem.getMemories_PersonalOnly_All(this.props.userid,searchwords)\n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n\n        }\n    }else if (cloudids.includes(0) ){                                // personal cloud + other clouds\n        console.log('personal cloud + other clouds  : cloudids ' + cloudids );\n \n        if(searchwords.length>0){                                   // clouds + searchwords\n            \n            console.log('personal cloud + other clouds with searchwords ' + this.props.userid + ' ' + searchwords + ' ' + cloudids );\n            mem.getMemories_User_Words_Clouds(this.props.userid,searchwords,cloudids)\n           .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        \n        }else{                                                      // clouds but no search words\n            \n            console.log('personal cloud + other clouds no searchwords ' + this.props.userid + ' : ' +  cloudids );\n            mem.getMemories_User_Clouds(this.props.userid,cloudids)            \n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        }\n    }else{\n        if(searchwords.length>0){                                   // clouds + searchwords\n            \n            console.log('other clouds only with searchwords : ' +  searchwords + ' cloudids : ' + cloudids );\n            mem.getMemories_Words_Clouds(cloudids,searchwords)\n           .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        \n        }else{                                                      // clouds but no search words\n            \n            console.log('other clouds only no searchwords : cloud ids' + cloudids );\n            mem.getMemories_Clouds(cloudids)            \n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        }\n    }\n    \n}\n\n//---------------------------------------------------------------------------------\n\nrender(){\n    \n    const {userSignedin,currentRoute} = this.props\n    console.log('Nav.render ',this.state.userClouds);\n    if(userSignedin()){\n        if      (currentRoute === 'home')           { return ( this.renderStandardNav() )\n        }else if(currentRoute === 'displayMemory')  { return ( null ) \n        }else if(currentRoute === 'admin')          { return ( this.renderAdminNav()    ) }\n            \n    }else{ return ( this.renderSignInNav() )}\n}\n\n//---------------------------------------------------------------------------------\n\nloadUserClouds = (userid) => { \n\n    let temp =[]\n    console.log('loadUserClouds ', userid );\n    if(userid) mem.getUserClouds(userid,(clouds => {   \n           \n        clouds.push({\n            id:0,\n            name:'Personal'\n        })  \n        clouds.reverse()\n        clouds.map(cloud => {\n            if(this.props.startingClouds.includes( parseInt(cloud.id) )) temp.push({value : cloud.id, name: cloud.name})\n        })\n        \n        this.setState({ userClouds : clouds , selectedClouds : temp }, ()=>{\n                this.props.setCloudsLoaded(true)    \n                this.showMemories()\n            }) \n    }))\n    \n}\n\n\n//---------------------------------------------------------------------------------\n\nhandleAdminClick = () =>{\n    this.props.onRouteChange('admin')\n}\n\n//---------------------------------------------------------------------------------\n\nhandleRunTest = () => {\n    console.log('this does nothing anymore')\n}\n//-------------------------------------------------------------------------------\n\nhandleShowNewMemory = () =>{\n   this.setState({showNewPostModal:!this.state.showNewPostModal})\n}\n\n//-------------------------------------------------------------------------------\n\nhandleUploadInProgress = () => {\n    console.log('hide newmemory modal');\n    this.setState({showNewPostModal:!this.state.showNewPostModal})\n}\n//-------------------------------------------------------------------------------\n\nhandleNewPost = (memory) =>{    \n    this.props.onNewMemory(memory)\n}\n\n\n//---------------------------------------------------------------------------------\n\nhandleCancelNewPost = () =>{\n    this.setState({showNewPostModal:!this.state.showNewPostModal})\n}\n\n//---------------------------------------------------------------------------------\n\nrenderStandardNav =() =>{\n \n    const {onRouteChange,userid} = this.props\n    let cloudbox = null\n    let adminButton = null\n    let selected = this.state.selectedClouds\n\n    if(ur.showAdminOnNavBar(userid))\n    {\n        adminButton = \n        <li className='floatRight'>\n            <a className=\"linkText\" \n                onClick={this.handleAdminClick}\n                href=\"#admin\" \n                title=\"Administration\">Admin</a>\n        </li>\n    }\n    console.log('renderStandardNav.userClouds ',this.state.userClouds);\n    if(this.props.cloudsLoaded){       \n        \n        cloudbox = DropSearch.cloudDropSearch( null,this.state.userClouds,selected,true,false , this.handleChangeSearchClouds,userid)\n    }else{\n        this.loadUserClouds(userid)\n    }\n    \n    return(\n        <nav className='navBar'>\n            <ul>\n                <li className='floatRight'>\n                    <a  onClick={this.handleSignOut}\n                        className=\"linkText\" \n                        href=\"#\" \n                        title=\"Log Out\">Sign Out</a>\n                </li>\n\n                {adminButton}\n\n                <li className='floatRight'>\n                    <a className=\"linkText\" \n                        onClick={this.handleShowNewMemory}\n                        href=\"#newpost\" \n                        title=\"New\">New</a>\n                </li>\n\n                <li className='floatRight width50'>\n                    <input \n                        onChange ={this.onSearchBoxChange}\n                        className = 'searchBox'\n                        type=\"text\" \n                        aria-describedby=\"name-desc\"></input>\n                </li>\n\n                <li className='floatRight width50'>\n                    {cloudbox}\n                </li>                \n                \n                <li className='floatLeft'>\n                    <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n                </li>\n            </ul>\n            <NewMemoryModal \n                key                 = { 'memmodal' + 42}\n                userid              = { this.props.userid }\n                userClouds          = { this.state.userClouds }\n                show                = { this.state.showNewPostModal}\n                onCancelNewMemory   = { this.handleCancelNewPost }\n                onAddNewMemory      = { this.handleNewPost }\n                onUploading         = { this.handleUploadInProgress}\n                >\n                \n            </NewMemoryModal>      \n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\nrenderSignInNav = () => {\n \n    const onRouteChange = this.props.onRouteChange\n    return (\n\n        <nav className='navBar'>\n            <ul>\n                <li className='floatRight'>\n                    <a  onClick={()=>onRouteChange (\"signin\")}\n                            className=\"link dim dark-gray f6 f4-ns dib\" \n                            href=\"#\" \n                            title=\"Log \">Sign In</a>\n                </li>\n                \n                <li className='floatLeft'>\n                    <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n                </li>\n            </ul>\n        \n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\nrenderAdminNav = () => {\n    const onRouteChange = this.props.onRouteChange\n    return (\n        <nav className=\"navBar \">\n            <div className=\"logocell\" href=\"#\" title=\"Home\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n            </div>\n            <div className=\"dtc v-mid w-75 tr\">\n                \n                <a  onClick={()=>onRouteChange ('home')}\n                    className=\"link dim dark-gray f6 f4-ns dib\" \n                    href=\"#\" \n                    title=\"Home \">Home</a>\n                \n            </div>\n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\n}        \n    \n\n\nexport default Navigation;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}