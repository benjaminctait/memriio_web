{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js\";\nimport React from 'react';\nimport { BennyCard, MemoryImage } from '../cardcollection/card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css';\nimport { getAllMemoryFiles, updateHeroImage, updateDescription, updateLocation, updateStory, updateTitle } from '../memriioserver';\nimport { Container, Row, Col, Form, Carousel } from 'react-bootstrap';\n\nclass MemoryEditor extends React.Component {\n  constructor(props) {\n    super(props); //this.getCompiledMemory = this.getCompiledMemory.bind(this)\n\n    this.getCompiledMemory = () => {\n      let memory = {\n        id: this.state.id,\n        owner: this.state.owner,\n        title: this.state.title,\n        description: this.state.description,\n        location: this.state.location,\n        story: this.state.story,\n        fileurl: this.props.memory.fileurl\n      };\n      return memory;\n    };\n\n    this.titleChange = event => {\n      this.setState({\n        title: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.descriptionChange = event => {\n      this.setState({\n        description: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.locationChange = event => {\n      this.setState({\n        description: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.storyChange = event => {\n      this.setState({\n        description: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.state = {\n      id: props.memory.id,\n      title: props.memory.title,\n      description: props.memory.description,\n      story: props.memory.story,\n      location: props.memory.location,\n      owner: props.memory.userid,\n      fileurl: props.memory.fileurl,\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      memfiles: null,\n      uploadNeeded: false\n    };\n  } //------------------------------------------------------------------------\n\n\n  componentDidMount() {\n    getAllMemoryFiles(this.props.memory.id, memoryFiles => {\n      this.setState({\n        memfiles: memoryFiles\n      });\n    });\n  } //---------------------------------------------------------------------------------    \n\n\n  //------------------------------------------------------------------------\n  render() {\n    let imageArray = [];\n    let alteredMemory = this.getCompiledMemory();\n\n    if (this.state.memfiles) {\n      this.state.memfiles.map((item, index) => {\n        imageArray.push({\n          src: item.fileurl\n        });\n      });\n    } else {//do something else here\n    }\n\n    if (this.props.memory && this.state.memfiles) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\" //onClick={}\n        ,\n        href: \"#\",\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\" //onClick={}\n        ,\n        href: \"#\",\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"a\", {\n        //onClick={}\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Delete\")), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        float: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        className: \"ba pa2 br3\",\n        interval: 600000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, this.state.memfiles.map((item, i) => {\n        return /*#__PURE__*/React.createElement(Carousel.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(MemoryImage, {\n          key: i,\n          fileurl: item.fileurl //onExpand = {this.props.onExpandClick }\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 45\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ba pa2 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.title,\n        onChange: this.titleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.description,\n        onChange: this.descriptionChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.location,\n        onChange: this.locationChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }, \"Tagged People\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: \"NOT IMPLEMENTED\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }\n      }, \"Memory Clouds\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: \"NOT IMPLEMENTED\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }, \"Story\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"10\",\n        value: this.state.story,\n        onChange: this.storychange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ba pa2 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(BennyCard, {\n        key: 0,\n        memory: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 33\n        }\n      }))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, \"No Memory To Display\");\n    }\n  }\n\n} //------------------------------------------------------------------------    \n\n\nexport default MemoryEditor;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js"],"names":["React","BennyCard","MemoryImage","getAllMemoryFiles","updateHeroImage","updateDescription","updateLocation","updateStory","updateTitle","Container","Row","Col","Form","Carousel","MemoryEditor","Component","constructor","props","getCompiledMemory","memory","id","state","owner","title","description","location","story","fileurl","titleChange","event","setState","target","value","uploadNeeded","descriptionChange","locationChange","storyChange","userid","taggedPeople","memoryClouds","searchWords","memfiles","componentDidMount","memoryFiles","render","imageArray","alteredMemory","map","item","index","push","src","i","storychange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BennyCard,MemoryImage} from '../cardcollection/card'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css'\n\n\nimport {getAllMemoryFiles, \n        updateHeroImage,\n        updateDescription,\n        updateLocation,\n        updateStory,\n        updateTitle,\n       \n       } from '../memriioserver'\n\n\nimport {Container,\n        Row,\n        Col,\n        Form,\n        Carousel,\n        } from 'react-bootstrap'\n\nclass MemoryEditor extends React.Component{\n\n    constructor(props){\n        super(props);\n        //this.getCompiledMemory = this.getCompiledMemory.bind(this)\n        this.state = {\n                id:props.memory.id,\n                title:props.memory.title,\n                description:props.memory.description,\n                story:props.memory.story,\n                location:props.memory.location,\n                owner:props.memory.userid,\n                fileurl:props.memory.fileurl,\n\n                taggedPeople:[],\n                memoryClouds:[],\n                searchWords:[],\n                memfiles:null,\n        \n                uploadNeeded:false,\n            }\n            \n    }    \n\n    \n\n//------------------------------------------------------------------------\n\n    componentDidMount(){\n        getAllMemoryFiles(this.props.memory.id,((memoryFiles)=>{this.setState({memfiles:memoryFiles})}))\n    }\n\n//---------------------------------------------------------------------------------    \n    \n    getCompiledMemory = () =>{\n        \n        \n        let memory =  {\n            id:this.state.id,\n            owner:this.state.owner,\n            title:this.state.title,\n            description:this.state.description,\n            location:this.state.location,\n            story:this.state.story,\n            fileurl:this.props.memory.fileurl\n        \n        }\n\n        return memory\n        \n    }\n\n//------------------------------------------------------------------------\n\n    titleChange         = (event) => {this.setState({title:event.target.value,uploadNeeded:true})}\n    descriptionChange   = (event) => {this.setState({description:event.target.value,uploadNeeded:true})}\n    locationChange      = (event) => {this.setState({description:event.target.value,uploadNeeded:true})}\n    storyChange         = (event) => {this.setState({description:event.target.value,uploadNeeded:true})}\n\n\n\n//------------------------------------------------------------------------\n\n    render(){\n        let imageArray = []\n\n        let alteredMemory = this.getCompiledMemory()\n        if(this.state.memfiles){\n            this.state.memfiles.map((item,index)=>{imageArray.push({ src: item.fileurl})})\n        }else{\n            //do something else here\n        }\n            \n        if(this.props.memory && this.state.memfiles){\n            return (\n                <div>\n                <div className=\"dtc v-mid w-75 tr\">\n                                \n                    <a className=\"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\" \n                        //onClick={}\n                        href=\"#\" \n                        title=\"Post\">Cancel</a>\n                    <a className=\"link dim dark-gray f6 f4-ns dib mr3 mr4-ns pa2\" \n                        //onClick={}\n                        href=\"#\" \n                        title=\"Post\">Update</a>\n                    <a  //onClick={}\n                        className=\"link dim dark-gray f6 f4-ns dib\" \n                        href=\"#\" \n                        title=\"Login\">Delete</a>\n                </div>\n\n                <Container fluid>\n                   <Row>\n                        <Col xs={5} float='center'>\n                            <Carousel className='ba pa2 br3' interval={600000}>\n                                {\n                                    this.state.memfiles.map((item,i) => {\n                                    return (\n                                        <Carousel.Item>\n                                            <MemoryImage\n                                                key={i} \n                                                fileurl={item.fileurl}\n                                                //onExpand = {this.props.onExpandClick }\n                                            />\n                                        </Carousel.Item>\n                                        )\n                                    })\n                                }\n                            </Carousel>\n                        </Col>\n                        <Col>\n                            <div class ='ba pa2 br3'>\n                            <Form > \n                                <Form.Label className='float-left W-100' >Title</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    value={this.state.title} \n                                    onChange={this.titleChange}\n                                />\n\n                                <Form.Label className='float-left W-100 pt2'>Description</Form.Label>\n                                <Form.Control\n                                    type=\"text\" \n                                    value={this.state.description} \n                                    onChange={this.descriptionChange}\n                                    \n                                />\n                                \n                                <Form.Label className='float-left W-100 pt2'>Location</Form.Label>\n                                <Form.Control\n                                    type=\"text\" \n                                    value={this.state.location} \n                                    onChange={this.locationChange}\n                                />\n                                \n                                <Form.Label className='float-left W-100 pt2'>Tagged People</Form.Label>\n                                <Form.Control type=\"text\" value='NOT IMPLEMENTED' />\n\n                                <Form.Label className='float-left W-100 pt2'>Memory Clouds</Form.Label>\n                                <Form.Control type=\"text\" value='NOT IMPLEMENTED' />\n                                \n                                <Form.Label className='float-left W-100 pt2'>Story</Form.Label>\n                                <Form.Control \n                                    as=\"textarea\" \n                                    rows='10' \n                                    value={this.state.story} \n                                    onChange={this.storychange}\n                                />\n                            </Form>\n                            </div>\n                        </Col>\n                        <Col>\n                            <div class ='ba pa2 br3'>\n                                <BennyCard\n                                    key = {0}\n                                    memory={this.state}\n                                />  \n                            </div>\n                        </Col>\n                    </Row>                 \n                </Container>   \n                </div>\n            )\n        }else{\n            return (\n                <div>                \n                    No Memory To Display\n                </div>   \n            )\n\n        }\n    }\n\n}\n        \n//------------------------------------------------------------------------    \n\n\nexport default MemoryEditor;\n"]},"metadata":{},"sourceType":"module"}