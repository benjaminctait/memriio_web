{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js\";\nimport React from 'react';\nimport tag from '../images/tag.png';\nimport { ImageLabel, CloudLabel } from '../buttons/buttons';\nimport SelectDropDown from 'react-dropdown-select'; //-------------------------------------------------------------------\n\nexport function peopleDropSearch(cRect, people, callBack) {\n  let peoplesNames = people.map((person, idx) => {\n    return {\n      value: idx,\n      label: person.firstname + ' ' + person.lastname\n    };\n  });\n  let cStyle = null;\n\n  if (cRect) {\n    cStyle = {\n      position: 'fixed',\n      top: cRect.y,\n      width: cRect.width\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: cStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    options: peoplesNames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      let index = items[0].value;\n      if (callBack) callBack(people[index]);\n    } //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n} //-------------------------------------------------------------------\n\nexport function cloudDropSearch(cRect, clouds, selected, showmulti, keepInList, callBack, userid) {\n  userid = userid || 0;\n  let cloudnames = clouds.map((cloud, idx) => {\n    return {\n      value: cloud.id,\n      label: cloud.name\n    };\n  });\n  let selectedValues = selected;\n  let cStyle = null;\n\n  if (cRect) {\n    cStyle = {\n      position: 'fixed',\n      top: cRect.y,\n      width: cRect.width\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: cStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    values: selectedValues,\n    multi: showmulti,\n    keepSelectedInList: keepInList,\n    options: cloudnames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      console.log('selectDrop : ' + JSON.stringify(items));\n      if (callBack) callBack(items, userid);\n    } //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        textalign: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }));\n} //-------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js"],"names":["React","tag","ImageLabel","CloudLabel","SelectDropDown","peopleDropSearch","cRect","people","callBack","peoplesNames","map","person","idx","value","label","firstname","lastname","cStyle","position","top","y","width","items","index","item","itemIndex","props","state","methods","addItem","cloudDropSearch","clouds","selected","showmulti","keepInList","userid","cloudnames","cloud","id","name","selectedValues","console","log","JSON","stringify","textalign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport tag from '../images/tag.png'\n\n\nimport {ImageLabel, CloudLabel} from '../buttons/buttons'\nimport SelectDropDown from 'react-dropdown-select'\n\n\n//-------------------------------------------------------------------\n\nexport function peopleDropSearch ( cRect, people ,callBack){\n \n  let peoplesNames = people.map((person,idx) => {\n      return {value : idx, label: (person.firstname + ' ' + person.lastname)}})\n\n  let cStyle = null\n  if(cRect){\n    cStyle = { position:'fixed', top:cRect.y, width:cRect.width}\n  }\n\n  return (\n    \n    <div style = {cStyle} >\n      <SelectDropDown \n          \n          placeholder   = '+ add'\n          options       = { peoplesNames } \n          searchable    = { true }\n          closeOnSelect = { true }\n          clearOnSelect = { true }\n          \n          //------------\n\n          onChange = { \n              items => {\n              \n                let index = items[0].value\n                if(callBack) callBack(people[index])\n              }\n            }\n\n          //------------\n\n          itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n              \n            <ImageLabel \n              \n              key={'i' + itemIndex} \n              onClick={() => methods.addItem(item)} \n              leftImg = {tag}\n              label = {item.label}\n            />\n          )}\n          \n      />\n    </div>\n  )\n}\n\n//-------------------------------------------------------------------\n\nexport function cloudDropSearch ( cRect , clouds , selected , showmulti , keepInList , callBack , userid ){\n  userid = userid || 0\n  \n  let cloudnames = clouds.map((cloud,idx) => {\n      return {value : cloud.id, label: cloud.name}})\n  \n  let selectedValues = selected\n  \n  let cStyle = null\n  if(cRect){\n    cStyle = { position:'fixed', top:cRect.y, width:cRect.width}\n  }\n  \n  return (\n  \n  <div style = {cStyle} >\n\n    <SelectDropDown \n        placeholder         = '+ add'\n        values              = { selectedValues }\n        multi               = { showmulti } \n        keepSelectedInList  = { keepInList}\n        options             = { cloudnames } \n        searchable          = { true }\n        closeOnSelect       = { true }\n        clearOnSelect       = { true }\n        \n        //------------\n\n        onChange = { \n            items => {\n              console.log('selectDrop : ' + JSON.stringify(items));\n              if(callBack) callBack(items,userid)\n          }\n        }\n       \n        //------------\n\n        itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n            \n          <div style = {{position:'relative',textalign:'left'} }>\n            <ImageLabel \n              \n              key={'i' + itemIndex} \n              onClick={() => methods.addItem(item)} \n              leftImg = {tag}\n              label = {item.label}\n            />\n          </div>\n        )}\n        \n    />\n  </div>\n  )\n}\n\n//-------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}