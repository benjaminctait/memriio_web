{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js\";\nimport React from 'react';\nimport tag from '../images/tag.png';\nimport cloudIMG from '../images/cloud.png';\nimport { ImageLabel, CloudLabel } from '../buttons/buttons';\nimport SelectDropDown from 'react-dropdown-select'; //-------------------------------------------------------------------\n\nexport function peopleDropSearch(people, callBack) {\n  let peoplesNames = people.map((person, idx) => {\n    return {\n      value: idx,\n      label: person.firstname + ' ' + person.lastname\n    };\n  });\n  return /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    options: peoplesNames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      let index = items[0].value;\n      if (callBack) callBack(people[index]);\n    } //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  });\n} //-------------------------------------------------------------------\n\nexport function cloudDropSearch(cRect, clouds, selected, showmulti, keepInList, callBack, userid, hideCallback) {\n  userid = userid || 0;\n  let cloudnames = clouds.map((cloud, idx) => {\n    return {\n      value: cloud.id,\n      label: cloud.name\n    };\n  });\n  let selectedValues = [];\n\n  if (selected) {\n    selected.map(cloud => {\n      selectedValues.push({\n        value: cloud.id,\n        label: cloud.name\n      });\n    });\n  }\n\n  let cStyle = null;\n\n  if (cRect) {\n    cStyle = {\n      position: 'fixed',\n      top: cRect.y,\n      width: cRect.width,\n      backgroundColor: 'white'\n    };\n  }\n\n  let onBlurCallBack = null;\n\n  if (hideCallback) {\n    onBlurCallBack = hideCallback;\n    console.log('made it');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: cStyle,\n    onBlur: hideCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    values: selectedValues,\n    multi: showmulti,\n    keepSelectedInList: keepInList,\n    options: cloudnames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      console.log('selectDrop : ' + JSON.stringify(items));\n      if (callBack) callBack(items, userid);\n    },\n    onblu: true //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n} //-------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js"],"names":["React","tag","cloudIMG","ImageLabel","CloudLabel","SelectDropDown","peopleDropSearch","people","callBack","peoplesNames","map","person","idx","value","label","firstname","lastname","items","index","item","itemIndex","props","state","methods","addItem","cloudDropSearch","cRect","clouds","selected","showmulti","keepInList","userid","hideCallback","cloudnames","cloud","id","name","selectedValues","push","cStyle","position","top","y","width","backgroundColor","onBlurCallBack","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport tag from '../images/tag.png'\nimport cloudIMG from '../images/cloud.png'\n\nimport {ImageLabel, CloudLabel} from '../buttons/buttons'\nimport SelectDropDown from 'react-dropdown-select'\n\n\n//-------------------------------------------------------------------\n\nexport function peopleDropSearch ( people ,callBack){\n \n  let peoplesNames = people.map((person,idx) => {\n      return {value : idx, label: (person.firstname + ' ' + person.lastname)}})\n  return (\n  \n\n    \n  <SelectDropDown \n      \n      placeholder   = '+ add'\n      options       = { peoplesNames } \n      searchable    = { true }\n      closeOnSelect = { true }\n      clearOnSelect = { true }\n      \n      \n      //------------\n\n      onChange = { \n          items => {\n           \n            let index = items[0].value\n            if(callBack) callBack(people[index])\n          }\n        }\n\n      //------------\n\n      itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n          \n        <ImageLabel \n          \n          key={'i' + itemIndex} \n          onClick={() => methods.addItem(item)} \n          leftImg = {tag}\n          label = {item.label}\n        />\n      )}\n      \n  />\n  )\n}\n\n//-------------------------------------------------------------------\n\n\n\nexport function cloudDropSearch ( cRect,clouds, selected,showmulti,keepInList,callBack,userid,hideCallback){\n  userid = userid || 0\n  \n  let cloudnames = clouds.map((cloud,idx) => {\n      return {value : cloud.id, label: cloud.name}})\n  \n  let selectedValues = []\n  if (selected){\n     selected.map((cloud ) =>{\n      selectedValues.push({value : cloud.id, label: cloud.name})\n    })\n  }\n \n  let cStyle = null\n  if(cRect){\n    cStyle = { position:'fixed', top:cRect.y, width:cRect.width, backgroundColor:'white'}\n  }\n  let onBlurCallBack = null\n  if( hideCallback ) {\n    onBlurCallBack = hideCallback \n    console.log('made it');\n  }\n  return (\n  \n  <div style = {cStyle} onBlur = { hideCallback }>\n\n    <SelectDropDown \n        placeholder         = '+ add'\n        values              = { selectedValues }\n        multi               = { showmulti } \n        keepSelectedInList  = { keepInList}\n        options             = { cloudnames } \n        searchable          = { true }\n        closeOnSelect       = { true }\n        clearOnSelect       = { true }\n        \n        //------------\n\n        onChange = { \n            items => {\n              console.log('selectDrop : ' + JSON.stringify(items));\n              if(callBack) callBack(items,userid)\n          }\n        }\n\n        onblu\n        \n        //------------\n\n        itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n            \n          <ImageLabel \n            \n            key={'i' + itemIndex} \n            onClick={() => methods.addItem(item)} \n            leftImg = {tag}\n            label = {item.label}\n          />\n        )}\n        \n    />\n  </div>\n  )\n}\n\n//-------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}