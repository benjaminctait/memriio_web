{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryviewer/memoryImageViewer.js\";\nimport React from 'react';\nimport videoPlayImg from '../images/dottedcircleplay.png';\nimport videoStopImg from '../images/dottedcircleStop.png';\nimport ReactPlayer from 'react-player';\nimport './memoryImageViewer.css';\n\nclass MemoryFileViewer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videoPlaying: false,\n      fileType: 'empty' // 'image' or 'video' or 'audio' or 'specific' or 'empty'\n\n    };\n\n    this.handleClick = () => {\n      console.log('image clicked');\n    };\n\n    this.stopVideo = () => {\n      this.setState({\n        videoPlaying: false\n      });\n    };\n\n    this.playVideo = () => {\n      this.setState({\n        videoPlaying: true\n      });\n    };\n\n    this.determineFileCategory = memfile => {\n      if (memfile) {\n        if (this.isVideo(memfile.fileext)) {\n          return 'video';\n        } else {\n          if (this.isImage(memfile.fileext)) {\n            return 'image';\n          } else {\n            if (this.isAudio(memfile.fileext)) {\n              return 'audio';\n            } else {\n              return 'specific';\n            }\n          }\n        }\n      } else {\n        return 'empty';\n      }\n    };\n\n    this.isImage = fileExtension => {\n      ext = fileExtension.toLowerCase();\n      let filetypes = ['jpeg', 'jpg', 'png'];\n      let found = filetypes.indexOf(ext);\n      return !(found === -1);\n    };\n\n    this.isVideo = fileExtension => {\n      ext = fileExtension.toLowerCase();\n      let filetypes = ['mp4', 'mov'];\n      let found = filetypes.indexOf(fileExtension);\n      return !(found === -1);\n    };\n\n    this.isAudio = fileExtension => {\n      ext = fileExtension.toLowerCase();\n      let filetypes = ['m4a', 'wav'];\n      let found = filetypes.indexOf(fileExtension);\n      return !(found === -1);\n    };\n\n    this.renderControls = () => {\n      if (this.props.memfile) {\n        if (this.isVideo(this.props.memfile.fileext)) {\n          if (this.state.videoPlaying) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"buttonPosition\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              alt: \"Play\",\n              src: videoStopImg,\n              className: 'card-playBtn',\n              onClick: this.stopVideo,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"buttonPosition\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              alt: \"Play\",\n              src: videoPlayImg,\n              className: 'card-playBtn',\n              onClick: this.playVideo,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }\n            }));\n          }\n        }\n      }\n    };\n\n    this.renderOriginalFile = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      });\n    };\n  }\n\n  //-----------------------------------------------------------------------------\n  render() {\n    const {\n      memfile,\n      thumbStyleClass,\n      fileStyleClass,\n      alternateRenderer\n    } = this.props;\n    this.state.fileType = this.determineFileCategory(memfile);\n    const controls = this.renderControls();\n    const thumb = memfile ? memfile.thumburl : null;\n\n    if (alternateRenderer) {\n      return alternateRenderer();\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"xover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"memory\",\n        src: thumb,\n        className: thumbStyleClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }), controls);\n    }\n  }\n\n} //-----------------------------------------------------------------------------\n\n\nexport default MemoryFileViewer;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryviewer/memoryImageViewer.js"],"names":["React","videoPlayImg","videoStopImg","ReactPlayer","MemoryFileViewer","Component","state","videoPlaying","fileType","handleClick","console","log","stopVideo","setState","playVideo","determineFileCategory","memfile","isVideo","fileext","isImage","isAudio","fileExtension","ext","toLowerCase","filetypes","found","indexOf","renderControls","props","renderOriginalFile","render","thumbStyleClass","fileStyleClass","alternateRenderer","controls","thumb","thumburl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport videoPlayImg from '../images/dottedcircleplay.png'\nimport videoStopImg from '../images/dottedcircleStop.png'\nimport ReactPlayer from 'react-player';\nimport './memoryImageViewer.css';\n\n\nclass MemoryFileViewer extends React.Component{\n\n    state = {\n        videoPlaying:false,\n        fileType:'empty'        // 'image' or 'video' or 'audio' or 'specific' or 'empty'\n\n    }\n\n\n//-----------------------------------------------------------------------------\n\nhandleClick = () =>{\n    console.log('image clicked')\n    \n}\n\nstopVideo = () => {\n    this.setState({videoPlaying:false})\n    \n}\n//-----------------------------------------------------------------------------\nplayVideo = () => {\n    this.setState({videoPlaying:true})\n    \n    \n}\n\n//-----------------------------------------------------------------------------\n\ndetermineFileCategory = (memfile) => {\n\n    if(memfile){\n        if(this.isVideo(memfile.fileext)){\n            return 'video'\n        }else{\n            if(this.isImage(memfile.fileext)){\n                return 'image'\n            }else{\n                if(this.isAudio(memfile.fileext)){\n                    return 'audio'\n                }else{\n                    return 'specific'\n                }\n            }\n        }\n    }else{\n        return 'empty'\n    }\n}\n\n//-----------------------------------------------------------------------------\n\nisImage= (fileExtension) =>{\n    ext = fileExtension.toLowerCase()\n    let filetypes = ['jpeg','jpg','png']\n    let found = filetypes.indexOf(ext)\n    return !(found === -1)    \n}\n\n//-----------------------------------------------------------------------------\n\nisVideo= (fileExtension) =>{\n\n    ext = fileExtension.toLowerCase()\n    let filetypes = ['mp4','mov']\n    let found = filetypes.indexOf(fileExtension)\n    return !(found === -1)    \n}\n//-----------------------------------------------------------------------------\n\nisAudio= (fileExtension) =>{\n\n    ext = fileExtension.toLowerCase()\n    let filetypes = ['m4a','wav']\n    let found = filetypes.indexOf(fileExtension)\n    return !(found === -1)    \n}\n//-----------------------------------------------------------------------------\n\nrenderControls = () => {\n    if(this.props.memfile)\n    {\n        if(this.isVideo(this.props.memfile.fileext))\n        {\n            if(this.state.videoPlaying)\n            {\n                return(\n                    <div className='buttonPosition'>\n                        <img \n                            alt=        'Play'\n                            src=        { videoStopImg} \n                            className=  { 'card-playBtn' }\n                            onClick =   { this.stopVideo }\n                        />  \n                    </div>\n                )\n\n            }else{\n                return(\n                    <div className='buttonPosition'>\n                        <img \n                            alt=        'Play'\n                            src=        { videoPlayImg} \n                            className=  { 'card-playBtn' }\n                            onClick =   { this.playVideo }\n                        />  \n                    </div>\n                )\n            }\n            \n        }\n    }\n}\n\n//-----------------------------------------------------------------------------\n\nrenderOriginalFile = () => {\n    return(\n\n        <div className=''>\n            \n        </div>\n    )\n}\n//-----------------------------------------------------------------------------\n\n    render(){\n        const {memfile,thumbStyleClass,fileStyleClass,alternateRenderer} = this.props\n        this.state.fileType = this.determineFileCategory(memfile)\n\n        const controls = this.renderControls()\n        const thumb = memfile? memfile.thumburl : null        \n\n        if(alternateRenderer) { \n            return ( alternateRenderer() )\n        } else {\n            return (\n                <div className='xover'>\n                    <img \n                        alt= 'memory'\n                        src=        { thumb } \n                        className=  { thumbStyleClass }\n                    />  \n                    {controls}\n                </div>\n            )\n        }\n    }\n}\n\n//-----------------------------------------------------------------------------\n\nexport default MemoryFileViewer\n\n"]},"metadata":{},"sourceType":"module"}