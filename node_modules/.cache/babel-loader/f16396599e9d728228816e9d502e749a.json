{"ast":null,"code":"var trim = require('./trim');\n\nfunction boolMatch(s, matchers) {\n  var i,\n      matcher,\n      down = s.toLowerCase();\n  matchers = [].concat(matchers);\n\n  for (i = 0; i < matchers.length; i += 1) {\n    matcher = matchers[i];\n    if (!matcher) continue;\n    if (matcher.test && matcher.test(s)) return true;\n    if (matcher.toLowerCase() === down) return true;\n  }\n}\n\nmodule.exports = function toBoolean(str, trueValues, falseValues) {\n  if (typeof str === 'number') str = '' + str;\n  if (typeof str !== 'string') return !!str;\n  str = trim(str);\n  if (boolMatch(str, trueValues || ['true', '1'])) return true;\n  if (boolMatch(str, falseValues || ['false', '0'])) return false;\n};","map":{"version":3,"sources":["/Users/bentait/memrii/web/memriio_web/node_modules/underscore.string/toBoolean.js"],"names":["trim","require","boolMatch","s","matchers","i","matcher","down","toLowerCase","concat","length","test","module","exports","toBoolean","str","trueValues","falseValues"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,QAAtB,EAAgC;AAC9B,MAAIC,CAAJ;AAAA,MAAOC,OAAP;AAAA,MAAgBC,IAAI,GAAGJ,CAAC,CAACK,WAAF,EAAvB;AACAJ,EAAAA,QAAQ,GAAG,GAAGK,MAAH,CAAUL,QAAV,CAAX;;AACA,OAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,QAAQ,CAACM,MAAzB,EAAiCL,CAAC,IAAI,CAAtC,EAAyC;AACvCC,IAAAA,OAAO,GAAGF,QAAQ,CAACC,CAAD,CAAlB;AACA,QAAI,CAACC,OAAL,EAAc;AACd,QAAIA,OAAO,CAACK,IAAR,IAAgBL,OAAO,CAACK,IAAR,CAAaR,CAAb,CAApB,EAAqC,OAAO,IAAP;AACrC,QAAIG,OAAO,CAACE,WAAR,OAA0BD,IAA9B,EAAoC,OAAO,IAAP;AACrC;AACF;;AAEDK,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,WAApC,EAAiD;AAChE,MAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6BA,GAAG,GAAG,KAAKA,GAAX;AAC7B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,CAAC,CAACA,GAAT;AAC7BA,EAAAA,GAAG,GAAGf,IAAI,CAACe,GAAD,CAAV;AACA,MAAIb,SAAS,CAACa,GAAD,EAAMC,UAAU,IAAI,CAAC,MAAD,EAAS,GAAT,CAApB,CAAb,EAAiD,OAAO,IAAP;AACjD,MAAId,SAAS,CAACa,GAAD,EAAME,WAAW,IAAI,CAAC,OAAD,EAAU,GAAV,CAArB,CAAb,EAAmD,OAAO,KAAP;AACpD,CAND","sourcesContent":["var trim = require('./trim');\n\nfunction boolMatch(s, matchers) {\n  var i, matcher, down = s.toLowerCase();\n  matchers = [].concat(matchers);\n  for (i = 0; i < matchers.length; i += 1) {\n    matcher = matchers[i];\n    if (!matcher) continue;\n    if (matcher.test && matcher.test(s)) return true;\n    if (matcher.toLowerCase() === down) return true;\n  }\n}\n\nmodule.exports = function toBoolean(str, trueValues, falseValues) {\n  if (typeof str === 'number') str = '' + str;\n  if (typeof str !== 'string') return !!str;\n  str = trim(str);\n  if (boolMatch(str, trueValues || ['true', '1'])) return true;\n  if (boolMatch(str, falseValues || ['false', '0'])) return false;\n};\n"]},"metadata":{},"sourceType":"script"}