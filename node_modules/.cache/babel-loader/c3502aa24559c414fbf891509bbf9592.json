{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js\";\nimport React from 'react';\nimport tag from '../images/tag.png';\nimport cloudIMG from '../images/cloud.png';\nimport { ImageLabel, CloudLabel } from '../buttons/buttons';\nimport SelectDropDown from 'react-dropdown-select'; //-------------------------------------------------------------------\n\nexport function peopleDropSearch(people, callBack) {\n  let peoplesNames = people.map((person, idx) => {\n    return {\n      value: idx,\n      label: person.firstname + ' ' + person.lastname\n    };\n  });\n  return /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    options: peoplesNames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      let index = items[0].value;\n      if (callBack) callBack(people[index]);\n    } //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  });\n} //-------------------------------------------------------------------\n\nexport function cloudDropSearch(clouds, selected, showmulti, keepInList, callBack) {\n  let cloudnames = clouds.map((cloud, idx) => {\n    return {\n      value: cloud.id,\n      label: cloud.name\n    };\n  });\n  let selectedValues = [];\n\n  if (selected) {\n    selected.map(cloud => {\n      selectedValues.push({\n        value: cloud.id,\n        label: cloud.name\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    values: selectedValues,\n    multi: showmulti,\n    keepSelectedInList: keepInList,\n    options: cloudnames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      console.log('selectDrop : ' + JSON.stringify(items));\n      if (callBack) callBack(items);\n    } //------------\n    //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  });\n} //-------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js"],"names":["React","tag","cloudIMG","ImageLabel","CloudLabel","SelectDropDown","peopleDropSearch","people","callBack","peoplesNames","map","person","idx","value","label","firstname","lastname","items","index","item","itemIndex","props","state","methods","addItem","cloudDropSearch","clouds","selected","showmulti","keepInList","cloudnames","cloud","id","name","selectedValues","push","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport tag from '../images/tag.png'\nimport cloudIMG from '../images/cloud.png'\n\nimport {ImageLabel, CloudLabel} from '../buttons/buttons'\nimport SelectDropDown from 'react-dropdown-select'\n\n\n//-------------------------------------------------------------------\n\nexport function peopleDropSearch ( people ,callBack){\n \n  let peoplesNames = people.map((person,idx) => {\n      return {value : idx, label: (person.firstname + ' ' + person.lastname)}})\n  return (\n  \n\n    \n  <SelectDropDown \n    \n      placeholder   = '+ add'\n      options       = { peoplesNames } \n      searchable    = { true }\n      closeOnSelect = { true }\n      clearOnSelect = { true }\n      \n      \n      //------------\n\n      onChange = { \n          items => {\n            let index = items[0].value\n            if(callBack) callBack(people[index])\n          }\n        }\n\n      //------------\n\n      itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n          \n        <ImageLabel \n          \n          key={'i' + itemIndex} \n          onClick={() => methods.addItem(item)} \n          leftImg = {tag}\n          label = {item.label}\n        />\n      )}\n      \n  />\n  )\n}\n\n//-------------------------------------------------------------------\n\nexport function cloudDropSearch ( clouds, selected,showmulti,keepInList,callBack){\n \n  let cloudnames = clouds.map((cloud,idx) => {\n      return {value : cloud.id, label: cloud.name}})\n  \n  let selectedValues = []\n  if (selected){\n     selected.map((cloud ) =>{\n      selectedValues.push({value : cloud.id, label: cloud.name})\n    })\n  }\n\n  return (\n    \n  <SelectDropDown \n    \n      placeholder         = '+ add'\n      values              = { selectedValues }\n      multi               = { showmulti } \n      keepSelectedInList  = { keepInList}\n      options             = { cloudnames } \n      searchable          = { true }\n      closeOnSelect       = { true }\n      clearOnSelect       = { true }\n      \n      \n      //------------\n\n      onChange = { \n          items => {\n            console.log('selectDrop : ' + JSON.stringify(items));\n            if(callBack) callBack(items)\n        }\n      }\n      \n      //------------\n      \n\n      //------------\n\n      itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n          \n        <ImageLabel \n          \n          key={'i' + itemIndex} \n          onClick={() => methods.addItem(item)} \n          leftImg = {tag}\n          label = {item.label}\n        />\n      )}\n      \n  />\n  )\n}\n\n//-------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}