{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/buttons/buttons.js\";\nimport React from 'react';\nimport Xsymbol from '../images/x-symbol.png';\nimport './buttons.css';\nexport class SubTag extends React.Component {\n  render() {\n    const {\n      text,\n      tagKey\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-left inline-flex ba ma1 pa1 br3 b--blue bg-near-white \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dib f6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, text), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"dib ma1 pointer\",\n      src: Xsymbol,\n      alt: \"X\",\n      height: \"15\",\n      width: \"15\",\n      onClick: this.props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} //------------------------------------------------------------------------------------------\n\nexport class CheckBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      up: false,\n      down: false\n    };\n\n    this.onClick = () => {\n      let newState = !this.state.up;\n\n      if (this.state.up) {\n        this.setState({\n          up: false,\n          down: true\n        });\n      } else {\n        this.setState({\n          up: true,\n          down: false\n        });\n      }\n\n      if (this.props.onClick) this.props.onClick(this.props.itemKey, newState);\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        up: this.props.upState\n      });\n    };\n  }\n\n  render() {\n    const {\n      downImg,\n      upImg,\n      upState,\n      label\n    } = this.props;\n    let source = null;\n    if (upState) source = upImg;else source = downImg;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"di pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"checkbox\",\n      src: source,\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      className: \"checkboxLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, label));\n  }\n\n} //------------------------------------------------------------------------------------------\n\nexport class ImageLabel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isblured: false\n    };\n\n    this.handleBlur = () => {\n      if (this.state.isblured) this.setState({\n        isblured: false\n      });\n    };\n\n    this.handleFocus = () => {\n      if (!this.state.isblured) this.setState({\n        isblured: true\n      });\n    };\n\n    this.handleBadgeClick = () => {\n      if (this.props.onBadgeClick) {\n        this.props.onBadgeClick(this.props.data);\n      }\n    };\n\n    this.onClick = () => {\n      if (this.props.onClick) {\n        this.props.onLabelClick(this.props.data);\n      }\n    };\n  }\n\n  render() {\n    const {\n      leftImg,\n      label,\n      badge\n    } = this.props;\n    let showBadge = null;\n\n    if (badge) {\n      showBadge = /*#__PURE__*/React.createElement(\"img\", {\n        className: \"rightBadge\",\n        src: badge,\n        onClick: this.handleBadgeClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ImageLabel\",\n      key: 'dog',\n      onClick: this.onClick,\n      onMouseOut: this.handleBlur,\n      onMouseOver: this.handleFocus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"ImageLabelImage\",\n      src: leftImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      className: \"checkboxLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, label), showBadge);\n  }\n\n} //------------------------------------------------------------------------------------------\n\nexport class IButton extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClick = () => {//this.props.onClick()\n    };\n  }\n\n  render() {\n    const {\n      img,\n      title\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"di pointer\",\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"ImageLabelImage\",\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} //------------------------------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/buttons/buttons.js"],"names":["React","Xsymbol","SubTag","Component","render","text","tagKey","props","onClick","CheckBox","state","up","down","newState","setState","itemKey","componentDidMount","upState","downImg","upImg","label","source","ImageLabel","isblured","handleBlur","handleFocus","handleBadgeClick","onBadgeClick","data","onLabelClick","leftImg","badge","showBadge","IButton","img","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Xsymbol from '../images/x-symbol.png'\nimport './buttons.css'\n\nexport class SubTag extends React.Component{\n\n    render(){\n        const{text,tagKey} = this.props\n        return(\n            \n            <div className='float-left inline-flex ba ma1 pa1 br3 b--blue bg-near-white '>\n                <span className='dib f6'>{text}</span>                \n                <img \n                    className = 'dib ma1 pointer' \n                    src={Xsymbol} \n                    alt=\"X\" \n                    height=\"15\" \n                    width=\"15\"\n                    \n                    onClick={this.props.onClick}\n                ></img>\n                    \n\n            </div>\n        )\n    }\n}\n\n//------------------------------------------------------------------------------------------\n\nexport class CheckBox extends React.Component{\n\n    state ={\n        up:false,\n        down:false,        \n    }\n    \n    onClick = () =>{\n        \n        let newState = !this.state.up\n        if(this.state.up){this.setState({up:false,down:true})}\n        else {this.setState({up:true,down:false})}        \n       \n        if(this.props.onClick) this.props.onClick(this.props.itemKey,newState)\n\n    }\n\n    componentDidMount = () => {\n        this.setState({up:this.props.upState})\n    }\n\n    render(){\n        const{downImg,upImg,upState,label} = this.props\n        let source = null\n        if(upState) source = upImg\n        else source = downImg        \n\n        return(\n            <div className='di pointer' >\n                <img className='checkbox' src={source} onClick={ this.onClick}></img> \n                <text className='checkboxLabel'>{label}</text>\n                \n            </div>\n        )\n    }\n}\n\n//------------------------------------------------------------------------------------------\n\nexport class ImageLabel extends React.Component{\n\n    state={\n        isblured:false\n    }\n\n    \n    handleBlur       = () => {if(this.state.isblured) this.setState({isblured:false })}\n    handleFocus      = () => {if(!this.state.isblured) this.setState({ isblured:true })}\n    handleBadgeClick = () => {if(this.props.onBadgeClick){this.props.onBadgeClick(this.props.data)}}\n    onClick          = () => {if(this.props.onClick){this.props.onLabelClick(this.props.data)}}\n        \n\n\n    render(){\n        const{leftImg,label,badge} = this.props\n        let showBadge = null\n        \n        if(badge ){ \n            showBadge = <img \n                className='rightBadge' \n                src={badge} \n                onClick = {this.handleBadgeClick} \n                ></img>\n        }\n        \n        return(\n            \n            <div \n                className='ImageLabel'\n                key={'dog'} \n                onClick={this.onClick} \n                onMouseOut = {this.handleBlur} \n                onMouseOver = {this.handleFocus}>\n                \n                <img className='ImageLabelImage' src={leftImg}></img>\n                <text className='checkboxLabel' >{label}</text>   \n                {showBadge}  \n            </div>\n        )  \n    }\n}\n\n//------------------------------------------------------------------------------------------\n\nexport class IButton extends React.Component{\n\n    onClick = () =>{        \n        //this.props.onClick()\n    }\n\n    render(){\n        const{img,title} = this.props\n        return(\n            <div className='di pointer' onClick={this.onClick} >\n                <img className='ImageLabelImage'src={img}></img>                         \n            </div>\n        )  \n    }\n}\n\n//------------------------------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}