{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport Admin from './components/admin/admin.js';\nimport * as mem from './components/memriioserver.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.userSignedin = () => {\n      return this.state.isSignedIn;\n    };\n\n    this.loadUser = data => {\n      this.state.user.userid = data.userid;\n      this.state.user.firstname = data.firstname;\n      this.state.user.lastname = data.lastname;\n      this.state.user.email = data.email;\n      this.state.user.joined = data.joined;\n      this.state.user.cloudSelection = this.extractSelectedClouds(data.webclouds);\n      mem.getMemories_User_Clouds(data.userid, this.state.user.cloudSelection).then(memories => {\n        if (memories.success) this.loadMemories(memories.data);\n      });\n    };\n\n    this.extractSelectedClouds = webClouds => {\n      let tempArray = [];\n\n      if (webClouds) {\n        webClouds.split(',').map(cid => {\n          tempArray.push(parseInt(cid));\n        });\n      }\n\n      return tempArray;\n    };\n\n    this.handleNewMemory = memory => {\n      console.log('handleNewMemory : ' + JSON.stringify(memory));\n      let newMemories = this.state.searchResult.memories;\n      newMemories.push(memory);\n      this.loadMemories(newMemories);\n    };\n\n    this.loadMemories = memories => {\n      if (memories) {\n        console.log('App-loadMemories : memory count : ' + memories.length);\n      } else {\n        console.log('App-loadMemories : memory count : ' + 0);\n      }\n\n      this.setState({\n        searchResult: {\n          memories: memories\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      console.log('app.onRouteChange : route = ' + route);\n\n      if (route === 'signin') {\n        this.setState({\n          searchResult: {\n            memories: []\n          },\n          route: route,\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else if (route === 'memoryUpdated') {\n        this.loadUser(this.state.user);\n        this.setState({\n          route: 'home',\n          isSignedIn: true\n        });\n      } else if (route === 'admin') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          route: route\n        });\n      }\n    };\n\n    this.handleEditMemory = memory => {\n      this.state.activeMemory = memory;\n      console.log('App.displayMemory : activeMemory.id ' + memory.memid);\n      this.onRouteChange('displayMemory');\n    };\n\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory: null,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        joined: ''\n      },\n      searchResult: {\n        memories: []\n      }\n    };\n  } //---------------------------------------------------------------------------------\n\n\n  //---------------------------------------------------------------------------------\n  render() {\n    let routeName = this.state.route;\n    let content = null;\n    console.log('<Navigation> userid ' + this.state.user.userid);\n    let nav = /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      userSignedin: this.userSignedin,\n      loadMemories: this.loadMemories,\n      onNewMemory: this.handleNewMemory,\n      currentRoute: this.state.route,\n      userid: this.state.user.userid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    });\n\n    if (routeName === 'home') {\n      content = /*#__PURE__*/React.createElement(CardCollection, {\n        memories: this.state.searchResult.memories,\n        userid: this.state.user.userid,\n        onEditMemory: this.handleEditMemory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'signin') {\n      content = /*#__PURE__*/React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'admin') {\n      console.log('app.render : route = ' + routeName);\n      content = /*#__PURE__*/React.createElement(Admin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'register') {\n      content = /*#__PURE__*/React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, nav, content);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/App.js"],"names":["React","Navigation","CardCollection","Signin","Register","Admin","mem","App","Component","constructor","userSignedin","state","isSignedIn","loadUser","data","user","userid","firstname","lastname","email","joined","cloudSelection","extractSelectedClouds","webclouds","getMemories_User_Clouds","then","memories","success","loadMemories","webClouds","tempArray","split","map","cid","push","parseInt","handleNewMemory","memory","console","log","JSON","stringify","newMemories","searchResult","length","setState","onRouteChange","route","handleEditMemory","activeMemory","memid","id","name","render","routeName","content","nav"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport Admin from './components/admin/admin.js'\nimport * as mem from './components/memriioserver.js'\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    \n    this.state ={\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory:null,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        joined:''\n      },\n      searchResult:{\n        memories:[]\n      }\n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n  userSignedin = () => {\n    return this.state.isSignedIn;\n  }\n\n//---------------------------------------------------------------------------------\n\n  loadUser = (data) => {\n    \n    this.state.user.userid          = data.userid\n    this.state.user.firstname       = data.firstname\n    this.state.user.lastname        = data.lastname\n    this.state.user.email           = data.email\n    this.state.user.joined          = data.joined\n    this.state.user.cloudSelection  = this.extractSelectedClouds(data.webclouds)\n   \n    mem.getMemories_User_Clouds(data.userid,this.state.user.cloudSelection)\n    .then(memories=>{\n      if(memories.success) this.loadMemories(memories.data)\n    })\n    \n  } \n//---------------------------------------------------------------------------------\n\nextractSelectedClouds = (webClouds) => {\n  let tempArray = []\n  if(webClouds){\n    webClouds.split(',').map(cid => {tempArray.push(parseInt(cid))})\n  }\n  return tempArray\n}\n\n//---------------------------------------------------------------------------------\n\n  handleNewMemory = (memory) => {\n    console.log('handleNewMemory : ' + JSON.stringify(memory));\n    \n    let newMemories = this.state.searchResult.memories\n    newMemories.push(memory)\n    this.loadMemories(newMemories)\n  } \n\n//---------------------------------------------------------------------------------\n\n  loadMemories =(memories) => {\n\n    if(memories){\n      console.log('App-loadMemories : memory count : ' + memories.length);\n    }else{\n      console.log('App-loadMemories : memory count : ' + 0);\n    }\n\n      \n    this.setState({searchResult:{memories : memories}})\n    \n  }\n\n//---------------------------------------------------------------------------------\n\n  onRouteChange = (route) =>{\n   \n    console.log('app.onRouteChange : route = ' + route);\n    \n    if(route === 'signin'){\n      this.setState({\n        searchResult:{memories:[]},\n        route:route, \n        isSignedIn : false\n      })\n    }else if (route === 'home'){\n      this.setState({route:route, isSignedIn: true})\n    }else if (route === 'memoryUpdated'){\n      this.loadUser(this.state.user)\n      this.setState({route:'home', isSignedIn: true})\n    }else if (route === 'admin'){\n      \n     this.setState({route:route, isSignedIn: true})\n    }else{\n      this.setState({route:route})\n    }\n    \n  }\n\n//---------------------------------------------------------------------------------\n\nhandleEditMemory = (memory) => {\n  this.state.activeMemory = memory;\n  console.log('App.displayMemory : activeMemory.id ' + memory.memid);\n  this.onRouteChange('displayMemory')\n}\n\n//---------------------------------------------------------------------------------\n\nrender() {\n\n  \n    let routeName = this.state.route\n    let content = null\n    console.log('<Navigation> userid ' + this.state.user.userid);\n    \n    let nav = <Navigation \n                onRouteChange={this.onRouteChange} \n                userSignedin={this.userSignedin}\n                loadMemories={this.loadMemories}     \n                onNewMemory = {this.handleNewMemory}      \n                currentRoute={this.state.route}\n                userid={this.state.user.userid}\n              />\n\n    if(routeName === 'home'){\n      content = <CardCollection \n              memories={this.state.searchResult.memories} \n              userid={this.state.user.userid} \n              onEditMemory={this.handleEditMemory}/>\n              \n    }else if(routeName === 'signin'){\n      content = <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n    }else if (routeName === 'admin'){\n      console.log('app.render : route = ' + routeName);\n      content = <Admin/>\n\n    }else if (routeName === 'register'){\n      content = <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    }\n\n\n    return (\n      <div className=\"App\">\n          { nav     }\n          { content }\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}