{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/memrii/web/memriio_web/src/components/cardcollection/bigcard.js\";\nimport React from 'react';\nimport trash from '../images/trash.png';\nimport edit from '../images/edit.png';\nimport hero from '../images/heroshot.png';\nimport MemoryFileViewer from '../memoryviewer/memoryImageViewer';\nimport * as mem from '../memriioserver';\nimport './bigcard.css'; //-----------------------------------------------------------------------------\n\nclass BigCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memfiles: null,\n      viewState: 0\n    };\n\n    this.handleEditCard = () => {\n      this.props.onEdit(this.props.memory);\n    };\n\n    this.handleMoreClick = () => {\n      this.props.onShowModal(this.props.memory, this.state.memfiles);\n    };\n\n    this.handleClick = e => {\n      this.props.onCardClick(this.props.memory.memid);\n    };\n\n    this.getHeroFile = () => {\n      let hero = this.state.memfiles[0];\n      this.state.memfiles.map(memfile => {\n        if (memfile.ishero) {\n          hero = memfile;\n        }\n      });\n      return hero;\n    };\n\n    this.loadFiles = memfiles => {\n      let newMemFiles = [];\n      memfiles.forEach(memfile => {\n        if (memfile.fileext == 'mp4') {\n          let parts = memfile.thumburl.split('/');\n          let fname = parts[parts.length - 2] + '/' + parts[parts.length - 1];\n          console.log('base card : loadFiles : ' + fname);\n          mem.getDownloadSignedurl(fname).then(surl => {\n            console.log('base card : loadFiles memfile.thumbnail : ' + surl);\n            memfile.thumburl = surl;\n          });\n        }\n\n        newMemFiles.push(memfile);\n      });\n      this.setState({\n        memfiles: newMemFiles\n      });\n    };\n\n    this.componentDidMount = () => {\n      mem.getAllMemoryFiles(this.props.memory.memid, this.loadFiles);\n    };\n\n    this.renderFileVIew = () => {\n      if (this.state.memfiles) {\n        let memf = this.getHeroFile();\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'imageContainer',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(MemoryFileViewer, {\n          memfile: memf,\n          thumbStyleClass: 'basecardimg',\n          fileStyleClass: 'basecardimg',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }));\n      }\n    };\n  }\n\n  //-----------------------------------------------------------------------------\n  render() {\n    const fileview = this.renderFileVIew();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basecard\",\n      id: 'memcard' + this.props.memory.memid,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, fileview, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mb2 mt2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, this.props.memory.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"f6 lh-copy measure mt2 mid-gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, mem.shrinkCardDescription(this.props.memory.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controlBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link grow dim controlFont \",\n      onClick: this.handleMoreClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"More\"))));\n  }\n\n}\n\nexport { BigCard };","map":{"version":3,"sources":["/Users/bentait/memrii/web/memriio_web/src/components/cardcollection/bigcard.js"],"names":["React","trash","edit","hero","MemoryFileViewer","mem","BigCard","Component","state","memfiles","viewState","handleEditCard","props","onEdit","memory","handleMoreClick","onShowModal","handleClick","e","onCardClick","memid","getHeroFile","map","memfile","ishero","loadFiles","newMemFiles","forEach","fileext","parts","thumburl","split","fname","length","console","log","getDownloadSignedurl","then","surl","push","setState","componentDidMount","getAllMemoryFiles","renderFileVIew","memf","render","fileview","title","shrinkCardDescription","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport trash from '../images/trash.png'\nimport edit from '../images/edit.png'\nimport hero from '../images/heroshot.png'\nimport MemoryFileViewer from '../memoryviewer/memoryImageViewer'\nimport * as mem from '../memriioserver'\n\nimport './bigcard.css';\n\n\n//-----------------------------------------------------------------------------\n\nclass BigCard extends React.Component{\n\n    state = {\n        memfiles:null,\n        viewState:0\n    }\n    \n    //------------------------------------------------------------------------------\n    \n    handleEditCard = () =>{\n        \n        this.props.onEdit(this.props.memory)\n    }\n    \n    //-----------------------------------------------------------------------------\n    \n    handleMoreClick =() =>{\n    \n        this.props.onShowModal(this.props.memory,this.state.memfiles)\n        \n    }\n    \n    handleClick = (e) =>{\n        \n        this.props.onCardClick(this.props.memory.memid)\n    }\n    //-----------------------------------------------------------------------------\n    \n    getHeroFile = () => {\n        let hero = this.state.memfiles[0]    \n        this.state.memfiles.map(memfile => {\n            if(memfile.ishero){           \n                hero = memfile\n            }\n        })\n        return hero\n    }\n    \n    //-----------------------------------------------------------------------------\n    \n    loadFiles = (memfiles) => {\n        let newMemFiles = []\n        memfiles.forEach(memfile => {\n           \n            if(memfile.fileext == 'mp4'){\n                let parts = memfile.thumburl.split('/')\n                let fname = parts[parts.length-2]+ '/' + parts[parts.length-1]\n                console.log('base card : loadFiles : ' + fname );\n                mem.getDownloadSignedurl(fname).then( surl => \n                    {\n                        console.log('base card : loadFiles memfile.thumbnail : ' + surl );\n                        memfile.thumburl = surl\n                    })\n            }\n            newMemFiles.push(memfile)\n        }) \n        this.setState({memfiles:newMemFiles})\n    }\n    \n    //-----------------------------------------------------------------------------\n    \n    componentDidMount =  () => {\n        \n        mem.getAllMemoryFiles(this.props.memory.memid,this.loadFiles)\n    }\n    \n    //-----------------------------------------------------------------------------\n    \n    renderFileVIew = () => {\n        if(this.state.memfiles){\n            let memf = this.getHeroFile()\n            return (\n                <div className = {'imageContainer'}>\n                    <MemoryFileViewer \n                        memfile={memf}\n                        thumbStyleClass={'basecardimg'}\n                        fileStyleClass={'basecardimg'}\n                    />\n                </div>\n            )\n        }\n    }\n    \n    //-----------------------------------------------------------------------------\n    \n        render(){\n            const fileview = this.renderFileVIew()\n                return (\n                    <div className='basecard'\n                        id={'memcard'+this.props.memory.memid}\n                        onClick={this.handleClick}\n                    >\n                    {fileview}\n                    <div>\n                        <h3 className=\"mb2 mt2 \">{this.props.memory.title}</h3>\n                        <p className=\"f6 lh-copy measure mt2 mid-gray\">{\n                                mem.shrinkCardDescription(this.props.memory.description)\n                            }</p>\n                        <div className=\"controlBox\">\n                            <a className=\"link grow dim controlFont \" onClick={this.handleMoreClick  } >More</a>\n                        </div>\n                    </div>\n                </div>\n                )\n        }\n    \n    }\nexport {BigCard};\n\n"]},"metadata":{},"sourceType":"module"}