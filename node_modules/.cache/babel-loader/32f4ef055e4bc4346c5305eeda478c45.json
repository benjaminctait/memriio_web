{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/navigation/navigation.js\";\nimport React from 'react';\nimport logo from \"./memriio_logo.png\";\nimport * as DropSearch from '../dropsearch/dropsearch';\nimport * as mem from '../memriioserver';\nimport './navigation.css';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchwords: '',\n      userClouds: null,\n      selectedclouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false\n    };\n\n    this.onSearchBoxChange = event => {\n      console.log('navigation-onSearchBoxChange : ' + event.target.value);\n      let tmparray = [];\n\n      if (event.target.value !== '') {\n        tmparray = event.target.value.split(\" \");\n      }\n\n      this.setState({\n        searchwords: tmparray\n      }, this.showMemories);\n    };\n\n    this.handleChangeSearchClouds = (clouds, userid) => {\n      console.log('changeSearchClouds : ' + mem.stry(clouds.map(cloud => {\n        return parseInt(cloud.value);\n      })));\n      this.setState({\n        selectedclouds: clouds\n      }, this.showMemories);\n    };\n\n    this.showMemories = () => {\n      let selected = this.state.selectedclouds;\n      let searchwords = this.state.searchwords;\n      let cloudids = [];\n      if (selected) cloudids = selected.map(cloud => {\n        return parseInt(cloud.value);\n      });\n      console.log('showMemories ' + cloudids + ': cloudids.length ' + cloudids.length);\n\n      if (cloudids.length === 0) {\n        console.log('showMemories calling loadMemories(null)');\n        this.props.loadMemories(null);\n      } else if (selected.length === 1 && selected[0].value === 0) {\n        // personal only\n        console.log('personal only ' + selected[0].value);\n\n        if (this.state.personalMemoryunsharedOnly) {\n          // personal only - unshared only\n          console.log('personal : unshared ' + this.props.userid + ' ' + searchwords);\n          mem.getMemories_PersonalOnly_Unshared(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // personal only - bth shared and undshared\n          console.log('personal : all ' + this.props.userid + ' ' + searchwords);\n          mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else if (cloudids.includes(0)) {\n        // personal cloud + other clouds\n        console.log('personal cloud + other clouds  : cloudids ' + cloudids);\n\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log('personal cloud + other clouds with searchwords ' + this.props.userid + ' ' + searchwords + ' ' + cloudids);\n          mem.getMemories_User_Words_Clouds(this.props.userid, searchwords, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log('personal cloud + other clouds no searchwords ' + this.props.userid + ' : ' + cloudids);\n          mem.getMemories_User_Clouds(this.props.userid, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else {\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log('other clouds only with searchwords [searchwords : cloudsids]' + searchwords + ' : ' + cloudids);\n          mem.getMemories_Clouds(cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log('other clouds only no searchwords : cloud ids' + cloudids);\n          mem.getMemories_Words_Clouds(cloudids, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      }\n    };\n\n    this.loadUserClouds = userid => {\n      if (userid) mem.getUserClouds(userid, clouds => {\n        clouds.push({\n          id: 0,\n          name: 'Personal'\n        });\n        clouds.reverse();\n        this.setState({\n          userClouds: clouds\n        });\n      });\n    };\n\n    this.handleSignOut = () => {\n      this.state = {\n        searchwords: '',\n        userClouds: null,\n        selectedclouds: null,\n        showPersonalMemoryOptions: false,\n        personalMemoryunsharedOnly: false\n      };\n      this.props.onRouteChange('signin');\n    };\n\n    this.handleAdminClick = () => {\n      this.props.onRouteChange('admin');\n    };\n\n    this.renderStandardNav = () => {\n      const {\n        onRouteChange,\n        userid\n      } = this.props;\n      let cloudbox = null;\n\n      if (this.state.userClouds) {\n        cloudbox = DropSearch.cloudDropSearch(this.state.userClouds, null, true, false, this.handleChangeSearchClouds, userid);\n      } else {\n        this.loadUserClouds(userid);\n      }\n\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleSignOut,\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        href: \"#\",\n        title: \"Log Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, \"Sign Out\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleAdminClick,\n        href: \"#admin\",\n        title: \"Administration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, \"Admin\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.onSearchBoxChange,\n        className: \"border-box mt2 ba f4-ns b--black-30 pa2 br3 mb2\",\n        type: \"text\",\n        \"aria-describedby\": \"name-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, cloudbox), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }))));\n    };\n\n    this.renderSignInNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"signin\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Log \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, \"Sign In\")));\n    };\n\n    this.renderAdminNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange('home'),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Home \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, \"Home\")));\n    };\n\n    this.state = {\n      searchwords: '',\n      userClouds: null,\n      selectedclouds: null\n    };\n  }\n\n  //---------------------------------------------------------------------------------\n  render() {\n    const {\n      userSignedin,\n      currentRoute\n    } = this.props;\n\n    if (userSignedin()) {\n      if (currentRoute === 'home') {\n        return this.renderStandardNav();\n      } else if (currentRoute === 'displayMemory') {\n        return null;\n      } else if (currentRoute === 'admin') {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  } //---------------------------------------------------------------------------------\n  //---------------------------------------------------------------------------------\n\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/navigation/navigation.js"],"names":["React","logo","DropSearch","mem","Navigation","Component","constructor","props","state","searchwords","userClouds","selectedclouds","showPersonalMemoryOptions","personalMemoryunsharedOnly","onSearchBoxChange","event","console","log","target","value","tmparray","split","setState","showMemories","handleChangeSearchClouds","clouds","userid","stry","map","cloud","parseInt","selected","cloudids","length","loadMemories","getMemories_PersonalOnly_Unshared","then","memories","error","getMemories_PersonalOnly_All","includes","getMemories_User_Words_Clouds","getMemories_User_Clouds","getMemories_Clouds","getMemories_Words_Clouds","loadUserClouds","getUserClouds","push","id","name","reverse","handleSignOut","onRouteChange","handleAdminClick","renderStandardNav","cloudbox","cloudDropSearch","renderSignInNav","renderAdminNav","render","userSignedin","currentRoute"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport logo from \"./memriio_logo.png\"\nimport * as DropSearch from '../dropsearch/dropsearch'\nimport * as mem from '../memriioserver'\n\nimport './navigation.css'\n\n\n\nclass Navigation extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            searchwords:'',\n            userClouds:null,\n            selectedclouds:null\n        }\n    }\n\n    state={\n        searchwords:'',\n        userClouds:null,\n        selectedclouds:null,\n        showPersonalMemoryOptions:false,\n        personalMemoryunsharedOnly : false,\n            \n    }\n\n//---------------------------------------------------------------------------------    \n    \nonSearchBoxChange = (event) =>{\n    console.log('navigation-onSearchBoxChange : ' + event.target.value)\n    let tmparray = []\n    \n    if(event.target.value !== ''){\n        tmparray = event.target.value.split(\" \")\n    }\n    this.setState({searchwords:tmparray},this.showMemories )      \n}\n\n//---------------------------------------------------------------------------------\n\nhandleChangeSearchClouds = (clouds,userid) =>{\n    console.log('changeSearchClouds : ' + mem.stry(clouds.map(cloud => {return parseInt(cloud.value)})));\n\n    this.setState({selectedclouds:clouds},this.showMemories )\n}\n\n//---------------------------------------------------------------------------------\n\nshowMemories = () =>{\n    let selected = this.state.selectedclouds\n    let searchwords = this.state.searchwords\n    let cloudids = []\n\n    if(selected) cloudids = selected.map(cloud => {return parseInt(cloud.value)})\n    console.log( 'showMemories ' + cloudids + ': cloudids.length ' + cloudids.length)\n\n    \n    if(cloudids.length === 0){\n        console.log('showMemories calling loadMemories(null)');\n        this.props.loadMemories(null)\n\n    }else if (selected.length === 1 && selected[0].value === 0 ){  // personal only\n        console.log('personal only ' + selected[0].value);\n        if(this.state.personalMemoryunsharedOnly){                 // personal only - unshared only\n            \n            console.log('personal : unshared ' + this.props.userid + ' ' + searchwords);\n            mem.getMemories_PersonalOnly_Unshared(this.props.userid,searchwords)\n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n\n        }else {                                                     // personal only - bth shared and undshared\n            \n            console.log('personal : all ' + this.props.userid + ' ' + searchwords);\n            mem.getMemories_PersonalOnly_All(this.props.userid,searchwords)\n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n\n        }\n    }else if (cloudids.includes(0) ){                                // personal cloud + other clouds\n        console.log('personal cloud + other clouds  : cloudids ' + cloudids );\n \n        if(searchwords.length>0){                                   // clouds + searchwords\n            \n            console.log('personal cloud + other clouds with searchwords ' + this.props.userid + ' ' + searchwords + ' ' + cloudids );\n            mem.getMemories_User_Words_Clouds(this.props.userid,searchwords,cloudids)\n           .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        \n        }else{                                                      // clouds but no search words\n            \n            console.log('personal cloud + other clouds no searchwords ' + this.props.userid + ' : ' +  cloudids );\n            mem.getMemories_User_Clouds(this.props.userid,cloudids)            \n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        }\n    }else{\n        if(searchwords.length>0){                                   // clouds + searchwords\n            \n            console.log('other clouds only with searchwords [searchwords : cloudsids]' +  searchwords + ' : ' + cloudids );\n            mem.getMemories_Clouds(cloudids)\n           .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        \n        }else{                                                      // clouds but no search words\n            \n            console.log('other clouds only no searchwords : cloud ids' + cloudids );\n            mem.getMemories_Words_Clouds(cloudids,searchwords)            \n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        }\n    }\n    \n}\n\n//---------------------------------------------------------------------------------\n\nrender(){\n    const {userSignedin,currentRoute} = this.props\n    \n    if(userSignedin()){\n        if      (currentRoute === 'home')           { return ( this.renderStandardNav())\n        }else if(currentRoute === 'displayMemory')  { return ( null ) \n        }else if(currentRoute === 'admin')          { return ( this.renderAdminNav()) }\n            \n    }else{ return ( this.renderSignInNav())}\n}\n\n//---------------------------------------------------------------------------------\n\nloadUserClouds = (userid) => {    \n    if(userid) mem.getUserClouds(userid,(clouds => {      \n        clouds.push({\n            id:0,\n            name:'Personal'\n        })  \n        clouds.reverse()\n        this.setState({userClouds:clouds})\n    }))\n}\n\n//---------------------------------------------------------------------------------\n\nhandleSignOut = () => {\n    this.state={\n        searchwords:'',\n        userClouds:null,\n        selectedclouds:null,\n        showPersonalMemoryOptions:false,\n        personalMemoryunsharedOnly : false,          \n    }\n    this.props.onRouteChange('signin')\n}\n\nhandleAdminClick = () =>{\n    this.props.onRouteChange('admin')\n}\n\n//---------------------------------------------------------------------------------\n\nrenderStandardNav =() =>{\n    const {onRouteChange,userid} = this.props\n    let cloudbox = null\n    if(this.state.userClouds){        \n        cloudbox = DropSearch.cloudDropSearch( this.state.userClouds,null,true,false , this.handleChangeSearchClouds,userid)\n    }else{\n        this.loadUserClouds(userid)\n    }\n    \n    return(\n        <nav className='navBar'>\n            <ul>\n                <li className='floatRight'>\n                    <a  onClick={this.handleSignOut}\n                        className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        href=\"#\" \n                        title=\"Log Out\">Sign Out</a>\n                </li>\n\n                <li className='floatRight'>\n                    <a className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        onClick={this.handleAdminClick}\n                        href=\"#admin\" \n                        title=\"Administration\">Admin</a>\n                </li>\n\n                <li className='floatRight width50'>\n                    <input \n                        onChange ={this.onSearchBoxChange}\n                        className = 'border-box mt2 ba f4-ns b--black-30 pa2 br3 mb2'\n                        type=\"text\" \n                        aria-describedby=\"name-desc\"></input>\n                </li>\n\n                <li className='floatRight width50'>\n                    {cloudbox}\n                </li>                \n                \n                <li className='floatLeft'>\n                    <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\nrenderSignInNav = () => {\n    const onRouteChange = this.props.onRouteChange\n    return (\n        <nav className=\"navBar \">\n            <div className=\"logocell\" href=\"#\" title=\"Home\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n            </div>\n            <div className=\"dtc v-mid w-75 tr\">\n                \n                <a  onClick={()=>onRouteChange (\"signin\")}\n                    className=\"link dim dark-gray f6 f4-ns dib\" \n                    href=\"#\" \n                    title=\"Log \">Sign In</a>\n                \n            </div>\n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\nrenderAdminNav = () => {\n    const onRouteChange = this.props.onRouteChange\n    return (\n        <nav className=\"navBar \">\n            <div className=\"logocell\" href=\"#\" title=\"Home\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n            </div>\n            <div className=\"dtc v-mid w-75 tr\">\n                \n                <a  onClick={()=>onRouteChange ('home')}\n                    className=\"link dim dark-gray f6 f4-ns dib\" \n                    href=\"#\" \n                    title=\"Home \">Home</a>\n                \n            </div>\n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\n}        \n    \n\n\nexport default Navigation;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}