{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js\";\nimport React from 'react';\nimport tag from '../images/tag.png';\nimport cloudIMG from '../images/cloud.png';\nimport { ImageLabel, CloudLabel } from '../buttons/buttons';\nimport SelectDropDown from 'react-dropdown-select'; //-------------------------------------------------------------------\n\nexport function peopleDropSearch(people, callBack) {\n  let peoplesNames = people.map((person, idx) => {\n    return {\n      value: idx,\n      label: person.firstname + ' ' + person.lastname\n    };\n  });\n  let cStyle = null;\n\n  if (cRect) {\n    cStyle = {\n      position: 'fixed',\n      top: cRect.y,\n      width: cRect.width,\n      height: 20\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: cStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    options: peoplesNames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      let index = items[0].value;\n      if (callBack) callBack(people[index]);\n    } //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n} //-------------------------------------------------------------------\n\nexport function cloudDropSearch(cRect, clouds, selected, showmulti, keepInList, callBack, userid, hideCallback) {\n  userid = userid || 0;\n  let cloudnames = clouds.map((cloud, idx) => {\n    return {\n      value: cloud.id,\n      label: cloud.name\n    };\n  });\n  let selectedValues = [];\n\n  if (selected) {\n    selected.map(cloud => {\n      selectedValues.push({\n        value: cloud.id,\n        label: cloud.name\n      });\n    });\n  }\n\n  let cStyle = null;\n\n  if (cRect) {\n    cStyle = {\n      position: 'fixed',\n      top: cRect.y,\n      width: cRect.width,\n      height: 20\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: cStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    values: selectedValues,\n    multi: showmulti,\n    keepSelectedInList: keepInList,\n    options: cloudnames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      console.log('selectDrop : ' + JSON.stringify(items));\n      if (callBack) callBack(items, userid);\n    },\n    onblu: true //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }));\n} //-------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js"],"names":["React","tag","cloudIMG","ImageLabel","CloudLabel","SelectDropDown","peopleDropSearch","people","callBack","peoplesNames","map","person","idx","value","label","firstname","lastname","cStyle","cRect","position","top","y","width","height","items","index","item","itemIndex","props","state","methods","addItem","cloudDropSearch","clouds","selected","showmulti","keepInList","userid","hideCallback","cloudnames","cloud","id","name","selectedValues","push","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport tag from '../images/tag.png'\nimport cloudIMG from '../images/cloud.png'\n\nimport {ImageLabel, CloudLabel} from '../buttons/buttons'\nimport SelectDropDown from 'react-dropdown-select'\n\n\n//-------------------------------------------------------------------\n\nexport function peopleDropSearch ( people ,callBack){\n \n  let peoplesNames = people.map((person,idx) => {\n      return {value : idx, label: (person.firstname + ' ' + person.lastname)}})\n\n  let cStyle = null\n  if(cRect){\n    cStyle = { position:'fixed', top:cRect.y, width:cRect.width, height:20}\n  }\n\n  return (\n    \n    <div style = {cStyle} >\n      <SelectDropDown \n          \n          placeholder   = '+ add'\n          options       = { peoplesNames } \n          searchable    = { true }\n          closeOnSelect = { true }\n          clearOnSelect = { true }\n          \n          //------------\n\n          onChange = { \n              items => {\n              \n                let index = items[0].value\n                if(callBack) callBack(people[index])\n              }\n            }\n\n          //------------\n\n          itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n              \n            <ImageLabel \n              \n              key={'i' + itemIndex} \n              onClick={() => methods.addItem(item)} \n              leftImg = {tag}\n              label = {item.label}\n            />\n          )}\n          \n      />\n    </div>\n  )\n}\n\n//-------------------------------------------------------------------\n\nexport function cloudDropSearch ( cRect,clouds, selected,showmulti,keepInList,callBack,userid,hideCallback){\n  userid = userid || 0\n  \n  let cloudnames = clouds.map((cloud,idx) => {\n      return {value : cloud.id, label: cloud.name}})\n  \n  let selectedValues = []\n  if (selected){\n     selected.map((cloud ) =>{\n      selectedValues.push({value : cloud.id, label: cloud.name})\n    })\n  }\n \n  let cStyle = null\n  if(cRect){\n    cStyle = { position:'fixed', top:cRect.y, width:cRect.width, height:20}\n  }\n  \n  return (\n  \n  <div style = {cStyle} >\n\n    <SelectDropDown \n        placeholder         = '+ add'\n        values              = { selectedValues }\n        multi               = { showmulti } \n        keepSelectedInList  = { keepInList}\n        options             = { cloudnames } \n        searchable          = { true }\n        closeOnSelect       = { true }\n        clearOnSelect       = { true }\n        \n        //------------\n\n        onChange = { \n            items => {\n              console.log('selectDrop : ' + JSON.stringify(items));\n              if(callBack) callBack(items,userid)\n          }\n        }\n\n        onblu\n        \n        //------------\n\n        itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n            \n          <ImageLabel \n            \n            key={'i' + itemIndex} \n            onClick={() => methods.addItem(item)} \n            leftImg = {tag}\n            label = {item.label}\n          />\n        )}\n        \n    />\n  </div>\n  )\n}\n\n//-------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}