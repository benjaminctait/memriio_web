{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/memrii/web/memriio_web/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport Admin from './components/admin/admin.js';\nimport * as mem from './components/memriioserver.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.userSignedin = () => {\n      return this.state.isSignedIn;\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          userid: data.userid,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email,\n          joined: data.joined,\n          cloudSelection: this.extractSelectedClouds(data.webclouds)\n        }\n      });\n      console.log('loaduser ', this.state.user.cloudSelection);\n    };\n\n    this.extractSelectedClouds = webClouds => {\n      let tempArray = [];\n\n      if (webClouds) {\n        webClouds.split(',').map(cid => {\n          tempArray.push(parseInt(cid));\n        });\n      }\n\n      return tempArray;\n    };\n\n    this.handleNewMemory = memory => {\n      console.log('handleNewMemory : ' + JSON.stringify(memory));\n      let newMemories = this.state.searchResult.memories;\n      newMemories.push(memory);\n      this.loadMemories(newMemories);\n    };\n\n    this.loadMemories = memories => {\n      if (memories) {\n        console.log('App-loadMemories : memory count : ' + memories.length);\n      } else {\n        console.log('App-loadMemories : memory count : ' + 0);\n      }\n\n      this.setState({\n        searchResult: {\n          memories: memories\n        }\n      });\n    };\n\n    this.setCloudsLoaded = value => {\n      this.setState({\n        cloudsLoaded: value\n      });\n    };\n\n    this.resetUser = () => {\n      this.setState({\n        user: {\n          userid: 0,\n          firstname: '',\n          lastname: '',\n          email: '',\n          joined: '',\n          cloudSelection: null\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      console.log('app.onRouteChange : route = ' + route);\n\n      if (route === 'signin') {\n        this.resetUser();\n        this.setState({\n          searchResult: {\n            memories: []\n          },\n          route: route,\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else if (route === 'memoryUpdated') {\n        this.loadUser(this.state.user);\n        this.setState({\n          route: 'home',\n          isSignedIn: true\n        });\n      } else if (route === 'admin') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          route: route\n        });\n      }\n    };\n\n    this.handleEditMemory = memory => {\n      this.state.activeMemory = memory;\n      console.log('App.displayMemory : activeMemory.id ' + memory.memid);\n      this.onRouteChange('displayMemory');\n    };\n\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory: null,\n      cloudsLoaded: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        joined: '',\n        cloudSelection: []\n      },\n      searchResult: {\n        memories: []\n      }\n    };\n  } //---------------------------------------------------------------------------------\n\n\n  //---------------------------------------------------------------------------------\n  render() {\n    let routeName = this.state.route;\n    let content = null;\n    console.log('app.render.user ', this.state.user, this.state.user.cloudSelection);\n    let nav = /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      userSignedin: this.userSignedin,\n      loadMemories: this.loadMemories,\n      onNewMemory: this.handleNewMemory,\n      startingClouds: this.state.user.cloudSelection,\n      currentRoute: this.state.route,\n      userid: this.state.user.userid,\n      setCloudsLoaded: this.setCloudsLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    });\n\n    if (routeName === 'home') {\n      content = /*#__PURE__*/React.createElement(CardCollection, {\n        memories: this.state.searchResult.memories,\n        userid: this.state.user.userid,\n        onEditMemory: this.handleEditMemory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'signin') {\n      content = /*#__PURE__*/React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'admin') {\n      console.log('app.render : route = ' + routeName);\n      content = /*#__PURE__*/React.createElement(Admin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'register') {\n      content = /*#__PURE__*/React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, nav, content);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/bentait/memrii/web/memriio_web/src/App.js"],"names":["React","Navigation","CardCollection","Signin","Register","Admin","mem","App","Component","constructor","userSignedin","state","isSignedIn","loadUser","data","setState","user","userid","firstname","lastname","email","joined","cloudSelection","extractSelectedClouds","webclouds","console","log","webClouds","tempArray","split","map","cid","push","parseInt","handleNewMemory","memory","JSON","stringify","newMemories","searchResult","memories","loadMemories","length","setCloudsLoaded","value","cloudsLoaded","resetUser","onRouteChange","route","handleEditMemory","activeMemory","memid","id","name","render","routeName","content","nav"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport Admin from './components/admin/admin.js'\nimport * as mem from './components/memriioserver.js'\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    \n    this.state ={\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory:null,\n      cloudsLoaded:false,\n      \n      user:{\n        id:'',\n        name:'',\n        email:'',\n        joined:'',\n        cloudSelection:[],\n      },\n      searchResult:{\n        memories:[]\n      }\n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n  userSignedin = () => {\n    return this.state.isSignedIn;\n  }\n\n//---------------------------------------------------------------------------------\n\n  loadUser = (data) => {\n    \n    this.setState({ user : {  userid    : data.userid, \n                              firstname : data.firstname,\n                              lastname  : data.lastname,\n                              email     : data.email,\n                              joined    : data.joined,\n                              cloudSelection : this.extractSelectedClouds(data.webclouds)\n                            }\n      })\n    console.log('loaduser ' , this.state.user.cloudSelection);\n  } \n//---------------------------------------------------------------------------------\n\nextractSelectedClouds = (webClouds) => {\n  let tempArray = []\n  if(webClouds){\n    webClouds.split(',').map(cid => {tempArray.push(parseInt(cid))})\n  }\n  return tempArray\n}\n\n//---------------------------------------------------------------------------------\n\n  handleNewMemory = (memory) => {\n    console.log('handleNewMemory : ' + JSON.stringify(memory));\n    \n    let newMemories = this.state.searchResult.memories\n    newMemories.push(memory)\n    this.loadMemories(newMemories)\n  } \n\n//---------------------------------------------------------------------------------\n\n  loadMemories =(memories) => {\n\n    if(memories){\n      console.log('App-loadMemories : memory count : ' + memories.length);\n    }else{\n      console.log('App-loadMemories : memory count : ' + 0);\n    }\n\n      \n    this.setState({searchResult:{memories : memories}})\n    \n  }\n\n//---------------------------------------------------------------------------------\n\nsetCloudsLoaded =(value) => {\n\n  this.setState({cloudsLoaded:value})\n  \n}\n\n\n//---------------------------------------------------------------------------------\n  resetUser = () =>{\n    this.setState({ user : {  userid    : 0, \n                              firstname : '',\n                              lastname  : '',\n                              email     : '',\n                              joined    : '',\n                              cloudSelection : null\n                          },\n                        \n                    }\n                  )\n  }\n\n//---------------------------------------------------------------------------------\n\n  onRouteChange = (route) =>{\n   \n    console.log('app.onRouteChange : route = ' + route);\n    \n    if(route === 'signin'){\n      this.resetUser()\n      this.setState({\n        searchResult:{memories:[]},\n        route:route, \n        isSignedIn : false\n      })\n    }else if (route === 'home'){\n      this.setState({route:route, isSignedIn: true})\n    }else if (route === 'memoryUpdated'){\n      this.loadUser(this.state.user)\n      this.setState({route:'home', isSignedIn: true})\n    }else if (route === 'admin'){\n      \n     this.setState({route:route, isSignedIn: true})\n    }else{\n      this.setState({route:route})\n    }\n    \n  }\n\n//---------------------------------------------------------------------------------\n\nhandleEditMemory = (memory) => {\n  this.state.activeMemory = memory;\n  console.log('App.displayMemory : activeMemory.id ' + memory.memid);\n  this.onRouteChange('displayMemory')\n}\n\n//---------------------------------------------------------------------------------\n\nrender() {\n\n  \n    let routeName = this.state.route\n    let content = null\n    console.log('app.render.user ' , this.state.user, this.state.user.cloudSelection);\n    \n    \n    let nav = <Navigation \n                onRouteChange   = { this.onRouteChange      }   \n                userSignedin    = { this.userSignedin       }\n                loadMemories    = { this.loadMemories       }     \n                onNewMemory     = { this.handleNewMemory    }     \n                startingClouds  = { this.state.user.cloudSelection }    \n                currentRoute    = { this.state.route        }\n                userid          = { this.state.user.userid  }\n                setCloudsLoaded = { this.setCloudsLoaded    }\n              />\n\n    if(routeName === 'home'){\n      content = <CardCollection \n              memories      = { this.state.searchResult.memories } \n              userid        = { this.state.user.userid } \n              onEditMemory  = { this.handleEditMemory  }/>\n              \n    }else if(routeName === 'signin'){\n      content = <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n    }else if (routeName === 'admin'){\n      console.log('app.render : route = ' + routeName);\n      content = <Admin/>\n\n    }else if (routeName === 'register'){\n      content = <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    }\n\n\n    return (\n      <div className=\"App\">\n          { nav     }\n          { content }\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}