{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js\";\nimport React from 'react';\nimport * as mem from '../memriioserver';\nimport './admin.css';\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png';\nimport tag from '../images/tag.png';\nimport cross from '../images/x-symbol.png';\nimport Modal from 'react-modal';\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clouds: [],\n      users: [],\n      personModalIsOpen: false\n    };\n\n    this.handleCloudSearch = e => {\n      console.log(e.target.value);\n    };\n\n    this.handleSelectCloud = cloud => {\n      console.log(cloud.name);\n      let clouds = [];\n      clouds.push(cloud);\n      mem.getCloudPeople(clouds, null).then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handlePeopleSearch = e => {};\n\n    this.handleAddPerson = () => {\n      this.setState({\n        personModalIsOpen: true\n      });\n    };\n\n    this.handleSelectPerson = Person => {};\n\n    this.afterOpenModal = () => {};\n\n    this.closeModal = () => {\n      this.setState({\n        personModalIsOpen: false\n      });\n    };\n\n    this.renderClouds = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"admin-column cloud-column \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, \"Clouds\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"searchBox\",\n        onChange: this.handleCloudSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, this.state.clouds.map(cloud => {\n        return /*#__PURE__*/React.createElement(CloudLabel, {\n          data: cloud,\n          key: 'i' + cloud.id,\n          onClick: this.handleSelectCloud,\n          leftImg: cloudImage,\n          label: cloud.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }\n        });\n      })));\n    };\n\n    this.renderCloudPeople = () => {\n      let people = [];\n\n      if (this.state.people) {\n        this.state.people.map(person => {\n          people.push( /*#__PURE__*/React.createElement(CloudLabel, {\n            data: person,\n            key: 'i' + person.userid,\n            onClick: this.handleSelectPerson,\n            leftImg: tag,\n            badge: cross,\n            label: person.firstname + ' ' + person.lastname,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 9\n            }\n          }));\n        });\n        people.push( /*#__PURE__*/React.createElement(CloudLabel, {\n          data: null,\n          key: 'addPersons',\n          onClick: this.handleAddPerson,\n          leftImg: tag,\n          label: '+ Add',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }\n        }));\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-column user-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"floatLeft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 9\n          }\n        }, \"People\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"searchBox\",\n          onChange: this.handlePeopleSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"floatLeft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }\n        }, people));\n      } else {\n        return null;\n      }\n    };\n  }\n\n  //---------------------------------------------------------------\n  componentDidMount() {\n    console.log('Administration.componentDidMount ');\n    mem.getAllClouds().then(clouds => {\n      console.log('all clouds');\n      console.log(clouds);\n      this.setState({\n        clouds: clouds\n      });\n    });\n  } //---------------------------------------------------------------\n\n\n  //---------------------------------------------------------------\n  render() {\n    const cloudview = this.renderClouds();\n    const cloudpeople = this.renderCloudPeople();\n    const addPersonModel = modal.renderAddPersonModal();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"some-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, addPersonModel, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, cloudview, cloudpeople));\n  } //---------------------------------------------------------------\n\n\n  renderAddPersonModal() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.personModalIsOpen,\n      onAfterOpen: this.afterOpenModal,\n      onRequestClose: this.closeModal,\n      className: \"modal\",\n      overlayClassName: \"backdropStyle\",\n      contentLabel: \"Example Modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, \"Add Person\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onNewUserFirstNameChange,\n      className: \"pa2 input-reset black ba bg-transparent hover-bg-black  w-100\",\n      type: \"text\",\n      name: \"firstname\",\n      id: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, \"close\"));\n  } //---------------------------------------------------------------\n  //---------------------------------------------------------------\n\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js"],"names":["React","mem","CloudLabel","cloudImage","tag","cross","Modal","Admin","Component","state","clouds","users","personModalIsOpen","handleCloudSearch","e","console","log","target","value","handleSelectCloud","cloud","name","push","getCloudPeople","then","people","setState","handlePeopleSearch","handleAddPerson","handleSelectPerson","Person","afterOpenModal","closeModal","renderClouds","map","id","renderCloudPeople","person","userid","firstname","lastname","componentDidMount","getAllClouds","render","cloudview","cloudpeople","addPersonModel","modal","renderAddPersonModal","onNewUserFirstNameChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as mem from '../memriioserver'\nimport './admin.css'\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png'\nimport tag from '../images/tag.png'\nimport cross from '../images/x-symbol.png'\n\nimport Modal from 'react-modal'\n\nclass Admin extends React.Component{\n\nstate ={\n  clouds:[],\n  users:[],\n  personModalIsOpen:false\n}\n\n//---------------------------------------------------------------\n\ncomponentDidMount(){\n  console.log('Administration.componentDidMount ' )\n  mem.getAllClouds().then(clouds => {\n    console.log('all clouds');    \n    console.log(clouds);\n    this.setState({clouds:clouds})\n  })\n}\n\n//---------------------------------------------------------------\n\nhandleCloudSearch = (e) => {\n  console.log(e.target.value);\n  \n}\n\n//---------------------------------------------------------------\n\nhandleSelectCloud = ( cloud ) => {\n  console.log(cloud.name);\n  let clouds = []\n  clouds.push(cloud)\n  mem.getCloudPeople(clouds,null).then(people => {this.setState({people:people})})\n  \n}\n\n//---------------------------------------------------------------\n\nhandlePeopleSearch = (e) => {\n\n}\n\n//---------------------------------------------------------------\n\nhandleAddPerson = () => { \n  this.setState({personModalIsOpen:true})\n\n}\n\n//---------------------------------------------------------------\nhandleSelectPerson = (Person) => {\n\n}\n\n//---------------------------------------------------------------\n\nrender(){\n  const cloudview       = this.renderClouds()\n  const cloudpeople     = this.renderCloudPeople()\n  const addPersonModel  = modal.renderAddPersonModal()\n    return (\n      <div className='some-page-wrapper'>\n        {addPersonModel}\n        <div className ='headerrow'></div>\n        <div className='row'>\n          {cloudview}\n          {cloudpeople}\n        </div>\n      </div>\n    )\n}\n\n//---------------------------------------------------------------\n\nafterOpenModal =() =>{\n\n}\n\ncloseModal = () =>{\n  this.setState({personModalIsOpen:false})\n\n}\n\nrenderAddPersonModal (){\n\n  return(\n    <Modal\n          isOpen          = {this.state.personModalIsOpen}\n          onAfterOpen     = {this.afterOpenModal}\n          onRequestClose  = {this.closeModal}\n          className       = 'modal'\n          overlayClassName= 'backdropStyle'\n          contentLabel    = \"Example Modal\"\n    >\n      <h2 >Add Person</h2>\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">First Name</label>\n        <input \n            onChange={this.onNewUserFirstNameChange}\n            className=\"pa2 input-reset black ba bg-transparent hover-bg-black  w-100\" \n            type=\"text\" \n            name=\"firstname\" \n            id=\"firstname\" />\n            \n      <button onClick={this.closeModal}>close</button>\n        \n    </Modal>    \n  )\n  \n}\n\n//---------------------------------------------------------------\n\nrenderClouds = () =>{\n  return ( \n\n    <div className='admin-column cloud-column '>\n      <h1 className='floatLeft'>Clouds</h1>\n      <input className='searchBox' onChange={this.handleCloudSearch}/>\n      <div className='floatLeft'>\n        { \n          this.state.clouds.map(cloud =>{\n            return (\n              <CloudLabel \n                data    = { cloud}\n                key     = {'i' + cloud.id} \n                onClick = { this.handleSelectCloud} \n                leftImg = { cloudImage}\n                label   = { cloud.name}\n              />   \n            )\n          }) \n        }\n      </div>\n    </div>\n  )\n}\n\n//---------------------------------------------------------------\n\nrenderCloudPeople = () =>{\n  \n  let people = []\n  if(this.state.people){\n\n    this.state.people.map(person =>{\n      people.push(\n        <CloudLabel \n            data    = { person}\n            key     = {'i' + person.userid} \n            onClick = { this.handleSelectPerson} \n            leftImg = { tag   }\n            badge   = { cross }\n            label   = { person.firstname + ' ' + person.lastname}\n          /> \n      )})\n\n      people.push(\n        <CloudLabel \n            data    = { null }\n            key     = {'addPersons'} \n            onClick = { this.handleAddPerson } \n            leftImg = { tag }\n            label   = { '+ Add' }\n          /> \n      ) \n\n    return ( \n      <div className='admin-column user-column'>\n        <h1 className='floatLeft'>People</h1>\n        <input className='searchBox' onChange={this.handlePeopleSearch}/>\n        <div className='floatLeft'>\n          { people }\n        </div>\n      </div>\n    )\n  }else{\n    return null\n  }\n  \n\n}\n\n//---------------------------------------------------------------\n\n}\nexport default Admin"]},"metadata":{},"sourceType":"module"}