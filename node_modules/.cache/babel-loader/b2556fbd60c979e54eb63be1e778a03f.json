{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/App.js\";\nimport React, { memo } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport NewPost from './components/newpost/newpost.js'; //import MemoryEditor from './components/memoryeditor/memoryeditor.js';\n\nimport './App.css';\nimport MemoryEditor from './components/memoryeditor/memoryeditor.js';\nimport { array } from 'prop-types';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.userSignedin = () => {\n      return this.state.isSignedIn;\n    };\n\n    this.loadUser = data => {\n      this.state.user.userid = data.userid;\n      this.state.user.firstname = data.firstname;\n      this.state.user.lastname = data.lastname;\n      this.state.user.email = data.email;\n      this.state.user.joined = data.joined;\n      fetch('https://memriio-api-0.herokuapp.com/get_memories_userid', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid: data.userid\n        })\n      }).then(response => response.json()).then(memories => {\n        if (memories.success) this.loadMemories(memories.data);\n      });\n    };\n\n    this.loadMemories = memories => {\n      if (Array.isArray(memories)) {\n        console.log('App-loadMemories : memory count : ' + memories.length);\n        this.setState({\n          searchResult: {\n            memories: memories\n          }\n        });\n      }\n    };\n\n    this.onRouteChange = route => {\n      console.log('Apps - onRouteChange : route ' + route);\n\n      if (route === 'signout') {\n        this.setState({\n          route: route,\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else if (route === 'memoryUpdated') {\n        this.loadUser(this.state.user);\n        this.setState({\n          route: 'home',\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          route: route\n        });\n      }\n    };\n\n    this.displayMemory = memory => {\n      this.state.activeMemory = memory;\n      console.log('App.displayMemory : activeMemory.id ' + this.state.activeMemory.id);\n      this.onRouteChange('displayMemory');\n    };\n\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory: null,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        joined: ''\n      },\n      searchResult: {\n        memories: []\n      }\n    };\n  } //---------------------------------------------------------------------------------\n\n\n  //---------------------------------------------------------------------------------\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      userSignedin: this.userSignedin,\n      loadMemories: this.loadMemories,\n      currentRoute: this.state.route,\n      user: this.state.user.userid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(CardCollection, {\n      memories: this.state.searchResult.memories,\n      userid: this.state.user.userid,\n      onExpandClick: this.displayMemory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 14\n      }\n    }) : this.state.route === 'newpost' ? /*#__PURE__*/React.createElement(NewPost, {\n      userid: this.state.user.userid,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }\n    }) : this.state.route === 'displayMemory' ? /*#__PURE__*/React.createElement(MemoryEditor, {\n      memory: this.state.activeMemory,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/App.js"],"names":["React","memo","Navigation","CardCollection","Signin","Register","NewPost","MemoryEditor","array","App","Component","constructor","userSignedin","state","isSignedIn","loadUser","data","user","userid","firstname","lastname","email","joined","fetch","method","headers","body","JSON","stringify","then","response","json","memories","success","loadMemories","Array","isArray","console","log","length","setState","searchResult","onRouteChange","route","displayMemory","memory","activeMemory","id","name","render"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport NewPost from './components/newpost/newpost.js'\n//import MemoryEditor from './components/memoryeditor/memoryeditor.js';\n\nimport './App.css';\nimport MemoryEditor from './components/memoryeditor/memoryeditor.js';\nimport { array } from 'prop-types';\n\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    \n    this.state ={\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory:null,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        joined:''\n      },\n      searchResult:{\n        memories:[]\n      }\n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n  userSignedin = () => {\n    return this.state.isSignedIn;\n  }\n\n//---------------------------------------------------------------------------------\n\n  loadUser = (data) => {\n    \n    this.state.user.userid = data.userid\n    this.state.user.firstname = data.firstname\n    this.state.user.lastname = data.lastname\n    this.state.user.email = data.email\n    this.state.user.joined = data.joined\n          \n\n    fetch('https://memriio-api-0.herokuapp.com/get_memories_userid', {\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify({\n          userid:data.userid\n          })\n        })\n          .then(response => response.json())\n          .then(memories=>{\n              if(memories.success) this.loadMemories(memories.data)\n          })\n  } \n\n//---------------------------------------------------------------------------------\n\n  loadMemories =(memories) => {\n\n    if(Array.isArray(memories)){\n      console.log('App-loadMemories : memory count : ' + memories.length);\n      this.setState({searchResult:{memories : memories}})\n    }\n    \n    \n  }\n\n//---------------------------------------------------------------------------------\n\n  onRouteChange = (route) =>{\n   \n    console.log('Apps - onRouteChange : route ' + route);\n    \n    if(route === 'signout'){\n      this.setState({route:route, isSignedIn : false})\n    }else if (route === 'home'){\n      this.setState({route:route, isSignedIn: true})\n    }else if (route === 'memoryUpdated'){\n      this.loadUser(this.state.user)\n      this.setState({route:'home', isSignedIn: true})\n    }else{\n      this.setState({route:route})\n    }\n    \n  }\n\n//---------------------------------------------------------------------------------\n\ndisplayMemory = (memory) => {\n  \n  \n  this.state.activeMemory = memory;\n  console.log('App.displayMemory : activeMemory.id ' + this.state.activeMemory.id);\n  this.onRouteChange('displayMemory')\n\n}\n\n//---------------------------------------------------------------------------------\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation \n          onRouteChange={this.onRouteChange} \n          userSignedin={this.userSignedin}\n          loadMemories={this.loadMemories}           \n          currentRoute={this.state.route}\n          user={this.state.user.userid}/>\n        \n        { this.state.route === 'home' \n          ? <CardCollection \n              memories={this.state.searchResult.memories} \n              userid={this.state.user.userid} \n              onExpandClick={this.displayMemory}\n            />\n          : (this.state.route === 'signin'\n            ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            :(this.state.route === 'newpost')\n              ?<NewPost userid={this.state.user.userid} onRouteChange={this.onRouteChange} />\n              :(this.state.route === 'displayMemory')\n              ?<MemoryEditor \n                  memory={this.state.activeMemory}\n                  onRouteChange={this.onRouteChange}\n              />\n              :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              \n\n          )\n        }\n\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}