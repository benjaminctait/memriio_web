{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactMotion = require(\"react-motion\");\n\nvar _immutabilityHelper = _interopRequireDefault(require(\"immutability-helper\"));\n\nvar _reactMultiRef = _interopRequireDefault(require(\"react-multi-ref\"));\n\nvar _OnUpdate = _interopRequireDefault(require(\"./OnUpdate\"));\n\nvar _MoveContainer = _interopRequireDefault(require(\"./MoveContainer\"));\n/* eslint react/prop-types: \"error\" */\n\n\nvar DEFAULT_HEIGHT = {\n  natural: 200,\n  drag: 30\n};\n\nfunction getScrollSpeed(distance, speed, size) {\n  // If distance is zero, then the result is the max speed. Otherwise,\n  // the result tapers toward zero as it gets closer to the opposite\n  // edge of the region.\n  return Math.round(speed - speed / size * distance);\n}\n\nvar DraggableList = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(DraggableList, _React$Component);\n\n  function DraggableList(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, DraggableList);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(DraggableList).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_itemRefs\", new _reactMultiRef[\"default\"]());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoScrollerTimer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_listRef\", React.createRef());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleTouchMove\", function (e) {\n      e.preventDefault();\n\n      _this._handleMouseMove(e.touches[0]);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleMouseMove\", function (_ref) {\n      var pageY = _ref.pageY,\n          clientY = _ref.clientY;\n      var _this$props = _this.props,\n          list = _this$props.list,\n          autoScrollMaxSpeed = _this$props.autoScrollMaxSpeed,\n          autoScrollRegionSize = _this$props.autoScrollRegionSize;\n      var _this$state = _this.state,\n          dragging = _this$state.dragging,\n          lastDrag = _this$state.lastDrag;\n      if (!dragging || !lastDrag) return;\n\n      var containerEl = _this._getContainer();\n\n      var dragVisualIndex = _this._getDragVisualIndex();\n\n      var keyFn = _this._getKeyFn();\n\n      clearInterval(_this._autoScrollerTimer); // If the user has the mouse near the top or bottom of the container and\n      // not at the end of the list, then autoscroll.\n\n      if (dragVisualIndex !== 0 && dragVisualIndex !== list.length - 1) {\n        var scrollSpeed = 0;\n        var containerRect = containerEl && containerEl !== document.body && containerEl.getBoundingClientRect ? containerEl.getBoundingClientRect() : {\n          top: 0,\n          bottom: Infinity\n        }; // Get the lowest of the screen top and the container top.\n\n        var top = Math.max(0, containerRect.top);\n        var distanceFromTop = clientY - top;\n\n        if (distanceFromTop > 0 && distanceFromTop < autoScrollRegionSize) {\n          scrollSpeed = -1 * getScrollSpeed(distanceFromTop, autoScrollMaxSpeed, autoScrollRegionSize);\n        } else {\n          // Get the lowest of the screen bottom and the container bottom.\n          var bottom = Math.min(window.innerHeight, containerRect.bottom);\n          var distanceFromBottom = bottom - clientY;\n\n          if (distanceFromBottom > 0 && distanceFromBottom < autoScrollRegionSize) {\n            scrollSpeed = getScrollSpeed(distanceFromBottom, autoScrollMaxSpeed, autoScrollRegionSize);\n          }\n        }\n\n        if (scrollSpeed !== 0) {\n          _this._scrollContainer(scrollSpeed);\n\n          _this._autoScrollerTimer = setTimeout(function () {\n            _this._handleMouseMove({\n              pageY: pageY + (containerEl === document.body ? scrollSpeed : 0),\n              clientY: clientY\n            });\n          }, 16);\n        }\n      }\n\n      var containerScroll = !containerEl || containerEl === document.body ? 0 : containerEl.scrollTop;\n      var mouseY = pageY - lastDrag.mouseOffset + containerScroll;\n\n      if (_this.props.constrainDrag) {\n        var visualList = _this._getVisualListDuringDrag();\n\n        mouseY = Math.max(mouseY, _this._getDistanceFromTopDuringDrag(lastDrag, keyFn(visualList[0]), visualList));\n        mouseY = Math.min(mouseY, _this._getDistanceFromTopDuringDrag(lastDrag, keyFn(visualList[visualList.length - 1]), visualList));\n      }\n\n      _this.setState({\n        lastDrag: (0, _objectSpread2[\"default\"])({}, lastDrag, {\n          mouseY: mouseY\n        })\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_handleMouseUp\", function () {\n      clearInterval(_this._autoScrollerTimer);\n      window.removeEventListener('mouseup', _this._handleMouseUp);\n      window.removeEventListener('touchend', _this._handleMouseUp);\n      window.removeEventListener('touchmove', _this._handleTouchMove);\n      window.removeEventListener('mousemove', _this._handleMouseMove);\n      if (document.documentElement) document.documentElement.style.cursor = '';\n      _this._lastScrollDelta = 0;\n      var _this$props2 = _this.props,\n          list = _this$props2.list,\n          onMoveEnd = _this$props2.onMoveEnd;\n      var _this$state2 = _this.state,\n          dragging = _this$state2.dragging,\n          lastDrag = _this$state2.lastDrag;\n\n      if (dragging && lastDrag && onMoveEnd) {\n        var dragIndex = _this._getDragListIndex();\n\n        var _newIndex = _this._getDragVisualIndex();\n\n        if (dragIndex !== _newIndex) {\n          var _newList = _this._getVisualListDuringDrag();\n\n          onMoveEnd(_newList, list[dragIndex], dragIndex, _newIndex);\n        }\n\n        _this.setState({\n          dragging: false\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_lastScrollDelta\", 0);\n    _this.state = {\n      useAbsolutePositioning: false,\n      dragging: false,\n      lastDrag: null,\n      heights: null\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(DraggableList, [{\n    key: \"getItemInstance\",\n    value: function getItemInstance(key) {\n      var ref = this._itemRefs.map.get(key);\n\n      if (!ref) throw new Error('key not found');\n      return ref.getTemplate();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._handleMouseUp();\n    }\n  }, {\n    key: \"_handleTouchStart\",\n    value: function _handleTouchStart(itemKey, pressY, event) {\n      event.stopPropagation();\n\n      this._handleStartDrag(itemKey, pressY, event.touches[0].pageY);\n    }\n  }, {\n    key: \"_handleMouseDown\",\n    value: function _handleMouseDown(itemKey, pressY, event) {\n      event.preventDefault();\n\n      this._handleStartDrag(itemKey, pressY, event.pageY);\n    }\n  }, {\n    key: \"_handleStartDrag\",\n    value: function _handleStartDrag(itemKey, pressY, pageY) {\n      var _this2 = this;\n\n      if (document.documentElement) document.documentElement.style.cursor = 'move';\n      window.addEventListener('mouseup', this._handleMouseUp);\n      window.addEventListener('touchend', this._handleMouseUp);\n      window.addEventListener('touchmove', this._handleTouchMove);\n      window.addEventListener('mousemove', this._handleMouseMove); // If an element has focus while we drag around the parent, some browsers\n      // try to scroll the parent element to keep the focused element in view.\n      // Stop that.\n\n      {\n        var listEl = this._listRef.current;\n        if (!listEl) throw new Error('Should not happen');\n\n        if (listEl.contains && document.activeElement && listEl.contains(document.activeElement)) {\n          document.activeElement.blur();\n        }\n      }\n\n      var keyFn = this._getKeyFn();\n\n      var newHeights = null;\n\n      if (this.state.heights == null) {\n        var _newHeights = Object.create(null);\n\n        this.props.list.forEach(function (item) {\n          var key = keyFn(item);\n\n          var containerRef = _this2._itemRefs.map.get(key);\n\n          var refEl = containerRef ? containerRef.getDOMNode().firstElementChild : null;\n          var ref = containerRef ? containerRef.getTemplate() : null;\n          var natural = refEl instanceof HTMLElement ? refEl.offsetHeight : DEFAULT_HEIGHT.natural;\n          var drag = ref && typeof ref.getDragHeight === 'function' && ref.getDragHeight() || natural;\n          _newHeights[key] = {\n            natural: natural,\n            drag: drag\n          };\n        });\n        newHeights = _newHeights;\n      } // Need to re-render once before we start dragging so that the `y` values\n      // are set using the correct state.heights and then can animate from there.\n\n\n      var afterHeights = function afterHeights() {\n        var itemIndex = _this2.props.list.map(keyFn).indexOf(itemKey); // pressY will be non-null if the list is currently animating (because the\n        // clicked item has its `y` prop set). pressY will be null if the list is\n        // not currently animating (because the clicked item will be at its\n        // natural position, which is calculatable using _getDistance).\n\n\n        var startY = pressY == null ? _this2._getDistance(0, itemIndex, false) : pressY;\n\n        var containerEl = _this2._getContainer();\n\n        var containerScroll = !containerEl || containerEl === document.body ? 0 : containerEl.scrollTop;\n\n        _this2.setState({\n          useAbsolutePositioning: true,\n          dragging: true,\n          lastDrag: {\n            itemKey: itemKey,\n            startY: startY,\n            mouseY: startY,\n            mouseOffset: pageY - startY + containerScroll\n          }\n        });\n      };\n\n      if (newHeights) {\n        this.setState({\n          heights: newHeights\n        }, afterHeights);\n      } else {\n        afterHeights();\n      }\n    }\n  }, {\n    key: \"_scrollContainer\",\n    value: function _scrollContainer(delta) {\n      var containerEl = this._getContainer();\n\n      if (!containerEl) return;\n\n      if (window.scrollBy && containerEl === document.body) {\n        window.scrollBy(0, delta);\n      } else {\n        containerEl.scrollTop += delta;\n      }\n    }\n  }, {\n    key: \"_adjustScrollAtEnd\",\n    value: function _adjustScrollAtEnd(delta) {\n      var frameDelta = Math.round(delta - this._lastScrollDelta);\n\n      this._scrollContainer(frameDelta);\n\n      this._lastScrollDelta += frameDelta;\n    }\n  }, {\n    key: \"_getDragListIndex\",\n    value: function _getDragListIndex() {\n      var list = this.props.list;\n      var lastDrag = this.state.lastDrag;\n\n      if (!lastDrag) {\n        throw new Error('No drag happened');\n      }\n\n      var keyFn = this._getKeyFn();\n\n      return DraggableList._getIndexOfItemWithKey(keyFn, list, lastDrag.itemKey);\n    }\n  }, {\n    key: \"_getDragVisualIndex\",\n    value: function _getDragVisualIndex() {\n      var _this$props3 = this.props,\n          list = _this$props3.list,\n          padding = _this$props3.padding;\n      var _this$state3 = this.state,\n          dragging = _this$state3.dragging,\n          lastDrag = _this$state3.lastDrag;\n      if (!dragging || !lastDrag) throw new Error('Should not happen');\n\n      var dragListIndex = this._getDragListIndex();\n\n      var mouseY = lastDrag.mouseY,\n          startY = lastDrag.startY;\n      var movementFromNatural = mouseY - startY; // 1 down, -1 up, 0 neither\n\n      var direction = movementFromNatural > 0 ? 1 : movementFromNatural < 0 ? -1 : 0;\n      var newIndex = dragListIndex;\n\n      if (direction !== 0) {\n        var keyFn = this._getKeyFn();\n\n        var reach = Math.abs(movementFromNatural);\n\n        for (var i = dragListIndex + direction; i < list.length && i >= 0; i += direction) {\n          var iDragHeight = this._getItemHeight(keyFn(list[i])).drag;\n\n          if (reach < iDragHeight / 2 + padding) break;\n          reach -= iDragHeight + padding;\n          newIndex = i;\n        }\n      }\n\n      return newIndex;\n    }\n  }, {\n    key: \"_getVisualListDuringDrag\",\n    value: function _getVisualListDuringDrag() {\n      var list = this.props.list;\n      var _this$state4 = this.state,\n          dragging = _this$state4.dragging,\n          lastDrag = _this$state4.lastDrag;\n      if (!dragging || !lastDrag) throw new Error('Should not happen: _getVisualListDuringDrag called outside of drag');\n\n      var dragListIndex = this._getDragListIndex();\n\n      var dragVisualIndex = this._getDragVisualIndex();\n\n      return (0, _immutabilityHelper[\"default\"])(list, {\n        $splice: [[dragListIndex, 1], [dragVisualIndex, 0, list[dragListIndex]]]\n      });\n    }\n  }, {\n    key: \"_getItemHeight\",\n    value: function _getItemHeight(key) {\n      return this.state.heights != null && key in this.state.heights ? this.state.heights[key] : DEFAULT_HEIGHT;\n    } // Get the distance between the tops of two items in the list.\n    // Does not consider how the dragged item may be rendered in a different position\n    // unless you pass in the re-ordered list as a parameter.\n\n  }, {\n    key: \"_getDistance\",\n    value: function _getDistance(start, end, dragging) {\n      var list = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.props.list;\n\n      if (end < start) {\n        return -this._getDistance(end, start, dragging, list);\n      }\n\n      var padding = this.props.padding;\n\n      var keyFn = this._getKeyFn();\n\n      var distance = 0;\n\n      for (var i = start; i < end; i++) {\n        var height = this._getItemHeight(keyFn(list[i]));\n\n        distance += (dragging ? height.drag : height.natural) + padding;\n      }\n\n      return distance;\n    }\n  }, {\n    key: \"_getDistanceFromTopDuringDrag\",\n    value: function _getDistanceFromTopDuringDrag(lastDrag, itemKey, visualList) {\n      var keyFn = this._getKeyFn();\n\n      var index = DraggableList._getIndexOfItemWithKey(keyFn, visualList, itemKey);\n\n      var dragListIndex = this._getDragListIndex();\n\n      var dragVisualIndex = DraggableList._getIndexOfItemWithKey(keyFn, visualList, lastDrag.itemKey);\n\n      var offset = 0;\n\n      if (dragVisualIndex < dragListIndex) {\n        var dragItemHeight = this._getItemHeight(lastDrag.itemKey);\n\n        var newCenterHeight = this._getItemHeight(keyFn(visualList[dragListIndex]));\n\n        offset = dragItemHeight.drag - newCenterHeight.drag;\n      }\n\n      return lastDrag.startY + offset + this._getDistance(dragListIndex, index, true, visualList);\n    }\n  }, {\n    key: \"_getContainer\",\n    value: function _getContainer() {\n      var container = this.props.container;\n      return container ? container() : null;\n    }\n  }, {\n    key: \"_getKeyFn\",\n    value: function _getKeyFn() {\n      return DraggableList._getKeyFn(this.props.itemKey);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          list = _this$props4.list,\n          springConfig = _this$props4.springConfig,\n          container = _this$props4.container,\n          padding = _this$props4.padding,\n          template = _this$props4.template,\n          unsetZIndex = _this$props4.unsetZIndex,\n          commonProps = _this$props4.commonProps;\n      var _this$state5 = this.state,\n          dragging = _this$state5.dragging,\n          lastDrag = _this$state5.lastDrag,\n          useAbsolutePositioning = _this$state5.useAbsolutePositioning;\n\n      var keyFn = this._getKeyFn();\n\n      var anySelected = (0, _reactMotion.spring)(dragging ? 1 : 0, springConfig);\n      var visualList = dragging ? this._getVisualListDuringDrag() : list;\n      var children = list.map(function (item, i) {\n        var key = keyFn(item);\n        var selectedStyle = dragging && lastDrag && lastDrag.itemKey === key ? {\n          itemSelected: (0, _reactMotion.spring)(1, springConfig),\n          y: lastDrag.mouseY\n        } : {\n          itemSelected: (0, _reactMotion.spring)(0, springConfig),\n          y: (useAbsolutePositioning ? _reactMotion.spring : function (x, ignored) {\n            return x;\n          })(dragging && lastDrag ? _this3._getDistanceFromTopDuringDrag(lastDrag, key, visualList) : _this3._getDistance(0, i, false), springConfig)\n        };\n        var style = (0, _objectSpread2[\"default\"])({\n          anySelected: anySelected\n        }, selectedStyle);\n\n        var makeDragHandleProps = function makeDragHandleProps(getY) {\n          return {\n            onMouseDown: function onMouseDown(e) {\n              return _this3._handleMouseDown(key, getY(), e);\n            },\n            onTouchStart: function onTouchStart(e) {\n              return _this3._handleTouchStart(key, getY(), e);\n            }\n          };\n        };\n\n        var height = _this3._getItemHeight(key);\n\n        return React.createElement(_reactMotion.Motion, {\n          style: style,\n          key: key,\n          children: function children(_ref2) {\n            var itemSelected = _ref2.itemSelected,\n                anySelected = _ref2.anySelected,\n                y = _ref2.y;\n            return React.createElement(_MoveContainer[\"default\"], {\n              ref: _this3._itemRefs.ref(key),\n              y: useAbsolutePositioning ? y : null,\n              template: template,\n              padding: padding,\n              item: item,\n              itemSelected: itemSelected,\n              anySelected: anySelected,\n              height: height,\n              zIndex: unsetZIndex && !useAbsolutePositioning ? 'auto' : lastDrag && lastDrag.itemKey === key ? list.length : i,\n              makeDragHandleProps: makeDragHandleProps,\n              commonProps: commonProps\n            });\n          }\n        });\n      });\n      var adjustScroll = 0;\n\n      if (!dragging && lastDrag && useAbsolutePositioning) {\n        var dragListIndex = this._getDragListIndex();\n\n        adjustScroll = (0, _reactMotion.spring)(this._getDistance(0, dragListIndex, false) - lastDrag.mouseY, springConfig);\n      }\n\n      var heightReserverHeight = 0;\n      var heightReserverMarginBottom = 0;\n\n      if (list.length) {\n        heightReserverMarginBottom = padding;\n\n        if (useAbsolutePositioning) {\n          heightReserverHeight = this._getDistance(0, list.length, false) - padding;\n        }\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        ref: this._listRef\n      }, React.createElement(_reactMotion.Motion, {\n        style: {\n          adjustScroll: adjustScroll,\n          anySelected: anySelected\n        },\n        onRest: function onRest() {\n          if (!dragging) {\n            _this3.setState({\n              heights: null,\n              useAbsolutePositioning: false\n            });\n          }\n        },\n        children: function children(_ref3) {\n          var adjustScroll = _ref3.adjustScroll;\n          return React.createElement(\"div\", {\n            style: {\n              display: useAbsolutePositioning ? 'block' : 'none',\n              height: \"\".concat(heightReserverHeight, \"px\"),\n              marginBottom: \"\".concat(heightReserverMarginBottom, \"px\")\n            }\n          }, container && React.createElement(_OnUpdate[\"default\"], {\n            cb: function cb() {\n              if (!dragging && lastDrag && useAbsolutePositioning) {\n                _this3._adjustScrollAtEnd(adjustScroll);\n              }\n            }\n          }));\n        }\n      }), children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(newProps, state) {\n      var list = newProps.list;\n      var lastDrag = state.lastDrag;\n\n      if (lastDrag) {\n        var keyFn = DraggableList._getKeyFn(newProps.itemKey);\n\n        try {\n          DraggableList._getIndexOfItemWithKey(keyFn, list, lastDrag.itemKey);\n        } catch (err) {\n          // If the dragged item was removed from the list, this block will get hit.\n          // Cancel the drag.\n          return {\n            dragging: false,\n            lastDrag: null\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_getIndexOfItemWithKey\",\n    value: function _getIndexOfItemWithKey(keyFn, list, itemKey) {\n      for (var i = 0, len = list.length; i < len; i++) {\n        if (keyFn(list[i]) === itemKey) {\n          return i;\n        }\n      }\n\n      throw new Error('Failed to find drag index');\n    }\n  }, {\n    key: \"_getKeyFn\",\n    value: function _getKeyFn(itemKey) {\n      return typeof itemKey === 'function' ? itemKey : function (x) {\n        return x[itemKey];\n      };\n    }\n  }]);\n  return DraggableList;\n}(React.Component);\n\nexports[\"default\"] = DraggableList;\n(0, _defineProperty2[\"default\"])(DraggableList, \"propTypes\", {\n  itemKey: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].func]).isRequired,\n  template: _propTypes[\"default\"].func,\n  list: _propTypes[\"default\"].array.isRequired,\n  onMoveEnd: _propTypes[\"default\"].func,\n  container: _propTypes[\"default\"].func,\n  springConfig: _propTypes[\"default\"].object,\n  constrainDrag: _propTypes[\"default\"].bool,\n  padding: _propTypes[\"default\"].number,\n  unsetZIndex: _propTypes[\"default\"].bool,\n  autoScrollMaxSpeed: _propTypes[\"default\"].number.isRequired,\n  autoScrollRegionSize: _propTypes[\"default\"].number.isRequired,\n  commonProps: _propTypes[\"default\"].object\n});\n(0, _defineProperty2[\"default\"])(DraggableList, \"defaultProps\", {\n  springConfig: {\n    stiffness: 300,\n    damping: 50\n  },\n  padding: 10,\n  unsetZIndex: false,\n  constrainDrag: false,\n  autoScrollMaxSpeed: 15,\n  autoScrollRegionSize: 30\n});\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["../src/index.js"],"names":["DEFAULT_HEIGHT","natural","drag","Math","speed","DraggableList","React","Component","itemKey","PropTypes","template","list","onMoveEnd","container","springConfig","constrainDrag","padding","unsetZIndex","autoScrollMaxSpeed","autoScrollRegionSize","commonProps","object","stiffness","damping","MultiRef","useAbsolutePositioning","dragging","lastDrag","heights","key","ref","newProps","state","keyFn","pressY","event","pageY","document","window","listEl","newHeights","_newHeights","Object","containerRef","refEl","afterHeights","itemIndex","startY","containerEl","containerScroll","mouseY","mouseOffset","e","clientY","dragVisualIndex","clearInterval","scrollSpeed","containerRect","top","bottom","Infinity","distanceFromTop","getScrollSpeed","distanceFromBottom","setTimeout","visualList","dragIndex","newIndex","newList","delta","frameDelta","i","len","dragListIndex","movementFromNatural","direction","reach","iDragHeight","$splice","start","end","distance","height","index","offset","dragItemHeight","newCenterHeight","x","anySelected","children","selectedStyle","itemSelected","y","spring","style","makeDragHandleProps","onMouseDown","getY","onTouchStart","adjustScroll","heightReserverHeight","heightReserverMarginBottom","position","_listRef","display","marginBottom"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AARA;;;AAeA,IAAMA,cAA0B,GAAG;AAACC,EAAAA,OAAO,EAAR,GAAA;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAAnC;;AAEA,SAAA,cAAA,CAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAA+C;AAC7C;AACA;AACA;AACA,SAAOC,IAAI,CAAJA,KAAAA,CAAWC,KAAK,GAAIA,KAAK,GAAN,IAACA,GAA3B,QAAOD,CAAP;AACD;;IA0DoBE,a;;;AA+BnB,WAAA,aAAA,CAAA,KAAA,EAAiC;AAAA,QAAA,KAAA;;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,IAAA,EAAA,aAAA;AAC/B,IAAA,KAAA,GAAA,CAAA,GAAA,2BAAA,CAAA,SAAA,CAAA,EAAA,IAAA,EAAA,CAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,aAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;AAD+B,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,WAAA,EALqB,IAAImB,cAAAA,CAAJ,SAAIA,CAAJ,EAKrB;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,oBAAA,EAAA,KAAA,CAAA;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,UAAA,EAFtBlB,KAAK,CAALA,SAAAA,EAEsB;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,kBAAA,EA+HJ,UAAA,CAAA,EAAO;AAClC8C,MAAAA,CAAC,CAADA,cAAAA;;AACA,MAAA,KAAA,CAAA,gBAAA,CAAsBA,CAAC,CAADA,OAAAA,CAAtB,CAAsBA,CAAtB;AAjI+B,KAAA;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,kBAAA,EAoIJ,UAAA,IAAA,EAAsB;AAAA,UAApBhB,KAAoB,GAAA,IAAA,CAApBA,KAAoB;AAAA,UAAbiB,OAAa,GAAA,IAAA,CAAbA,OAAa;AAAA,UAAA,WAAA,GAK7C,KAAA,CAL6C,KAAA;AAAA,UAE/C1C,IAF+C,GAAA,WAAA,CAAA,IAAA;AAAA,UAG/CO,kBAH+C,GAAA,WAAA,CAAA,kBAAA;AAAA,UAI/CC,oBAJ+C,GAAA,WAAA,CAAA,oBAAA;AAAA,UAAA,WAAA,GAMpB,KAAA,CANoB,KAAA;AAAA,UAM1CO,QAN0C,GAAA,WAAA,CAAA,QAAA;AAAA,UAMhCC,QANgC,GAAA,WAAA,CAAA,QAAA;AAOjD,UAAI,CAAA,QAAA,IAAa,CAAjB,QAAA,EAA4B;;AAE5B,UAAMqB,WAAW,GAAG,KAAA,CAApB,aAAoB,EAApB;;AACA,UAAMM,eAAe,GAAG,KAAA,CAAxB,mBAAwB,EAAxB;;AACA,UAAMrB,KAAK,GAAG,KAAA,CAAd,SAAc,EAAd;;AAEAsB,MAAAA,aAAa,CAAC,KAAA,CAbmC,kBAapC,CAAbA,CAbiD,CAejD;AACA;;AACA,UAAID,eAAe,KAAfA,CAAAA,IAAyBA,eAAe,KAAK3C,IAAI,CAAJA,MAAAA,GAAjD,CAAA,EAAgE;AAC9D,YAAI6C,WAAW,GAAf,CAAA;AAEA,YAAMC,aAAa,GAAGT,WAAW,IAAIA,WAAW,KAAKX,QAAQ,CAAvCW,IAAAA,IACpBA,WAAW,CADSA,qBAAAA,GAEpBA,WAAW,CAFSA,qBAEpBA,EAFoBA,GAGpB;AAACU,UAAAA,GAAG,EAAJ,CAAA;AAASC,UAAAA,MAAM,EAAEC;AAAjB,SAHF,CAH8D,CAQ9D;;AACA,YAAMF,GAAG,GAAGvD,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYsD,aAAa,CAArC,GAAYtD,CAAZ;AAEA,YAAM0D,eAAe,GAAGR,OAAO,GAA/B,GAAA;;AACA,YAAIQ,eAAe,GAAfA,CAAAA,IAAuBA,eAAe,GAA1C,oBAAA,EAAmE;AACjEL,UAAAA,WAAW,GAAG,CAAA,CAAA,GAAKM,cAAc,CAAA,eAAA,EAAA,kBAAA,EAAjCN,oBAAiC,CAAjCA;AADF,SAAA,MAEO;AACL;AACA,cAAMG,MAAM,GAAGxD,IAAI,CAAJA,GAAAA,CAASmC,MAAM,CAAfnC,WAAAA,EAA6BsD,aAAa,CAAzD,MAAetD,CAAf;AACA,cAAM4D,kBAAkB,GAAGJ,MAAM,GAAjC,OAAA;;AACA,cAAII,kBAAkB,GAAlBA,CAAAA,IAA0BA,kBAAkB,GAAhD,oBAAA,EAAyE;AACvEP,YAAAA,WAAW,GAAGM,cAAc,CAAA,kBAAA,EAAA,kBAAA,EAA5BN,oBAA4B,CAA5BA;AACD;AACF;;AAED,YAAIA,WAAW,KAAf,CAAA,EAAuB;AACrB,UAAA,KAAA,CAAA,gBAAA,CAAA,WAAA;;AACA,UAAA,KAAA,CAAA,kBAAA,GAA0BQ,UAAU,CAAC,YAAM;AACzC,YAAA,KAAA,CAAA,gBAAA,CAAsB;AACpB5B,cAAAA,KAAK,EAAEA,KAAK,IAAIY,WAAW,KAAGX,QAAQ,CAAtBW,IAAAA,GAAAA,WAAAA,GADI,CACR,CADQ;AAEpBK,cAAAA,OAAO,EAAPA;AAFoB,aAAtB;AADkC,WAAA,EAApC,EAAoC,CAApC;AAMD;AACF;;AAED,UAAMJ,eAAe,GAAG,CAAA,WAAA,IAAgBD,WAAW,KAAKX,QAAQ,CAAxC,IAAA,GAAA,CAAA,GAClBW,WAAW,CADjB,SAAA;AAEA,UAAIE,MAAM,GAAGd,KAAK,GAAGT,QAAQ,CAAhBS,WAAAA,GAAb,eAAA;;AACA,UAAI,KAAA,CAAA,KAAA,CAAJ,aAAA,EAA8B;AAC5B,YAAM6B,UAAU,GAAG,KAAA,CAAnB,wBAAmB,EAAnB;;AAEAf,QAAAA,MAAM,GAAG/C,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,EAAiB,KAAA,CAAA,6BAAA,CAAA,QAAA,EAA6C8B,KAAK,CAACgC,UAAU,CAA7D,CAA6D,CAAX,CAAlD,EAA1Bf,UAA0B,CAAjB/C,CAAT+C;AACAA,QAAAA,MAAM,GAAG/C,IAAI,CAAJA,GAAAA,CAAAA,MAAAA,EAAiB,KAAA,CAAA,6BAAA,CAAA,QAAA,EAA6C8B,KAAK,CAACgC,UAAU,CAACA,UAAU,CAAVA,MAAAA,GAA9D,CAA6D,CAAX,CAAlD,EAA1Bf,UAA0B,CAAjB/C,CAAT+C;AACD;;AAED,MAAA,KAAA,CAAA,QAAA,CAAc;AAACvB,QAAAA,QAAQ,EAAA,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,QAAA,EAAA;AAAgBuB,UAAAA,MAAM,EAANA;AAAhB,SAAA;AAAT,OAAd;AAjM+B,KAAA;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,gBAAA,EAoMN,YAAM;AAC/BK,MAAAA,aAAa,CAAC,KAAA,CAAdA,kBAAa,CAAbA;AACAjB,MAAAA,MAAM,CAANA,mBAAAA,CAAAA,SAAAA,EAAsC,KAAA,CAAtCA,cAAAA;AACAA,MAAAA,MAAM,CAANA,mBAAAA,CAAAA,UAAAA,EAAuC,KAAA,CAAvCA,cAAAA;AACAA,MAAAA,MAAM,CAANA,mBAAAA,CAAAA,WAAAA,EAAwC,KAAA,CAAxCA,gBAAAA;AACAA,MAAAA,MAAM,CAANA,mBAAAA,CAAAA,WAAAA,EAAwC,KAAA,CAAxCA,gBAAAA;AAEA,UAAID,QAAQ,CAAZ,eAAA,EAA8BA,QAAQ,CAARA,eAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAAAA,EAAAA;AAC9B,MAAA,KAAA,CAAA,gBAAA,GAAA,CAAA;AAR+B,UAAA,YAAA,GAUL,KAAA,CAVK,KAAA;AAAA,UAUxB1B,IAVwB,GAAA,YAAA,CAAA,IAAA;AAAA,UAUlBC,SAVkB,GAAA,YAAA,CAAA,SAAA;AAAA,UAAA,YAAA,GAWF,KAAA,CAXE,KAAA;AAAA,UAWxBc,QAXwB,GAAA,YAAA,CAAA,QAAA;AAAA,UAWdC,QAXc,GAAA,YAAA,CAAA,QAAA;;AAa/B,UAAID,QAAQ,IAARA,QAAAA,IAAJ,SAAA,EAAuC;AACrC,YAAMwC,SAAS,GAAG,KAAA,CAAlB,iBAAkB,EAAlB;;AACA,YAAMC,SAAQ,GAAG,KAAA,CAAjB,mBAAiB,EAAjB;;AAEA,YAAID,SAAS,KAAb,SAAA,EAA4B;AAC1B,cAAME,QAAO,GAAG,KAAA,CAAhB,wBAAgB,EAAhB;;AAEAxD,UAAAA,SAAS,CAAA,QAAA,EAAUD,IAAI,CAAd,SAAc,CAAd,EAAA,SAAA,EAATC,SAAS,CAATA;AACD;;AACD,QAAA,KAAA,CAAA,QAAA,CAAc;AAACc,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD;AA3N8B,KAAA;AAAA,KAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,SAAA,CAAA,EAAA,KAAA,CAAA,EAAA,kBAAA,EAAA,CAAA;AAE/B,IAAA,KAAA,CAAA,KAAA,GAAa;AACXD,MAAAA,sBAAsB,EADX,KAAA;AAEXC,MAAAA,QAAQ,EAFG,KAAA;AAGXC,MAAAA,QAAQ,EAHG,IAAA;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAF+B,WAAA,KAAA;AAQhC;;;;oCAEeC,G,EAAgB;AAC9B,UAAMC,GAAG,GAAG,KAAA,SAAA,CAAA,GAAA,CAAA,GAAA,CAAZ,GAAY,CAAZ;;AACA,UAAI,CAAJ,GAAA,EAAU,MAAM,IAAA,KAAA,CAAN,eAAM,CAAN;AACV,aAAOA,GAAG,CAAV,WAAOA,EAAP;AACD;;;2CAqBsB;AACrB,WAAA,cAAA;AACD;;;sCAEiBtB,O,EAAiB0B,M,EAAiBC,K,EAAe;AACjEA,MAAAA,KAAK,CAALA,eAAAA;;AACA,WAAA,gBAAA,CAAA,OAAA,EAAA,MAAA,EAAuCA,KAAK,CAALA,OAAAA,CAAAA,CAAAA,EAAvC,KAAA;AACD;;;qCAEgB3B,O,EAAiB0B,M,EAAiBC,K,EAAe;AAChEA,MAAAA,KAAK,CAALA,cAAAA;;AACA,WAAA,gBAAA,CAAA,OAAA,EAAA,MAAA,EAAuCA,KAAK,CAA5C,KAAA;AACD;;;qCAEgB3B,O,EAAiB0B,M,EAAiBE,K,EAAe;AAAA,UAAA,MAAA,GAAA,IAAA;;AAChE,UAAIC,QAAQ,CAAZ,eAAA,EAA8BA,QAAQ,CAARA,eAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAAAA,MAAAA;AAC9BC,MAAAA,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAmC,KAAnCA,cAAAA;AACAA,MAAAA,MAAM,CAANA,gBAAAA,CAAAA,UAAAA,EAAoC,KAApCA,cAAAA;AACAA,MAAAA,MAAM,CAANA,gBAAAA,CAAAA,WAAAA,EAAqC,KAArCA,gBAAAA;AACAA,MAAAA,MAAM,CAANA,gBAAAA,CAAAA,WAAAA,EAAqC,KAL2B,gBAKhEA,EALgE,CAOhE;AACA;AACA;;AACA;AACE,YAAMC,MAAM,GAAG,KAAA,QAAA,CAAf,OAAA;AACA,YAAI,CAAJ,MAAA,EAAa,MAAM,IAAA,KAAA,CAAN,mBAAM,CAAN;;AACb,YACEA,MAAM,CAANA,QAAAA,IAAmBF,QAAQ,CAA3BE,aAAAA,IACAA,MAAM,CAANA,QAAAA,CAAgBF,QAAQ,CAF1B,aAEEE,CAFF,EAGE;AACAF,UAAAA,QAAQ,CAARA,aAAAA,CAAAA,IAAAA;AACD;AACF;;AAED,UAAMJ,KAAK,GAAG,KAAd,SAAc,EAAd;;AAEA,UAAIO,UAAU,GAAd,IAAA;;AACA,UAAI,KAAA,KAAA,CAAA,OAAA,IAAJ,IAAA,EAAgC;AAC9B,YAAMC,WAAwC,GAAIC,MAAM,CAANA,MAAAA,CAAlD,IAAkDA,CAAlD;;AAEA,aAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAwB,UAAA,IAAA,EAAQ;AAC9B,cAAMb,GAAG,GAAGI,KAAK,CAAjB,IAAiB,CAAjB;;AACA,cAAMU,YAAY,GAAG,MAAI,CAAJ,SAAA,CAAA,GAAA,CAAA,GAAA,CAArB,GAAqB,CAArB;;AACA,cAAMC,KAAK,GAAGD,YAAY,GAAGA,YAAY,CAAZA,UAAAA,GAAH,iBAAA,GAA1B,IAAA;AACA,cAAMb,GAAG,GAAGa,YAAY,GAAGA,YAAY,CAAf,WAAGA,EAAH,GAAxB,IAAA;AACA,cAAM1C,OAAO,GAAI2C,KAAK,YAAN,WAACA,GACfA,KAAK,CADS,YAACA,GACM5C,cAAc,CADrC,OAAA;AAEA,cAAME,IAAI,GAAG4B,GAAG,IAAK,OAAQA,GAAD,CAAP,aAAA,KAARA,UAAAA,IAA4DA,GAAD,CAA3DA,aAA4DA,EAA5DA,IAAb,OAAA;AAEAW,UAAAA,WAAW,CAAXA,GAAW,CAAXA,GAAmB;AAACxC,YAAAA,OAAO,EAAR,OAAA;AAAUC,YAAAA,IAAI,EAAJA;AAAV,WAAnBuC;AATF,SAAA;AAYAD,QAAAA,UAAU,GAAVA,WAAAA;AAvC8D,OAAA,CA0ChE;AACA;;;AAEA,UAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,YAAMC,SAAS,GAAG,MAAI,CAAJ,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,OAAA,CADO,OACP,CAAlB,CADyB,CAGzB;AACA;AACA;AACA;;;AACA,YAAMC,MAAM,GAAGb,MAAM,IAANA,IAAAA,GACb,MAAI,CAAJ,YAAA,CAAA,CAAA,EAAA,SAAA,EADaA,KACb,CADaA,GAAf,MAAA;;AAGA,YAAMc,WAAW,GAAG,MAAI,CAAxB,aAAoB,EAApB;;AACA,YAAMC,eAAe,GAAG,CAAA,WAAA,IAAgBD,WAAW,KAAKX,QAAQ,CAAxC,IAAA,GAAA,CAAA,GAClBW,WAAW,CADjB,SAAA;;AAGA,QAAA,MAAI,CAAJ,QAAA,CAAc;AACZvB,UAAAA,sBAAsB,EADV,IAAA;AAEZC,UAAAA,QAAQ,EAFI,IAAA;AAGZC,UAAAA,QAAQ,EAAE;AACRnB,YAAAA,OAAO,EADC,OAAA;AAERuC,YAAAA,MAAM,EAFE,MAAA;AAGRG,YAAAA,MAAM,EAHE,MAAA;AAIRC,YAAAA,WAAW,EAAEf,KAAK,GAALA,MAAAA,GAAiBa;AAJtB;AAHE,SAAd;AAdF,OAAA;;AA0BA,UAAA,UAAA,EAAgB;AACd,aAAA,QAAA,CAAc;AAACrB,UAAAA,OAAO,EAAEY;AAAV,SAAd,EAAA,YAAA;AADF,OAAA,MAEO;AACLK,QAAAA,YAAY;AACb;AACF;;;qCAiGgBwB,K,EAAe;AAC9B,UAAMrB,WAAW,GAAG,KAApB,aAAoB,EAApB;;AACA,UAAI,CAAJ,WAAA,EAAkB;;AAClB,UAAIV,MAAM,CAANA,QAAAA,IAAmBU,WAAW,KAAKX,QAAQ,CAA/C,IAAA,EAAsD;AACpDC,QAAAA,MAAM,CAANA,QAAAA,CAAAA,CAAAA,EAAAA,KAAAA;AADF,OAAA,MAEO;AACLU,QAAAA,WAAW,CAAXA,SAAAA,IAAAA,KAAAA;AACD;AACF;;;uCAGkBqB,K,EAAe;AAChC,UAAMC,UAAU,GAAGnE,IAAI,CAAJA,KAAAA,CAAWkE,KAAK,GAAG,KAAtC,gBAAmBlE,CAAnB;;AACA,WAAA,gBAAA,CAAA,UAAA;;AACA,WAAA,gBAAA,IAAA,UAAA;AACD;;;wCAW2B;AAAA,UACnBQ,IADmB,GACX,KADW,KACX,CADW,IAAA;AAAA,UAEnBgB,QAFmB,GAEP,KAFO,KAEP,CAFO,QAAA;;AAG1B,UAAI,CAAJ,QAAA,EAAe;AACb,cAAM,IAAA,KAAA,CAAN,kBAAM,CAAN;AACD;;AACD,UAAMM,KAAK,GAAG,KAAd,SAAc,EAAd;;AACA,aAAO5B,aAAa,CAAbA,sBAAAA,CAAAA,KAAAA,EAAAA,IAAAA,EAAkDsB,QAAQ,CAAjE,OAAOtB,CAAP;AACD;;;0CAE6B;AAAA,UAAA,YAAA,GACJ,KADI,KAAA;AAAA,UACrBM,IADqB,GAAA,YAAA,CAAA,IAAA;AAAA,UACfK,OADe,GAAA,YAAA,CAAA,OAAA;AAAA,UAAA,YAAA,GAEC,KAFD,KAAA;AAAA,UAErBU,QAFqB,GAAA,YAAA,CAAA,QAAA;AAAA,UAEXC,QAFW,GAAA,YAAA,CAAA,QAAA;AAG5B,UAAI,CAAA,QAAA,IAAa,CAAjB,QAAA,EAA4B,MAAM,IAAA,KAAA,CAAN,mBAAM,CAAN;;AAE5B,UAAM8C,aAAa,GAAG,KAAtB,iBAAsB,EAAtB;;AAL4B,UAOrBvB,MAPqB,GAOHvB,QAPG,CAAA,MAAA;AAAA,UAOboB,MAPa,GAOHpB,QAPG,CAAA,MAAA;AAS5B,UAAM+C,mBAAmB,GAAGxB,MAAM,GATN,MAS5B,CAT4B,CAU5B;;AACA,UAAMyB,SAAS,GAAGD,mBAAmB,GAAnBA,CAAAA,GAAAA,CAAAA,GAChBA,mBAAmB,GAAnBA,CAAAA,GAA0B,CAA1BA,CAAAA,GADF,CAAA;AAEA,UAAIP,QAAQ,GAAZ,aAAA;;AACA,UAAIQ,SAAS,KAAb,CAAA,EAAqB;AACnB,YAAM1C,KAAK,GAAG,KAAd,SAAc,EAAd;;AACA,YAAI2C,KAAK,GAAGzE,IAAI,CAAJA,GAAAA,CAAZ,mBAAYA,CAAZ;;AACA,aAAK,IAAIoE,CAAC,GAACE,aAAa,GAAxB,SAAA,EAAoCF,CAAC,GAAG5D,IAAI,CAAR4D,MAAAA,IAAmBA,CAAC,IAAxD,CAAA,EAA+DA,CAAC,IAAhE,SAAA,EAA+E;AAC7E,cAAMM,WAAW,GAAG,KAAA,cAAA,CAAoB5C,KAAK,CAACtB,IAAI,CAA9B,CAA8B,CAAL,CAAzB,EAApB,IAAA;;AACA,cAAIiE,KAAK,GAAGC,WAAW,GAAXA,CAAAA,GAAZ,OAAA,EAAqC;AACrCD,UAAAA,KAAK,IAAIC,WAAW,GAApBD,OAAAA;AACAT,UAAAA,QAAQ,GAARA,CAAAA;AACD;AACF;;AAED,aAAA,QAAA;AACD;;;+CAE6C;AAAA,UACrCxD,IADqC,GAC7B,KAD6B,KAC7B,CAD6B,IAAA;AAAA,UAAA,YAAA,GAEf,KAFe,KAAA;AAAA,UAErCe,QAFqC,GAAA,YAAA,CAAA,QAAA;AAAA,UAE3BC,QAF2B,GAAA,YAAA,CAAA,QAAA;AAG5C,UAAI,CAAA,QAAA,IAAa,CAAjB,QAAA,EAA4B,MAAM,IAAA,KAAA,CAAN,oEAAM,CAAN;;AAE5B,UAAM8C,aAAa,GAAG,KAAtB,iBAAsB,EAAtB;;AACA,UAAMnB,eAAe,GAAG,KAAxB,mBAAwB,EAAxB;;AAEA,aAAO,CAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,EAAA,IAAA,EAAa;AAClBwB,QAAAA,OAAO,EAAE,CAAC,CAAA,aAAA,EAAD,CAAC,CAAD,EAAqB,CAAA,eAAA,EAAA,CAAA,EAAqBnE,IAAI,CAA9C,aAA8C,CAAzB,CAArB;AADS,OAAb,CAAP;AAGD;;;mCAEckB,G,EAAyB;AACtC,aAAO,KAAA,KAAA,CAAA,OAAA,IAAA,IAAA,IAA8BA,GAAG,IAAI,KAAA,KAAA,CAArC,OAAA,GACL,KAAA,KAAA,CAAA,OAAA,CADK,GACL,CADK,GAAP,cAAA;MAIF;AACA;AACA;;;;iCACakD,K,EAAeC,G,EAAatD,Q,EAAsE;AAAA,UAAnDf,IAAmD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAzB,KAAA,KAAA,CAAWA,IAAc;;AAC7G,UAAIqE,GAAG,GAAP,KAAA,EAAiB;AACf,eAAO,CAAC,KAAA,YAAA,CAAA,GAAA,EAAA,KAAA,EAAA,QAAA,EAAR,IAAQ,CAAR;AACD;;AAH4G,UAKtGhE,OALsG,GAK3F,KAL2F,KAK3F,CAL2F,OAAA;;AAM7G,UAAMiB,KAAK,GAAG,KAAd,SAAc,EAAd;;AACA,UAAIgD,QAAQ,GAAZ,CAAA;;AACA,WAAK,IAAIV,CAAC,GAAV,KAAA,EAAkBA,CAAC,GAAnB,GAAA,EAA2BA,CAA3B,EAAA,EAAgC;AAC9B,YAAMW,MAAM,GAAG,KAAA,cAAA,CAAoBjD,KAAK,CAACtB,IAAI,CAA7C,CAA6C,CAAL,CAAzB,CAAf;;AACAsE,QAAAA,QAAQ,IAAI,CAACvD,QAAQ,GAAGwD,MAAM,CAAT,IAAA,GAAiBA,MAAM,CAAhC,OAAA,IAAZD,OAAAA;AACD;;AACD,aAAA,QAAA;AACD;;;kDAE6BtD,Q,EAAgBnB,O,EAAiByD,U,EAAuC;AACpG,UAAMhC,KAAK,GAAG,KAAd,SAAc,EAAd;;AACA,UAAMkD,KAAK,GAAG9E,aAAa,CAAbA,sBAAAA,CAAAA,KAAAA,EAAAA,UAAAA,EAAd,OAAcA,CAAd;;AACA,UAAMoE,aAAa,GAAG,KAAtB,iBAAsB,EAAtB;;AACA,UAAMnB,eAAe,GAAGjD,aAAa,CAAbA,sBAAAA,CAAAA,KAAAA,EAAAA,UAAAA,EAAwDsB,QAAQ,CAAxF,OAAwBtB,CAAxB;;AAEA,UAAI+E,MAAM,GAAV,CAAA;;AACA,UAAI9B,eAAe,GAAnB,aAAA,EAAqC;AACnC,YAAM+B,cAAc,GAAG,KAAA,cAAA,CAAoB1D,QAAQ,CAAnD,OAAuB,CAAvB;;AACA,YAAM2D,eAAe,GACnB,KAAA,cAAA,CAAoBrD,KAAK,CAACgC,UAAU,CADtC,aACsC,CAAX,CAAzB,CADF;;AAEAmB,QAAAA,MAAM,GAAGC,cAAc,CAAdA,IAAAA,GAAsBC,eAAe,CAA9CF,IAAAA;AACD;;AAED,aAAOzD,QAAQ,CAARA,MAAAA,GAAAA,MAAAA,GACL,KAAA,YAAA,CAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EADF,UACE,CADF;AAED;;;oCAE6B;AAAA,UACrBd,SADqB,GACR,KADQ,KACR,CADQ,SAAA;AAE5B,aAAOA,SAAS,GAAGA,SAAH,EAAA,GAAhB,IAAA;AACD;;;gCAMgC;AAC/B,aAAOR,aAAa,CAAbA,SAAAA,CAA2B,KAAA,KAAA,CAAlC,OAAOA,CAAP;AACD;;;6BAEQ;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,YAAA,GAC8E,KAD9E,KAAA;AAAA,UACAM,IADA,GAAA,YAAA,CAAA,IAAA;AAAA,UACMG,YADN,GAAA,YAAA,CAAA,YAAA;AAAA,UACoBD,SADpB,GAAA,YAAA,CAAA,SAAA;AAAA,UAC+BG,OAD/B,GAAA,YAAA,CAAA,OAAA;AAAA,UACwCN,QADxC,GAAA,YAAA,CAAA,QAAA;AAAA,UACkDO,WADlD,GAAA,YAAA,CAAA,WAAA;AAAA,UAC+DG,WAD/D,GAAA,YAAA,CAAA,WAAA;AAAA,UAAA,YAAA,GAE8C,KAF9C,KAAA;AAAA,UAEAM,QAFA,GAAA,YAAA,CAAA,QAAA;AAAA,UAEUC,QAFV,GAAA,YAAA,CAAA,QAAA;AAAA,UAEoBF,sBAFpB,GAAA,YAAA,CAAA,sBAAA;;AAIP,UAAMQ,KAAK,GAAG,KAAd,SAAc,EAAd;;AACA,UAAMuD,WAAW,GAAG,CAAA,GAAA,YAAA,CAAA,MAAA,EAAO9D,QAAQ,GAAA,CAAA,GAAf,CAAA,EAApB,YAAoB,CAApB;AAEA,UAAMuC,UAAU,GAAGvC,QAAQ,GAAG,KAAH,wBAAG,EAAH,GAA3B,IAAA;AAEA,UAAM+D,QAAQ,GAAG,IAAI,CAAJ,GAAA,CAAS,UAAA,IAAA,EAAA,CAAA,EAAa;AACrC,YAAM5D,GAAG,GAAGI,KAAK,CAAjB,IAAiB,CAAjB;AACA,YAAMyD,aAAa,GAAG,QAAQ,IAAR,QAAA,IAAwB/D,QAAQ,CAARA,OAAAA,KAAxB,GAAA,GAClB;AACAgE,UAAAA,YAAY,EAAE,CAAA,GAAA,YAAA,CAAA,MAAA,EAAA,CAAA,EADd,YACc,CADd;AAEAC,UAAAA,CAAC,EAAEjE,QAAQ,CAACuB;AAFZ,SADkB,GAKlB;AACAyC,UAAAA,YAAY,EAAE,CAAA,GAAA,YAAA,CAAA,MAAA,EAAA,CAAA,EADd,YACc,CADd;AAEAC,UAAAA,CAAC,EAAE,CAACnE,sBAAsB,GAAGoE,YAAAA,CAAH,MAAA,GAAY,UAAA,CAAA,EAAA,OAAA,EAAA;AAAA,mBAAA,CAAA;AAAnC,WAAA,EAAmDnE,QAAQ,IAARA,QAAAA,GACpD,MAAI,CAAJ,6BAAA,CAAA,QAAA,EAAA,GAAA,EADoDA,UACpD,CADoDA,GAElD,MAAI,CAAJ,YAAA,CAAA,CAAA,EAAA,CAAA,EAFD,KAEC,CAFD,EAAA,YAAA;AAFH,SALJ;AAWA,YAAMoE,KAAK,GAAA,CAAA,GAAA,cAAA,CAAA,SAAA,CAAA,EAAA;AACTN,UAAAA,WAAW,EAAXA;AADS,SAAA,EAAX,aAAW,CAAX;;AAIA,YAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,IAAA,EAAA;AAAA,iBAAgC;AAC1DC,YAAAA,WAAW,EAAE,SAAA,WAAA,CAAA,CAAA,EAAC;AAAA,qBAAI,MAAI,CAAJ,gBAAA,CAAA,GAAA,EAA2BC,IAA3B,EAAA,EAAJ,CAAI,CAAJ;AAD4C,aAAA;AAE1DC,YAAAA,YAAY,EAAE,SAAA,YAAA,CAAA,CAAA,EAAC;AAAA,qBAAI,MAAI,CAAJ,iBAAA,CAAA,GAAA,EAA4BD,IAA5B,EAAA,EAAJ,CAAI,CAAJ;AAAA;AAF2C,WAAhC;AAA5B,SAAA;;AAIA,YAAMf,MAAM,GAAG,MAAI,CAAJ,cAAA,CAAf,GAAe,CAAf;;AACA,eACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,MAAA,EAAA;AACE,UAAA,KAAK,EADP,KAAA;AACgB,UAAA,GAAG,EADnB,GAAA;AAEE,UAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAA;AAAA,gBAAES,YAAF,GAAA,KAAA,CAAA,YAAA;AAAA,gBAAgBH,WAAhB,GAAA,KAAA,CAAA,WAAA;AAAA,gBAA6BI,CAA7B,GAAA,KAAA,CAAA,CAAA;AAAA,mBACR,KAAA,CAAA,aAAA,CAAC,cAAA,CAAD,SAAC,CAAD,EAAA;AACE,cAAA,GAAG,EAAE,MAAI,CAAJ,SAAA,CAAA,GAAA,CADP,GACO,CADP;AAEE,cAAA,CAAC,EAAEnE,sBAAsB,GAAA,CAAA,GAF3B,IAAA;AAGE,cAAA,QAAQ,EAHV,QAAA;AAIE,cAAA,OAAO,EAJT,OAAA;AAKE,cAAA,IAAI,EALN,IAAA;AAME,cAAA,YAAY,EANd,YAAA;AAOE,cAAA,WAAW,EAPb,WAAA;AAQE,cAAA,MAAM,EARR,MAAA;AASE,cAAA,MAAM,EAAER,WAAW,IAAI,CAAfA,sBAAAA,GAAAA,MAAAA,GACLU,QAAQ,IAAIA,QAAQ,CAARA,OAAAA,KAAZA,GAAAA,GAAuChB,IAAI,CAA3CgB,MAAAA,GAVL,CAAA;AAYE,cAAA,mBAAmB,EAZrB,mBAAA;AAaE,cAAA,WAAW,EAAEP;AAbf,aAAA,CADQ;AAAA;AAFZ,SAAA,CADF;AAtBF,OAAiB,CAAjB;AA8CA,UAAI+E,YAAY,GAAhB,CAAA;;AACA,UAAI,CAAA,QAAA,IAAA,QAAA,IAAJ,sBAAA,EAAqD;AACnD,YAAM1B,aAAa,GAAG,KAAtB,iBAAsB,EAAtB;;AACA0B,QAAAA,YAAY,GAAG,CAAA,GAAA,YAAA,CAAA,MAAA,EACb,KAAA,YAAA,CAAA,CAAA,EAAA,aAAA,EAAA,KAAA,IACExE,QAAQ,CAFG,MAAA,EAAfwE,YAAe,CAAfA;AAKD;;AAED,UAAIC,oBAAoB,GAAxB,CAAA;AACA,UAAIC,0BAA0B,GAA9B,CAAA;;AACA,UAAI1F,IAAI,CAAR,MAAA,EAAiB;AACf0F,QAAAA,0BAA0B,GAA1BA,OAAAA;;AACA,YAAA,sBAAA,EAA4B;AAC1BD,UAAAA,oBAAoB,GAAG,KAAA,YAAA,CAAA,CAAA,EAAqBzF,IAAI,CAAzB,MAAA,EAAA,KAAA,IAAvByF,OAAAA;AACD;AACF;;AACD,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SADT;AAEE,QAAA,GAAG,EAAE,KAAKC;AAFZ,OAAA,EAIE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,MAAA,EAAA;AACE,QAAA,KAAK,EAAE;AAACJ,UAAAA,YAAY,EAAb,YAAA;AAAeX,UAAAA,WAAW,EAAXA;AAAf,SADT;AAEE,QAAA,MAAM,EAAE,SAAA,MAAA,GAAM;AACZ,cAAI,CAAJ,QAAA,EAAe;AACb,YAAA,MAAI,CAAJ,QAAA,CAAc;AACZ5D,cAAAA,OAAO,EADK,IAAA;AAEZH,cAAAA,sBAAsB,EAAE;AAFZ,aAAd;AAID;AARL,SAAA;AAUE,QAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAA;AAAA,cAAE0E,YAAF,GAAA,KAAA,CAAA,YAAA;AAAA,iBACR,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,YAAA,KAAK,EAAE;AACLK,cAAAA,OAAO,EAAE/E,sBAAsB,GAAA,OAAA,GAD1B,MAAA;AAELyD,cAAAA,MAAM,EAAA,GAAA,MAAA,CAAA,oBAAA,EAFD,IAEC,CAFD;AAGLuB,cAAAA,YAAY,EAAA,GAAA,MAAA,CAAA,0BAAA,EAAA,IAAA;AAHP;AADT,WAAA,EAOG5F,SAAS,IAAI,KAAA,CAAA,aAAA,CAAC,SAAA,CAAD,SAAC,CAAD,EAAA;AAAU,YAAA,EAAE,EAAE,SAAA,EAAA,GAAM;AAChC,kBAAI,CAAA,QAAA,IAAA,QAAA,IAAJ,sBAAA,EAAqD;AACnD,gBAAA,MAAI,CAAJ,kBAAA,CAAA,YAAA;AACD;AACF;AAJa,WAAA,CAPhB,CADQ;AAAA;AAVZ,OAAA,CAJF,EADF,QACE,CADF;AAkCD;;;6CA5bsCkB,Q,EAAwBC,K,EAAkC;AAAA,UACxFrB,IADwF,GAChFoB,QADgF,CAAA,IAAA;AAAA,UAExFJ,QAFwF,GAE5EK,KAF4E,CAAA,QAAA;;AAI/F,UAAA,QAAA,EAAc;AACZ,YAAMC,KAAK,GAAG5B,aAAa,CAAbA,SAAAA,CAA2B0B,QAAQ,CAAjD,OAAc1B,CAAd;;AAEA,YAAI;AACFA,UAAAA,aAAa,CAAbA,sBAAAA,CAAAA,KAAAA,EAAAA,IAAAA,EAAqDsB,QAAQ,CAA7DtB,OAAAA;AADF,SAAA,CAEE,OAAA,GAAA,EAAY;AACZ;AACA;AACA,iBAAO;AAACqB,YAAAA,QAAQ,EAAT,KAAA;AAAkBC,YAAAA,QAAQ,EAAE;AAA5B,WAAP;AACD;AACF;;AAED,aAAA,IAAA;AACD;;;2CA8MgCM,K,EAA4BtB,I,EAAyBH,O,EAAyB;AAC7G,WAAK,IAAI+D,CAAC,GAAL,CAAA,EAASC,GAAG,GAAC7D,IAAI,CAAtB,MAAA,EAA+B4D,CAAC,GAAhC,GAAA,EAAwCA,CAAxC,EAAA,EAA6C;AAC3C,YAAItC,KAAK,CAACtB,IAAI,CAAVsB,CAAU,CAAL,CAALA,KAAJ,OAAA,EAAgC;AAC9B,iBAAA,CAAA;AACD;AACF;;AACD,YAAM,IAAA,KAAA,CAAN,2BAAM,CAAN;AACD;;;8BAmGmBzB,O,EAAwD;AAC1E,aAAO,OAAA,OAAA,KAAA,UAAA,GAAA,OAAA,GAA0C,UAAA,CAAA,EAAC;AAAA,eAAK+E,CAAD,CAAJ,OAAI,CAAJ;AAAlD,OAAA;AACD;;;EA1XiGjF,KAAK,CAACC,S;;;iCAArFF,a,eACA;AACjBG,EAAAA,OAAO,EAAEC,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CAAoB,CAC3BA,UAAAA,CAAAA,SAAAA,CAAAA,CAD2B,MAAA,EAE3BA,UAAAA,CAAAA,SAAAA,CAAAA,CAFOA,IAAoB,CAApBA,EADQ,UAAA;AAKjBC,EAAAA,QAAQ,EAAED,UAAAA,CAAAA,SAAAA,CAAAA,CALO,IAAA;AAMjBE,EAAAA,IAAI,EAAEF,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,KAAAA,CANW,UAAA;AAOjBG,EAAAA,SAAS,EAAEH,UAAAA,CAAAA,SAAAA,CAAAA,CAPM,IAAA;AAQjBI,EAAAA,SAAS,EAAEJ,UAAAA,CAAAA,SAAAA,CAAAA,CARM,IAAA;AASjBK,EAAAA,YAAY,EAAEL,UAAAA,CAAAA,SAAAA,CAAAA,CATG,MAAA;AAUjBM,EAAAA,aAAa,EAAEN,UAAAA,CAAAA,SAAAA,CAAAA,CAVE,IAAA;AAWjBO,EAAAA,OAAO,EAAEP,UAAAA,CAAAA,SAAAA,CAAAA,CAXQ,MAAA;AAYjBQ,EAAAA,WAAW,EAAER,UAAAA,CAAAA,SAAAA,CAAAA,CAZI,IAAA;AAajBS,EAAAA,kBAAkB,EAAET,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,MAAAA,CAbH,UAAA;AAcjBU,EAAAA,oBAAoB,EAAEV,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,MAAAA,CAdL,UAAA;AAejBW,EAAAA,WAAW,EAAEX,UAAAA,CAAAA,SAAAA,CAAAA,CAAUY;AAfN,C;iCADAhB,a,kBAkBiB;AAClCS,EAAAA,YAAY,EAAE;AAACQ,IAAAA,SAAS,EAAV,GAAA;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GADoB;AAElCP,EAAAA,OAAO,EAF2B,EAAA;AAGlCC,EAAAA,WAAW,EAHuB,KAAA;AAIlCF,EAAAA,aAAa,EAJqB,KAAA;AAKlCG,EAAAA,kBAAkB,EALgB,EAAA;AAMlCC,EAAAA,oBAAoB,EAAE;AANY,C","sourcesContent":["/* @flow */\n/* eslint react/prop-types: \"error\" */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {Motion, spring} from 'react-motion';\nimport update from 'immutability-helper';\nimport MultiRef from 'react-multi-ref';\nimport OnUpdate from './OnUpdate';\nimport MoveContainer from './MoveContainer';\n\ntype HeightData = {|\n  natural: number;\n  drag: number;\n|};\n\nconst DEFAULT_HEIGHT: HeightData = {natural: 200, drag: 30};\n\nfunction getScrollSpeed(distance, speed, size) {\n  // If distance is zero, then the result is the max speed. Otherwise,\n  // the result tapers toward zero as it gets closer to the opposite\n  // edge of the region.\n  return Math.round(speed - (speed / size) * distance);\n}\n\ntype Drag = {\n  itemKey: string;\n\n  // The y position of the dragged item when the drag started. This will be\n  // equal to the initial mouseY value. The items not being dragged will be\n  // positioned so that the dragged item's original position lines up with\n  // startY.\n  startY: number;\n\n  // The y-position that corresponds to the mouse's current location. The\n  // dragged item will be rendered with this as its y-position.\n  mouseY: number;\n\n  // This is the difference between the raw mouse y value and startY. For\n  // example, if a user clicks the drag handle at a point 5 px below the item's\n  // top, then mouseOffset will be set to 5. As the user moves their mouse, we\n  // update mouseY to be the raw mouse y value minus mouseOffset.\n  mouseOffset: number;\n};\n\nexport type TemplateProps<I,C> = {\n  item: I;\n  itemSelected: number;\n  anySelected: number;\n  dragHandleProps: Object;\n  commonProps: C;\n};\n\ntype Props<I,C,T> = {\n  itemKey: string|(item: I)=>string;\n  template: Class<T>;\n  list: $ReadOnlyArray<I>;\n  onMoveEnd?: ?(newList: $ReadOnlyArray<I>, movedItem: I, oldIndex: number, newIndex: number) => void;\n  container?: ?() => ?HTMLElement;\n  constrainDrag: boolean;\n  springConfig: Object;\n  padding: number;\n  unsetZIndex: boolean;\n  autoScrollMaxSpeed: number;\n  autoScrollRegionSize: number;\n  commonProps?: C;\n};\ntype State = {\n  useAbsolutePositioning: boolean;\n  dragging: boolean;\n  lastDrag: ?Drag;\n  heights: ?{[key: string]: HeightData};\n};\ntype DefaultProps = {\n  springConfig: Object;\n  constrainDrag: boolean;\n  padding: number;\n  unsetZIndex: boolean;\n  autoScrollMaxSpeed: number;\n  autoScrollRegionSize: number;\n};\nexport default class DraggableList<I,C=*,T:React.Component<$Shape<TemplateProps<I,C>>,*>=*> extends React.Component<Props<I,C,T>, State> {\n  static propTypes = {\n    itemKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func\n    ]).isRequired,\n    template: PropTypes.func,\n    list: PropTypes.array.isRequired,\n    onMoveEnd: PropTypes.func,\n    container: PropTypes.func,\n    springConfig: PropTypes.object,\n    constrainDrag: PropTypes.bool,\n    padding: PropTypes.number,\n    unsetZIndex: PropTypes.bool,\n    autoScrollMaxSpeed: PropTypes.number.isRequired,\n    autoScrollRegionSize: PropTypes.number.isRequired,\n    commonProps: PropTypes.object\n  };\n  static defaultProps: DefaultProps = {\n    springConfig: {stiffness: 300, damping: 50},\n    padding: 10,\n    unsetZIndex: false,\n    constrainDrag: false,\n    autoScrollMaxSpeed: 15,\n    autoScrollRegionSize: 30\n  };\n  _itemRefs: MultiRef<string, MoveContainer<I,any,T>> = new MultiRef();\n  _autoScrollerTimer: any;\n\n  _listRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: Props<I,C,T>) {\n    super(props);\n    this.state = {\n      useAbsolutePositioning: false,\n      dragging: false,\n      lastDrag: null,\n      heights: null\n    };\n  }\n\n  getItemInstance(key: string): T {\n    const ref = this._itemRefs.map.get(key);\n    if (!ref) throw new Error('key not found');\n    return ref.getTemplate();\n  }\n\n  static getDerivedStateFromProps<I,C,T>(newProps: Props<I,C,T>, state: State): $Shape<State>|null {\n    const {list} = newProps;\n    const {lastDrag} = state;\n\n    if (lastDrag) {\n      const keyFn = DraggableList._getKeyFn<I>(newProps.itemKey);\n\n      try {\n        DraggableList._getIndexOfItemWithKey<I>(keyFn, list, lastDrag.itemKey);\n      } catch (err) {\n        // If the dragged item was removed from the list, this block will get hit.\n        // Cancel the drag.\n        return {dragging: false, lastDrag: null};\n      }\n    }\n\n    return null;\n  }\n\n  componentWillUnmount() {\n    this._handleMouseUp();\n  }\n\n  _handleTouchStart(itemKey: string, pressY: ?number, event: Object) {\n    event.stopPropagation();\n    this._handleStartDrag(itemKey, pressY, event.touches[0].pageY);\n  }\n\n  _handleMouseDown(itemKey: string, pressY: ?number, event: Object) {\n    event.preventDefault();\n    this._handleStartDrag(itemKey, pressY, event.pageY);\n  }\n\n  _handleStartDrag(itemKey: string, pressY: ?number, pageY: number) {\n    if (document.documentElement) document.documentElement.style.cursor = 'move';\n    window.addEventListener('mouseup', this._handleMouseUp);\n    window.addEventListener('touchend', this._handleMouseUp);\n    window.addEventListener('touchmove', this._handleTouchMove);\n    window.addEventListener('mousemove', this._handleMouseMove);\n\n    // If an element has focus while we drag around the parent, some browsers\n    // try to scroll the parent element to keep the focused element in view.\n    // Stop that.\n    {\n      const listEl = this._listRef.current;\n      if (!listEl) throw new Error('Should not happen');\n      if (\n        listEl.contains && document.activeElement &&\n        listEl.contains(document.activeElement)\n      ) {\n        document.activeElement.blur();\n      }\n    }\n\n    const keyFn = this._getKeyFn();\n\n    let newHeights = null;\n    if (this.state.heights == null) {\n      const _newHeights: {[key: string]: HeightData} = (Object.create(null): any);\n\n      this.props.list.forEach(item => {\n        const key = keyFn(item);\n        const containerRef = this._itemRefs.map.get(key);\n        const refEl = containerRef ? containerRef.getDOMNode().firstElementChild : null;\n        const ref = containerRef ? containerRef.getTemplate() : null;\n        const natural = (refEl instanceof HTMLElement) ?\n          refEl.offsetHeight : DEFAULT_HEIGHT.natural;\n        const drag = ref && (typeof (ref: any).getDragHeight === 'function') && (ref: any).getDragHeight() || natural;\n\n        _newHeights[key] = {natural, drag};\n      });\n\n      newHeights = _newHeights;\n    }\n\n    // Need to re-render once before we start dragging so that the `y` values\n    // are set using the correct state.heights and then can animate from there.\n\n    const afterHeights = () => {\n      const itemIndex = this.props.list.map(keyFn).indexOf(itemKey);\n\n      // pressY will be non-null if the list is currently animating (because the\n      // clicked item has its `y` prop set). pressY will be null if the list is\n      // not currently animating (because the clicked item will be at its\n      // natural position, which is calculatable using _getDistance).\n      const startY = pressY == null ?\n        this._getDistance(0, itemIndex, false) : pressY;\n\n      const containerEl = this._getContainer();\n      const containerScroll = !containerEl || containerEl === document.body ?\n        0 : containerEl.scrollTop;\n\n      this.setState({\n        useAbsolutePositioning: true,\n        dragging: true,\n        lastDrag: {\n          itemKey: itemKey,\n          startY,\n          mouseY: startY,\n          mouseOffset: pageY - startY + containerScroll\n        }\n      });\n    };\n\n    if (newHeights) {\n      this.setState({heights: newHeights}, afterHeights);\n    } else {\n      afterHeights();\n    }\n  }\n\n  _handleTouchMove: Function = (e) => {\n    e.preventDefault();\n    this._handleMouseMove(e.touches[0]);\n  };\n\n  _handleMouseMove: Function = ({pageY, clientY}) => {\n    const {\n      list,\n      autoScrollMaxSpeed,\n      autoScrollRegionSize\n    } = this.props;\n    const {dragging, lastDrag} = this.state;\n    if (!dragging || !lastDrag) return;\n\n    const containerEl = this._getContainer();\n    const dragVisualIndex = this._getDragVisualIndex();\n    const keyFn = this._getKeyFn();\n\n    clearInterval(this._autoScrollerTimer);\n\n    // If the user has the mouse near the top or bottom of the container and\n    // not at the end of the list, then autoscroll.\n    if (dragVisualIndex !== 0 && dragVisualIndex !== list.length-1) {\n      let scrollSpeed = 0;\n\n      const containerRect = containerEl && containerEl !== document.body &&\n        containerEl.getBoundingClientRect ?\n        containerEl.getBoundingClientRect() :\n        {top: 0, bottom: Infinity};\n\n      // Get the lowest of the screen top and the container top.\n      const top = Math.max(0, containerRect.top);\n\n      const distanceFromTop = clientY-top;\n      if (distanceFromTop > 0 && distanceFromTop < autoScrollRegionSize) {\n        scrollSpeed = -1 * getScrollSpeed(distanceFromTop, autoScrollMaxSpeed, autoScrollRegionSize);\n      } else {\n        // Get the lowest of the screen bottom and the container bottom.\n        const bottom = Math.min(window.innerHeight, containerRect.bottom);\n        const distanceFromBottom = bottom-clientY;\n        if (distanceFromBottom > 0 && distanceFromBottom < autoScrollRegionSize) {\n          scrollSpeed = getScrollSpeed(distanceFromBottom, autoScrollMaxSpeed, autoScrollRegionSize);\n        }\n      }\n\n      if (scrollSpeed !== 0) {\n        this._scrollContainer(scrollSpeed);\n        this._autoScrollerTimer = setTimeout(() => {\n          this._handleMouseMove({\n            pageY: pageY + (containerEl===document.body?scrollSpeed:0),\n            clientY\n          });\n        }, 16);\n      }\n    }\n\n    const containerScroll = !containerEl || containerEl === document.body ?\n      0 : containerEl.scrollTop;\n    let mouseY = pageY - lastDrag.mouseOffset + containerScroll;\n    if (this.props.constrainDrag) {\n      const visualList = this._getVisualListDuringDrag();\n\n      mouseY = Math.max(mouseY, this._getDistanceFromTopDuringDrag(lastDrag, keyFn(visualList[0]), visualList));\n      mouseY = Math.min(mouseY, this._getDistanceFromTopDuringDrag(lastDrag, keyFn(visualList[visualList.length - 1]), visualList));\n    }\n\n    this.setState({lastDrag: {...lastDrag, mouseY}});\n  };\n\n  _handleMouseUp: Function = () => {\n    clearInterval(this._autoScrollerTimer);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n    window.removeEventListener('touchend', this._handleMouseUp);\n    window.removeEventListener('touchmove', this._handleTouchMove);\n    window.removeEventListener('mousemove', this._handleMouseMove);\n\n    if (document.documentElement) document.documentElement.style.cursor = '';\n    this._lastScrollDelta = 0;\n\n    const {list, onMoveEnd} = this.props;\n    const {dragging, lastDrag} = this.state;\n\n    if (dragging && lastDrag && onMoveEnd) {\n      const dragIndex = this._getDragListIndex();\n      const newIndex = this._getDragVisualIndex();\n\n      if (dragIndex !== newIndex) {\n        const newList = this._getVisualListDuringDrag();\n\n        onMoveEnd(newList, list[dragIndex], dragIndex, newIndex);\n      }\n      this.setState({dragging: false});\n    }\n  };\n\n  _scrollContainer(delta: number) {\n    const containerEl = this._getContainer();\n    if (!containerEl) return;\n    if (window.scrollBy && containerEl === document.body) {\n      window.scrollBy(0, delta);\n    } else {\n      containerEl.scrollTop += delta;\n    }\n  }\n\n  _lastScrollDelta: number = 0;\n  _adjustScrollAtEnd(delta: number) {\n    const frameDelta = Math.round(delta - this._lastScrollDelta);\n    this._scrollContainer(frameDelta);\n    this._lastScrollDelta += frameDelta;\n  }\n\n  static _getIndexOfItemWithKey<I>(keyFn: (item: I) => string, list: $ReadOnlyArray<I>, itemKey: string): number {\n    for (let i=0, len=list.length; i < len; i++) {\n      if (keyFn(list[i]) === itemKey) {\n        return i;\n      }\n    }\n    throw new Error('Failed to find drag index');\n  }\n\n  _getDragListIndex(): number {\n    const {list} = this.props;\n    const {lastDrag} = this.state;\n    if (!lastDrag) {\n      throw new Error('No drag happened');\n    }\n    const keyFn = this._getKeyFn();\n    return DraggableList._getIndexOfItemWithKey(keyFn, list, lastDrag.itemKey);\n  }\n\n  _getDragVisualIndex(): number {\n    const {list, padding} = this.props;\n    const {dragging, lastDrag} = this.state;\n    if (!dragging || !lastDrag) throw new Error('Should not happen');\n\n    const dragListIndex = this._getDragListIndex();\n\n    const {mouseY, startY} = lastDrag;\n\n    const movementFromNatural = mouseY-startY;\n    // 1 down, -1 up, 0 neither\n    const direction = movementFromNatural > 0 ? 1 :\n      movementFromNatural < 0 ? -1 : 0;\n    let newIndex = dragListIndex;\n    if (direction !== 0) {\n      const keyFn = this._getKeyFn();\n      let reach = Math.abs(movementFromNatural);\n      for (let i=dragListIndex+direction; i < list.length && i >= 0; i += direction) {\n        const iDragHeight = this._getItemHeight(keyFn(list[i])).drag;\n        if (reach < iDragHeight/2 + padding) break;\n        reach -= iDragHeight + padding;\n        newIndex = i;\n      }\n    }\n\n    return newIndex;\n  }\n\n  _getVisualListDuringDrag(): $ReadOnlyArray<I> {\n    const {list} = this.props;\n    const {dragging, lastDrag} = this.state;\n    if (!dragging || !lastDrag) throw new Error('Should not happen: _getVisualListDuringDrag called outside of drag');\n\n    const dragListIndex = this._getDragListIndex();\n    const dragVisualIndex = this._getDragVisualIndex();\n\n    return update(list, {\n      $splice: [[dragListIndex, 1], [dragVisualIndex, 0, list[dragListIndex]]]\n    });\n  }\n\n  _getItemHeight(key: string): HeightData {\n    return this.state.heights != null && key in this.state.heights ?\n      this.state.heights[key] : DEFAULT_HEIGHT;\n  }\n\n  // Get the distance between the tops of two items in the list.\n  // Does not consider how the dragged item may be rendered in a different position\n  // unless you pass in the re-ordered list as a parameter.\n  _getDistance(start: number, end: number, dragging: boolean, list: $ReadOnlyArray<I> = this.props.list): number {\n    if (end < start) {\n      return -this._getDistance(end, start, dragging, list);\n    }\n\n    const {padding} = this.props;\n    const keyFn = this._getKeyFn();\n    let distance = 0;\n    for (let i=start; i < end; i++) {\n      const height = this._getItemHeight(keyFn(list[i]));\n      distance += (dragging ? height.drag : height.natural) + padding;\n    }\n    return distance;\n  }\n\n  _getDistanceFromTopDuringDrag(lastDrag: Drag, itemKey: string, visualList: $ReadOnlyArray<I>): number {\n    const keyFn = this._getKeyFn();\n    const index = DraggableList._getIndexOfItemWithKey(keyFn, visualList, itemKey);\n    const dragListIndex = this._getDragListIndex();\n    const dragVisualIndex = DraggableList._getIndexOfItemWithKey(keyFn, visualList, lastDrag.itemKey);\n\n    let offset = 0;\n    if (dragVisualIndex < dragListIndex) {\n      const dragItemHeight = this._getItemHeight(lastDrag.itemKey);\n      const newCenterHeight =\n        this._getItemHeight(keyFn(visualList[dragListIndex]));\n      offset = dragItemHeight.drag - newCenterHeight.drag;\n    }\n\n    return lastDrag.startY + offset +\n      this._getDistance(dragListIndex, index, true, visualList);\n  }\n\n  _getContainer(): ?HTMLElement {\n    const {container} = this.props;\n    return container ? container() : null;\n  }\n\n  static _getKeyFn<I>(itemKey: string|(item: I)=>string): (item: I) => string {\n    return typeof itemKey === 'function' ? itemKey : x => (x: any)[itemKey];\n  }\n\n  _getKeyFn(): (item: I) => string {\n    return DraggableList._getKeyFn<I>(this.props.itemKey);\n  }\n\n  render() {\n    const {list, springConfig, container, padding, template, unsetZIndex, commonProps} = this.props;\n    const {dragging, lastDrag, useAbsolutePositioning} = this.state;\n\n    const keyFn = this._getKeyFn();\n    const anySelected = spring(dragging ? 1 : 0, springConfig);\n\n    const visualList = dragging ? this._getVisualListDuringDrag() : list;\n\n    const children = list.map((item, i) => {\n      const key = keyFn(item);\n      const selectedStyle = dragging && lastDrag && lastDrag.itemKey === key\n        ? {\n          itemSelected: spring(1, springConfig),\n          y: lastDrag.mouseY\n        }\n        : {\n          itemSelected: spring(0, springConfig),\n          y: (useAbsolutePositioning ? spring : (x,ignored)=>x)(dragging && lastDrag ?\n            this._getDistanceFromTopDuringDrag(lastDrag, key, visualList)\n            : this._getDistance(0, i, false), springConfig)\n        };\n      const style = {\n        anySelected,\n        ...selectedStyle\n      };\n      const makeDragHandleProps = (getY: ()=>?number): Object => ({\n        onMouseDown: e => this._handleMouseDown(key, getY(), e),\n        onTouchStart: e => this._handleTouchStart(key, getY(), e)\n      });\n      const height = this._getItemHeight(key);\n      return (\n        <Motion\n          style={style} key={key}\n          children={({itemSelected, anySelected, y}) =>\n            <MoveContainer\n              ref={this._itemRefs.ref(key)}\n              y={useAbsolutePositioning ? y : null}\n              template={template}\n              padding={padding}\n              item={item}\n              itemSelected={itemSelected}\n              anySelected={anySelected}\n              height={height}\n              zIndex={unsetZIndex && !useAbsolutePositioning ? 'auto' :\n                (lastDrag && lastDrag.itemKey === key ? list.length : i)\n              }\n              makeDragHandleProps={makeDragHandleProps}\n              commonProps={commonProps}\n            />\n          }\n        />\n      );\n    });\n\n    let adjustScroll = 0;\n    if (!dragging && lastDrag && useAbsolutePositioning) {\n      const dragListIndex = this._getDragListIndex();\n      adjustScroll = spring(\n        this._getDistance(0, dragListIndex, false)\n        - lastDrag.mouseY,\n        springConfig\n      );\n    }\n\n    let heightReserverHeight = 0;\n    let heightReserverMarginBottom = 0;\n    if (list.length) {\n      heightReserverMarginBottom = padding;\n      if (useAbsolutePositioning) {\n        heightReserverHeight = this._getDistance(0, list.length, false) - padding;\n      }\n    }\n    return (\n      <div\n        style={{position: 'relative'}}\n        ref={this._listRef}\n      >\n        <Motion\n          style={{adjustScroll, anySelected}}\n          onRest={() => {\n            if (!dragging) {\n              this.setState({\n                heights: null,\n                useAbsolutePositioning: false\n              });\n            }\n          }}\n          children={({adjustScroll}) =>\n            <div\n              style={{\n                display: useAbsolutePositioning ? 'block' : 'none',\n                height: `${heightReserverHeight}px`,\n                marginBottom: `${heightReserverMarginBottom}px`\n              }}\n            >\n              {container && <OnUpdate cb={() => {\n                if (!dragging && lastDrag && useAbsolutePositioning) {\n                  this._adjustScrollAtEnd(adjustScroll);\n                }\n              }} />}\n            </div>\n          }\n        />\n        {children}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}