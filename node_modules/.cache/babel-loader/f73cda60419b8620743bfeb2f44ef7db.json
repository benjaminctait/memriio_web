{"ast":null,"code":"var _jsxFileName = \"/Users/muhammad/Documents/projects/upwork/ben/memriio_web/src/components/navigation/navigation.js\";\nimport React from \"react\";\nimport logo from \"./memrii_logo.png\";\nimport * as DropSearch from \"../dropsearch/dropsearch\";\nimport * as mem from \"../memriioserver\";\nimport NewMemoryModal from \"../memorymodal/newmemorymodal\";\nimport \"./navigation.css\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchwords: \"\",\n      userClouds: null,\n      selectedClouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false,\n      showNewPostModal: false\n    };\n\n    this.onSearchBoxChange = event => {\n      let text = event.target.value.toLowerCase();\n      let tmparray = [];\n      console.log(\"navigation-onSearchBoxChange : \" + text.split(\" \"));\n\n      if (event.target.value !== \"\") {\n        tmparray = text.split(\" \");\n      }\n\n      this.setState({\n        searchwords: tmparray\n      }, this.showMemories);\n    };\n\n    this.handleChangeSearchClouds = (clouds, userid) => {\n      let cloudstring = \"\";\n      clouds.map(cloud => {\n        cloudstring += cloud.value + \",\";\n      });\n\n      if (cloudstring) {\n        cloudstring = cloudstring.slice(0, cloudstring.length - 1);\n      }\n\n      mem.updatedUserClouds(userid, cloudstring);\n      this.setState({\n        selectedClouds: clouds\n      }, this.showMemories);\n    };\n\n    this.showMemories = () => {\n      let selected = this.state.selectedClouds;\n      let searchwords = this.state.searchwords;\n      let cloudids = [];\n      if (selected) cloudids = selected.map(cloud => {\n        return parseInt(cloud.value);\n      });\n      console.log(\"showMemories \", cloudids);\n\n      if (cloudids.length === 0) {\n        console.log(\"showMemories calling loadMemories(null)\");\n        this.props.loadMemories(null);\n      } else if (selected.length === 1 && selected[0].value === 0) {\n        // personal only\n        console.log(\"personal only \" + selected[0].value);\n\n        if (this.state.personalMemoryunsharedOnly) {\n          // personal only - unshared only\n          console.log(\"personal : unshared \" + this.props.userid + \" \" + searchwords);\n          mem.getMemories_PersonalOnly_Unshared(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // personal only - bth shared and undshared\n          console.log(\"personal : all \" + this.props.userid + \" \" + searchwords);\n          mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else if (cloudids.includes(0)) {\n        // personal cloud + other clouds\n        console.log(\"personal cloud + other clouds  : cloudids \" + cloudids);\n\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log(\"personal cloud + other clouds with searchwords \" + this.props.userid + \" \" + searchwords + \" \" + cloudids);\n          mem.getMemories_User_Words_Clouds(this.props.userid, searchwords, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log(\"personal cloud + other clouds no searchwords \" + this.props.userid + \" : \" + cloudids);\n          mem.getMemories_User_Clouds(this.props.userid, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else {\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log(\"other clouds only with searchwords : \" + searchwords + \" cloudids : \" + cloudids);\n          mem.getMemories_Words_Clouds(cloudids, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log(\"other clouds only no searchwords : cloud ids\" + cloudids);\n          mem.getMemories_Clouds(cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      }\n    };\n\n    this.loadUserClouds = userid => {\n      let temp = [];\n      if (userid) mem.getUserClouds(userid, clouds => {\n        clouds.push({\n          id: 0,\n          name: \"Personal\"\n        });\n        clouds.reverse();\n        clouds.map(cloud => {\n          if (this.props.startingClouds.includes(parseInt(cloud.id))) temp.push({\n            value: cloud.id,\n            label: cloud.name\n          });\n        });\n        this.setState({\n          userClouds: clouds,\n          selectedClouds: temp\n        }, this.showMemories());\n      });\n    };\n\n    this.handleSignOut = () => {\n      this.state = {\n        searchwords: \"\",\n        userClouds: null,\n        selectedClouds: null,\n        showPersonalMemoryOptions: false,\n        personalMemoryunsharedOnly: false\n      };\n      this.props.onRouteChange(\"signin\");\n    };\n\n    this.handleAdminClick = () => {\n      this.props.onRouteChange(\"admin\");\n    };\n\n    this.handleRunTest = () => {\n      console.log(\"this does nothing anymore\");\n    };\n\n    this.handleShowNewMemory = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleUploadInProgress = () => {\n      console.log(\"hide newmemory modal\");\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleNewPost = memory => {\n      this.props.onNewMemory(memory);\n    };\n\n    this.handleCancelNewPost = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.renderStandardNav = () => {\n      const {\n        onRouteChange,\n        userid\n      } = this.props;\n      let cloudbox = null;\n      let selected = this.state.selectedClouds;\n\n      if (this.state.userClouds) {\n        cloudbox = DropSearch.cloudDropSearch(null, this.state.userClouds, selected, true, false, this.handleChangeSearchClouds, userid);\n      } else {\n        this.loadUserClouds(userid);\n      }\n\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.onSearchBoxChange,\n        className: \"searchBox\",\n        type: \"text\",\n        \"aria-describedby\": \"name-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, cloudbox), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleShowNewMemory,\n        href: \"#newpost\",\n        title: \"New\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }\n      }, \"New\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleSignOut,\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        href: \"#\",\n        title: \"Log Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }\n      }, \"Sign Out\"))))), /*#__PURE__*/React.createElement(NewMemoryModal, {\n        key: \"memmodal\" + 42,\n        userid: this.props.userid,\n        userClouds: this.state.userClouds,\n        show: this.state.showNewPostModal,\n        onCancelNewMemory: this.handleCancelNewPost,\n        onAddNewMemory: this.handleNewPost,\n        onUploading: this.handleUploadInProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.renderSignInNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"signin\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Log \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, \"Sign In\")));\n    };\n\n    this.renderAdminNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"home\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Home \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }, \"Home\")));\n    };\n\n    this.state = {\n      searchwords: \"\",\n      userClouds: null,\n      selectedClouds: null\n    };\n  }\n\n  //---------------------------------------------------------------------------------\n  render() {\n    const {\n      userSignedin,\n      currentRoute\n    } = this.props;\n\n    if (userSignedin()) {\n      if (currentRoute === \"home\") {\n        return this.renderStandardNav();\n      } else if (currentRoute === \"displayMemory\") {\n        return null;\n      } else if (currentRoute === \"admin\") {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  } //---------------------------------------------------------------------------------\n  //---------------------------------------------------------------------------------\n\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/muhammad/Documents/projects/upwork/ben/memriio_web/src/components/navigation/navigation.js"],"names":["React","logo","DropSearch","mem","NewMemoryModal","Navigation","Component","constructor","props","state","searchwords","userClouds","selectedClouds","showPersonalMemoryOptions","personalMemoryunsharedOnly","showNewPostModal","onSearchBoxChange","event","text","target","value","toLowerCase","tmparray","console","log","split","setState","showMemories","handleChangeSearchClouds","clouds","userid","cloudstring","map","cloud","slice","length","updatedUserClouds","selected","cloudids","parseInt","loadMemories","getMemories_PersonalOnly_Unshared","then","memories","error","getMemories_PersonalOnly_All","includes","getMemories_User_Words_Clouds","getMemories_User_Clouds","getMemories_Words_Clouds","getMemories_Clouds","loadUserClouds","temp","getUserClouds","push","id","name","reverse","startingClouds","label","handleSignOut","onRouteChange","handleAdminClick","handleRunTest","handleShowNewMemory","handleUploadInProgress","handleNewPost","memory","onNewMemory","handleCancelNewPost","renderStandardNav","cloudbox","cloudDropSearch","renderSignInNav","renderAdminNav","render","userSignedin","currentRoute"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./memrii_logo.png\";\nimport * as DropSearch from \"../dropsearch/dropsearch\";\nimport * as mem from \"../memriioserver\";\nimport NewMemoryModal from \"../memorymodal/newmemorymodal\";\nimport \"./navigation.css\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchwords: \"\",\n      userClouds: null,\n      selectedClouds: null,\n    };\n  }\n\n  state = {\n    searchwords: \"\",\n    userClouds: null,\n    selectedClouds: null,\n    showPersonalMemoryOptions: false,\n    personalMemoryunsharedOnly: false,\n    showNewPostModal: false,\n  };\n\n  //---------------------------------------------------------------------------------\n\n  onSearchBoxChange = (event) => {\n    let text = event.target.value.toLowerCase();\n    let tmparray = [];\n\n    console.log(\"navigation-onSearchBoxChange : \" + text.split(\" \"));\n\n    if (event.target.value !== \"\") {\n      tmparray = text.split(\" \");\n    }\n    this.setState({ searchwords: tmparray }, this.showMemories);\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleChangeSearchClouds = (clouds, userid) => {\n    let cloudstring = \"\";\n    clouds.map((cloud) => {\n      cloudstring += cloud.value + \",\";\n    });\n    if (cloudstring) {\n      cloudstring = cloudstring.slice(0, cloudstring.length - 1);\n    }\n\n    mem.updatedUserClouds(userid, cloudstring);\n\n    this.setState({ selectedClouds: clouds }, this.showMemories);\n  };\n\n  //---------------------------------------------------------------------------------\n\n  showMemories = () => {\n    let selected = this.state.selectedClouds;\n    let searchwords = this.state.searchwords;\n    let cloudids = [];\n\n    if (selected)\n      cloudids = selected.map((cloud) => {\n        return parseInt(cloud.value);\n      });\n    console.log(\"showMemories \", cloudids);\n\n    if (cloudids.length === 0) {\n      console.log(\"showMemories calling loadMemories(null)\");\n      this.props.loadMemories(null);\n    } else if (selected.length === 1 && selected[0].value === 0) {\n      // personal only\n      console.log(\"personal only \" + selected[0].value);\n      if (this.state.personalMemoryunsharedOnly) {\n        // personal only - unshared only\n\n        console.log(\n          \"personal : unshared \" + this.props.userid + \" \" + searchwords\n        );\n        mem\n          .getMemories_PersonalOnly_Unshared(this.props.userid, searchwords)\n          .then(\n            (memories) => {\n              this.props.loadMemories(memories);\n            },\n            (error) => {\n              this.props.loadMemories(null);\n            }\n          );\n      } else {\n        // personal only - bth shared and undshared\n\n        console.log(\"personal : all \" + this.props.userid + \" \" + searchwords);\n        mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      }\n    } else if (cloudids.includes(0)) {\n      // personal cloud + other clouds\n      console.log(\"personal cloud + other clouds  : cloudids \" + cloudids);\n\n      if (searchwords.length > 0) {\n        // clouds + searchwords\n\n        console.log(\n          \"personal cloud + other clouds with searchwords \" +\n            this.props.userid +\n            \" \" +\n            searchwords +\n            \" \" +\n            cloudids\n        );\n        mem\n          .getMemories_User_Words_Clouds(\n            this.props.userid,\n            searchwords,\n            cloudids\n          )\n          .then(\n            (memories) => {\n              this.props.loadMemories(memories);\n            },\n            (error) => {\n              this.props.loadMemories(null);\n            }\n          );\n      } else {\n        // clouds but no search words\n\n        console.log(\n          \"personal cloud + other clouds no searchwords \" +\n            this.props.userid +\n            \" : \" +\n            cloudids\n        );\n        mem.getMemories_User_Clouds(this.props.userid, cloudids).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      }\n    } else {\n      if (searchwords.length > 0) {\n        // clouds + searchwords\n\n        console.log(\n          \"other clouds only with searchwords : \" +\n            searchwords +\n            \" cloudids : \" +\n            cloudids\n        );\n        mem.getMemories_Words_Clouds(cloudids, searchwords).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      } else {\n        // clouds but no search words\n\n        console.log(\"other clouds only no searchwords : cloud ids\" + cloudids);\n        mem.getMemories_Clouds(cloudids).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------------------\n\n  render() {\n    const { userSignedin, currentRoute } = this.props;\n\n    if (userSignedin()) {\n      if (currentRoute === \"home\") {\n        return this.renderStandardNav();\n      } else if (currentRoute === \"displayMemory\") {\n        return null;\n      } else if (currentRoute === \"admin\") {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  }\n\n  //---------------------------------------------------------------------------------\n\n  loadUserClouds = (userid) => {\n    let temp = [];\n\n    if (userid)\n      mem.getUserClouds(userid, (clouds) => {\n        clouds.push({\n          id: 0,\n          name: \"Personal\",\n        });\n        clouds.reverse();\n        clouds.map((cloud) => {\n          if (this.props.startingClouds.includes(parseInt(cloud.id)))\n            temp.push({ value: cloud.id, label: cloud.name });\n        });\n\n        this.setState(\n          { userClouds: clouds, selectedClouds: temp },\n          this.showMemories()\n        );\n      });\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleSignOut = () => {\n    this.state = {\n      searchwords: \"\",\n      userClouds: null,\n      selectedClouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false,\n    };\n    this.props.onRouteChange(\"signin\");\n  };\n\n  handleAdminClick = () => {\n    this.props.onRouteChange(\"admin\");\n  };\n\n  handleRunTest = () => {\n    console.log(\"this does nothing anymore\");\n  };\n  //-------------------------------------------------------------------------------\n\n  handleShowNewMemory = () => {\n    this.setState({ showNewPostModal: !this.state.showNewPostModal });\n  };\n\n  //-------------------------------------------------------------------------------\n\n  handleUploadInProgress = () => {\n    console.log(\"hide newmemory modal\");\n    this.setState({ showNewPostModal: !this.state.showNewPostModal });\n  };\n  //-------------------------------------------------------------------------------\n\n  handleNewPost = (memory) => {\n    this.props.onNewMemory(memory);\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleCancelNewPost = () => {\n    this.setState({ showNewPostModal: !this.state.showNewPostModal });\n  };\n\n  //---------------------------------------------------------------------------------\n\n  renderStandardNav = () => {\n    const { onRouteChange, userid } = this.props;\n    let cloudbox = null;\n    let selected = this.state.selectedClouds;\n    if (this.state.userClouds) {\n      cloudbox = DropSearch.cloudDropSearch(\n        null,\n        this.state.userClouds,\n        selected,\n        true,\n        false,\n        this.handleChangeSearchClouds,\n        userid\n      );\n    } else {\n      this.loadUserClouds(userid);\n    }\n\n    return (\n      <nav className=\"navBar\">\n        <div className=\"container\">\n          <div className=\"left\">\n            <ul>\n              <li className=\"floatLeft\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n              </li>\n            </ul>\n          </div>\n          <div className=\"center\">\n              <ul>\n              <li className=\"floatRight width50\">\n              <input\n                onChange={this.onSearchBoxChange}\n                className=\"searchBox\"\n                type=\"text\"\n                aria-describedby=\"name-desc\"\n              ></input>\n            </li>\n\n            <li className=\"floatRight width50\">{cloudbox}</li>\n            <li className=\"floatRight\">\n              <a\n                className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\"\n                onClick={this.handleShowNewMemory}\n                href=\"#newpost\"\n                title=\"New\"\n              >\n                New\n              </a>\n            </li>\n              </ul>\n\n          </div>\n          <div className=\"right\">\n              <ul>\n              <li className=\"floatRight\">\n              <a\n                onClick={this.handleSignOut}\n                className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\"\n                href=\"#\"\n                title=\"Log Out\"\n              >\n                Sign Out\n              </a>\n            </li>\n              </ul>\n          </div>\n          {/* <ul>\n            \n\n  \n\n            <li className='floatRight'>\n                    <a className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        onClick={this.handleRunTest}\n                        href=\"#newpost\" \n                        title=\"New\">Test</a>\n                </li>\n\n\n          </ul> */}\n        </div>\n\n        <NewMemoryModal\n          key={\"memmodal\" + 42}\n          userid={this.props.userid}\n          userClouds={this.state.userClouds}\n          show={this.state.showNewPostModal}\n          onCancelNewMemory={this.handleCancelNewPost}\n          onAddNewMemory={this.handleNewPost}\n          onUploading={this.handleUploadInProgress}\n        ></NewMemoryModal>\n      </nav>\n    );\n  };\n\n  //---------------------------------------------------------------------------------\n\n  renderSignInNav = () => {\n    const onRouteChange = this.props.onRouteChange;\n    return (\n      <nav className=\"navBar \">\n        <div className=\"logocell\" href=\"#\" title=\"Home\">\n          <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n        </div>\n        <div className=\"dtc v-mid w-75 tr\">\n          <a\n            onClick={() => onRouteChange(\"signin\")}\n            className=\"link dim dark-gray f6 f4-ns dib\"\n            href=\"#\"\n            title=\"Log \"\n          >\n            Sign In\n          </a>\n        </div>\n      </nav>\n    );\n  };\n\n  //---------------------------------------------------------------------------------\n\n  renderAdminNav = () => {\n    const onRouteChange = this.props.onRouteChange;\n    return (\n      <nav className=\"navBar \">\n        <div className=\"logocell\" href=\"#\" title=\"Home\">\n          <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n        </div>\n        <div className=\"dtc v-mid w-75 tr\">\n          <a\n            onClick={() => onRouteChange(\"home\")}\n            className=\"link dim dark-gray f6 f4-ns dib\"\n            href=\"#\"\n            title=\"Home \"\n          >\n            Home\n          </a>\n        </div>\n      </nav>\n    );\n  };\n\n  //---------------------------------------------------------------------------------\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}