{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js\";\nimport React, { useState } from 'react';\nimport * as mem from '../memriioserver';\nimport './admin.css';\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png';\nimport tag from '../images/tag.png';\nimport cross from '../images/x-symbol.png';\nimport Modal from 'react-modal';\nimport { Grid, Input, Select } from 'react-spreadsheet-grid';\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clouds: [],\n      users: [],\n      personModalIsOpen: false,\n      columns: null\n    };\n\n    this.handleCloudSearch = e => {\n      console.log(e.target.value);\n    };\n\n    this.handleSelectCloud = cloud => {\n      console.log(cloud.name);\n      let clouds = [];\n      clouds.push(cloud);\n      mem.getCloudPeople(clouds, null).then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handleShowAUsers = () => {\n      console.log('show all users');\n      mem.getAllUsers().then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handlePeopleSearch = e => {};\n\n    this.handleAddPerson = () => {\n      this.setState({\n        personModalIsOpen: true\n      });\n    };\n\n    this.handleSelectPerson = Person => {};\n\n    this.afterOpenModal = () => {};\n\n    this.closeModal = () => {\n      this.setState({\n        personModalIsOpen: false\n      });\n    };\n\n    this.renderClouds = () => {\n      let clouds = [];\n\n      if (this.state.clouds) {\n        {\n          clouds.push( /*#__PURE__*/React.createElement(CloudLabel, {\n            data: null,\n            key: 'allclouds',\n            onClick: this.handleShowAUsers,\n            leftImg: cloudImage,\n            label: 'Master Cloud',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }\n          }));\n          this.state.clouds.map(cloud => {\n            clouds.push( /*#__PURE__*/React.createElement(CloudLabel, {\n              data: cloud,\n              key: 'i' + cloud.id,\n              onClick: this.handleSelectCloud,\n              leftImg: cloudImage,\n              label: cloud.name,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 11\n              }\n            }));\n          });\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"admin-column cloud-column \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }\n      }, \"Clouds\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"searchBox\",\n        onChange: this.handleCloudSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, clouds));\n    };\n\n    this.onColumnResize = widthValues => {\n      const newColumns = [].concat(this.state.columns);\n      Object.keys(widthValues).forEach(columnId => {\n        const column = this.state.columns.find(({\n          id\n        }) => id === columnId);\n        column.width = widthValues[columnId];\n      });\n      this.setState({\n        columns: newColumns\n      });\n    };\n\n    this.initColumns = () => {\n      return [{\n        title: () => 'Photo',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: row.avatar,\n            alt: 'image',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 22\n            }\n          });\n        },\n        width: 6\n      }, {\n        title: () => 'User Id',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.userid,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 6\n      }, {\n        title: () => 'First Name',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.firstname,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        title: () => 'Last Name',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.lastname,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        title: () => 'email',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.email,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        title: () => 'Username',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.email,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        title: () => 'mobile',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.mobile,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        title: () => 'Joined',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.joined,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        title: () => 'Clouds',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.joined,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }];\n    };\n\n    this.renderCloudPeople = () => {\n      if (this.state.people) {\n        if (!this.state.columns) this.state.columns = this.initColumns();\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-column user-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"floatLeft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 9\n          }\n        }, \"People\"), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"searchBox\",\n          onChange: this.handlePeopleSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"floatLeft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          rows: this.state.people,\n          columns: this.state.columns,\n          getRowKey: row => row.userid,\n          isColumnsResizable: true,\n          onColumnResize: this.onColumnResize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }\n        })));\n      } else {\n        return null;\n      }\n    };\n  }\n\n  //---------------------------------------------------------------\n  componentDidMount() {\n    console.log('Administration.componentDidMount ');\n    mem.getAllClouds().then(clouds => {\n      console.log('all clouds');\n      console.log(clouds);\n      this.setState({\n        clouds: clouds\n      });\n    });\n  } //---------------------------------------------------------------\n\n\n  //---------------------------------------------------------------\n  render() {\n    const cloudview = this.renderClouds();\n    const cloudpeople = this.renderCloudPeople();\n    const addPersonModel = this.renderAddPersonModal();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"some-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, addPersonModel, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, cloudview, cloudpeople));\n  } //---------------------------------------------------------------\n\n\n  renderAddPersonModal() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.personModalIsOpen,\n      onAfterOpen: this.afterOpenModal,\n      onRequestClose: this.closeModal,\n      className: \"modal\",\n      overlayClassName: \"backdropStyle\",\n      contentLabel: \"Example Modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, \"Add Person\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onNewUserFirstNameChange,\n      className: \"pa2 input-reset black ba bg-transparent hover-bg-black  w-100\",\n      type: \"text\",\n      name: \"firstname\",\n      id: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, \"close\"));\n  } //---------------------------------------------------------------\n  //---------------------------------------------------------------\n\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js"],"names":["React","useState","mem","CloudLabel","cloudImage","tag","cross","Modal","Grid","Input","Select","Admin","Component","state","clouds","users","personModalIsOpen","columns","handleCloudSearch","e","console","log","target","value","handleSelectCloud","cloud","name","push","getCloudPeople","then","people","setState","handleShowAUsers","getAllUsers","handlePeopleSearch","handleAddPerson","handleSelectPerson","Person","afterOpenModal","closeModal","renderClouds","map","id","onColumnResize","widthValues","newColumns","concat","Object","keys","forEach","columnId","column","find","width","initColumns","title","row","focus","avatar","userid","firstname","lastname","email","mobile","joined","renderCloudPeople","componentDidMount","getAllClouds","render","cloudview","cloudpeople","addPersonModel","renderAddPersonModal","onNewUserFirstNameChange"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport * as mem from '../memriioserver'\nimport './admin.css'\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png'\nimport tag from '../images/tag.png'\nimport cross from '../images/x-symbol.png'\nimport Modal from 'react-modal'\nimport {Grid,Input,Select} from 'react-spreadsheet-grid'\n\n\nclass Admin extends React.Component{\n\nstate ={\n  clouds:[],\n  users:[],\n  personModalIsOpen:false,\n  columns:null\n}\n\n//---------------------------------------------------------------\n\ncomponentDidMount(){\n  console.log('Administration.componentDidMount ' )\n  \n  mem.getAllClouds().then(clouds => {\n    console.log('all clouds');    \n    console.log(clouds);\n    this.setState({clouds:clouds})\n  })\n}\n\n//---------------------------------------------------------------\n\nhandleCloudSearch = (e) => {\n  console.log(e.target.value);\n  \n}\n\n//---------------------------------------------------------------\n\nhandleSelectCloud = ( cloud ) => {\n  console.log(cloud.name);\n  let clouds = []\n  clouds.push(cloud)\n  mem.getCloudPeople(clouds,null).then(people => {this.setState({people:people})})\n  \n}\n\nhandleShowAUsers = () =>{\n  console.log('show all users');\n  \n  mem.getAllUsers().then(people=> {this.setState({people:people})})\n}\n//---------------------------------------------------------------\n\nhandlePeopleSearch = (e) => {\n\n}\n\n//---------------------------------------------------------------\n\nhandleAddPerson = () => { \n  this.setState({personModalIsOpen:true})\n\n}\n\n//---------------------------------------------------------------\nhandleSelectPerson = (Person) => {\n\n}\n\n//---------------------------------------------------------------\n\nrender(){\n  const cloudview       = this.renderClouds()\n  const cloudpeople     = this.renderCloudPeople()\n  const addPersonModel  = this.renderAddPersonModal()\n    return (\n      <div className='some-page-wrapper'>\n        {addPersonModel}\n        <div className ='headerrow'></div>\n        <div className='row'>\n          {cloudview}\n          {cloudpeople}\n        </div>\n      </div>\n    )\n}\n\n//---------------------------------------------------------------\n\nafterOpenModal =() =>{\n\n}\n\ncloseModal = () =>{\n  this.setState({personModalIsOpen:false})\n\n}\n\nrenderAddPersonModal (){\n\n  return(\n    <Modal\n          isOpen          = {this.state.personModalIsOpen}\n          onAfterOpen     = {this.afterOpenModal}\n          onRequestClose  = {this.closeModal}\n          className       = 'modal'\n          overlayClassName= 'backdropStyle'\n          contentLabel    = \"Example Modal\"\n    >\n      <h2 >Add Person</h2>\n      <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">First Name</label>\n        <input \n            onChange={this.onNewUserFirstNameChange}\n            className=\"pa2 input-reset black ba bg-transparent hover-bg-black  w-100\" \n            type=\"text\" \n            name=\"firstname\" \n            id=\"firstname\" />\n            \n      <button onClick={this.closeModal}>close</button>\n        \n    </Modal>    \n  )\n  \n}\n\n//---------------------------------------------------------------\n\nrenderClouds = () =>{\n  let clouds = []\n  \n  \n  if(this.state.clouds){\n    { \n      clouds.push(\n        <CloudLabel \n          data    = { null }\n          key     = {'allclouds'} \n          onClick = { this.handleShowAUsers} \n          leftImg = { cloudImage }\n          label   = { 'Master Cloud' }\n        />   \n      )\n      this.state.clouds.map(cloud =>{\n        clouds.push(\n          <CloudLabel \n            data    = { cloud}\n            key     = {'i' + cloud.id} \n            onClick = { this.handleSelectCloud} \n            leftImg = { cloudImage}\n            label   = { cloud.name}\n          />   \n        )\n      }) \n    }\n\n\n  }\n\n  return ( \n\n    <div className='admin-column cloud-column '>\n      <h1 className='floatLeft'>Clouds</h1>\n      <input className='searchBox' onChange={this.handleCloudSearch}/>\n      <div className='floatLeft'>\n      {clouds}\n      </div>\n    </div>\n  )\n}\n\n//---------------------------------------------------------------\n\nonColumnResize = (widthValues) => {\n  \n  const newColumns = [].concat(this.state.columns)\n  Object.keys(widthValues).forEach((columnId) => {\n      const column = this.state.columns.find(({ id }) => id === columnId);\n      column.width = widthValues[columnId]\n  })\n  this.setState({columns:newColumns})\n}\n\n//---------------------------------------------------------------\n\ninitColumns = () =>{\n  return(\n    [\n      {\n        title: () => 'Photo',\n        value: (row, { focus }) => {\n            return ( <img src={row.avatar} alt={'image'} /> )\n        },\n        width:6,\n      }, {\n        \n        title: () => 'User Id',\n        value: (row, { focus }) => {\n          return ( <Input value={row.userid} focus={focus} /> )\n        },\n        width:6,\n      }, {\n        title: () => 'First Name',\n        value: (row, { focus }) => {\n          return ( <Input value={row.firstname} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        title: () => 'Last Name',\n        value: (row, { focus }) => {\n          return ( <Input value={row.lastname} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        title: () => 'email',\n        value: (row, { focus }) => {\n          return ( <Input value={row.email} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        title: () => 'Username',\n        value: (row, { focus }) => {\n          return ( <Input value={row.email} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        title: () => 'mobile',\n        value: (row, { focus }) => {\n          return ( <Input value={row.mobile} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        title: () => 'Joined',\n        value: (row, { focus }) => {\n          return ( <Input value={row.joined} focus={focus} /> )\n        },\n        width:10,\n      }\n      , {\n        title: () => 'Clouds',\n        value: (row, { focus }) => {\n          return ( <Input value={row.joined} focus={focus} /> )\n        },\n        width:10,\n      }\n    ]\n  )\n}\n//---------------------------------------------------------------\n\nrenderCloudPeople = () =>{\n  \n  if(this.state.people){\n    if(!this.state.columns) this.state.columns = this.initColumns()\n    \n    return ( \n      <div className='admin-column user-column'>\n        <h1 className='floatLeft'>People</h1>\n        <input className='searchBox' onChange={this.handlePeopleSearch}/>\n        <div className='floatLeft'>\n          <Grid \n            rows={this.state.people}\n            columns = {this.state.columns}\n            getRowKey={row => row.userid}\n            isColumnsResizable\n            onColumnResize = {this.onColumnResize}\n          />\n        </div>\n      </div>\n    )\n  }else{\n    return null\n  }\n  \n\n}\n\n//---------------------------------------------------------------\n\n}\nexport default Admin"]},"metadata":{},"sourceType":"module"}