{"ast":null,"code":"var _jsxFileName = \"/Users/muhammad/Documents/projects/upwork/ben/memriio_web/src/components/navigation/navigation.js\";\nimport React from \"react\";\nimport logo from \"./memrii_logo.png\";\nimport * as DropSearch from \"../dropsearch/dropsearch\";\nimport * as mem from \"../memriioserver\";\nimport * as ur from \"../userrolls\";\nimport NewMemoryModal from \"../memorymodal/newmemorymodal\";\nimport \"./navigation.css\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchwords: \"\",\n      userClouds: null,\n      selectedClouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false,\n      showNewPostModal: false\n    };\n\n    this.handleSignOut = () => {\n      this.state = {\n        searchwords: \"\",\n        userClouds: null,\n        selectedClouds: null,\n        showPersonalMemoryOptions: false,\n        personalMemoryunsharedOnly: false\n      };\n      console.log(\"handleSignout.userClouds \", this.state);\n      this.props.setCloudsLoaded(false);\n      this.props.onRouteChange(\"signin\");\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"NAV.mount\");\n      console.log(\"\");\n    };\n\n    this.componentDidUpdate = () => {\n      console.log(\"NAV.update : \", this.props.user);\n      console.log(\"\");\n    };\n\n    this.onSearchBoxChange = event => {\n      let text = event.target.value.toLowerCase();\n      let tmparray = [];\n      console.log(\"navigation-onSearchBoxChange : \" + text.split(\" \"));\n\n      if (event.target.value !== \"\") {\n        tmparray = text.split(\" \");\n      }\n\n      this.setState({\n        searchwords: tmparray\n      }, this.showMemories);\n    };\n\n    this.handleChangeSearchClouds = (clouds, userid) => {\n      let cloudstring = \"\";\n      clouds.map(cloud => {\n        cloudstring += cloud.value + \",\";\n      });\n\n      if (cloudstring) {\n        cloudstring = cloudstring.slice(0, cloudstring.length - 1);\n      }\n\n      mem.updatedUserClouds(userid, cloudstring);\n      this.setState({\n        selectedClouds: clouds\n      }, this.showMemories);\n    };\n\n    this.showMemories = () => {\n      let selected = this.state.selectedClouds;\n      let searchwords = this.state.searchwords;\n      let cloudids = [];\n      if (selected) cloudids = selected.map(cloud => {\n        return parseInt(cloud.value);\n      });\n      console.log(\"showMemories \", cloudids);\n\n      if (cloudids.length === 0) {\n        console.log(\"showMemories calling loadMemories(null)\");\n        this.props.loadMemories(null);\n      } else if (selected.length === 1 && selected[0].value === 0) {\n        // personal only\n        console.log(\"personal only \" + selected[0].value);\n\n        if (this.state.personalMemoryunsharedOnly) {\n          // personal only - unshared only\n          console.log(\"personal : unshared \" + this.props.userid + \" \" + searchwords);\n          mem.getMemories_PersonalOnly_Unshared(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // personal only - bth shared and undshared\n          console.log(\"personal : all \" + this.props.userid + \" \" + searchwords);\n          mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else if (cloudids.includes(0)) {\n        // personal cloud + other clouds\n        console.log(\"personal cloud + other clouds  : cloudids \" + cloudids);\n\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log(\"personal cloud + other clouds with searchwords \" + this.props.userid + \" \" + searchwords + \" \" + cloudids);\n          mem.getMemories_User_Words_Clouds(this.props.userid, searchwords, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log(\"personal cloud + other clouds no searchwords \" + this.props.userid + \" : \" + cloudids);\n          mem.getMemories_User_Clouds(this.props.userid, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else {\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log(\"other clouds only with searchwords : \" + searchwords + \" cloudids : \" + cloudids);\n          mem.getMemories_Words_Clouds(cloudids, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log(\"other clouds only no searchwords : cloud ids\" + cloudids);\n          mem.getMemories_Clouds(cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      }\n    };\n\n    this.loadUserClouds = userid => {\n      let temp = [];\n      console.log(\"loadUserClouds \", userid);\n      if (userid) mem.getUserClouds(userid, clouds => {\n        clouds.push({\n          id: 0,\n          name: \"Personal\"\n        });\n        clouds.reverse();\n        clouds.map(cloud => {\n          if (this.props.startingClouds.includes(parseInt(cloud.id))) temp.push({\n            value: cloud.id,\n            name: cloud.name\n          });\n        });\n        this.setState({\n          userClouds: clouds,\n          selectedClouds: temp\n        }, () => {\n          this.props.setCloudsLoaded(true);\n          this.showMemories();\n        });\n      });\n    };\n\n    this.handleAdminClick = () => {\n      this.props.onRouteChange(\"admin\");\n    };\n\n    this.handleRunTest = () => {\n      console.log(\"this does nothing anymore\");\n    };\n\n    this.handleShowNewMemory = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleUploadInProgress = () => {\n      console.log(\"hide newmemory modal\");\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleNewPost = memory => {\n      this.props.onNewMemory(memory);\n    };\n\n    this.handleCancelNewPost = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.renderStandardNav = () => {\n      const {\n        onRouteChange,\n        userid\n      } = this.props;\n      let cloudbox = null;\n      let adminButton = null;\n      let selected = this.state.selectedClouds;\n\n      if (ur.showAdminOnNavBar(userid)) {\n        adminButton = /*#__PURE__*/React.createElement(\"li\", {\n          className: \"stdListItem\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"linkText\",\n          onClick: this.handleAdminClick,\n          href: \"#admin\",\n          title: \"Administration\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }\n        }, \"Admin\"));\n      }\n\n      console.log(\"renderStandardNav.userClouds \", this.state.userClouds);\n\n      if (this.props.cloudsLoaded) {\n        cloudbox = DropSearch.cloudDropSearch(null, this.state.userClouds, selected, true, false, this.handleChangeSearchClouds, userid);\n      } else {\n        this.loadUserClouds(userid);\n      }\n\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.onSearchBoxChange,\n        className: \"searchBox\",\n        type: \"text\",\n        \"aria-describedby\": \"name-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }\n      }, cloudbox))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleShowNewMemory,\n        href: \"#newpost\",\n        title: \"New\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }\n      }, \"New\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleAdminClick,\n        href: \"#admin\",\n        title: \"Administration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }\n      }, \"Admin\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleSignOut,\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        href: \"#\",\n        title: \"Log Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }\n      }, \"Sign Out\"))))), /*#__PURE__*/React.createElement(NewMemoryModal, {\n        key: \"memmodal\" + 42,\n        userid: this.props.userid,\n        userClouds: this.state.userClouds,\n        show: this.state.showNewPostModal,\n        onCancelNewMemory: this.handleCancelNewPost,\n        onAddNewMemory: this.handleNewPost,\n        onUploading: this.handleUploadInProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.renderSignInNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"signin\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Log \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, \"Sign In\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    this.renderAdminNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"home\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Home \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }\n      }, \"Home\")));\n    };\n  }\n\n  //---------------------------------------------------------------------------------\n  render() {\n    const {\n      userSignedin,\n      currentRoute\n    } = this.props;\n    console.log(\"Nav.render \", this.state.userClouds);\n\n    if (userSignedin()) {\n      if (currentRoute === \"home\") {\n        return this.renderStandardNav();\n      } else if (currentRoute === \"displayMemory\") {\n        return null;\n      } else if (currentRoute === \"admin\") {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  } //---------------------------------------------------------------------------------\n  //---------------------------------------------------------------------------------\n\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/muhammad/Documents/projects/upwork/ben/memriio_web/src/components/navigation/navigation.js"],"names":["React","logo","DropSearch","mem","ur","NewMemoryModal","Navigation","Component","constructor","props","state","searchwords","userClouds","selectedClouds","showPersonalMemoryOptions","personalMemoryunsharedOnly","showNewPostModal","handleSignOut","console","log","setCloudsLoaded","onRouteChange","componentDidMount","componentDidUpdate","user","onSearchBoxChange","event","text","target","value","toLowerCase","tmparray","split","setState","showMemories","handleChangeSearchClouds","clouds","userid","cloudstring","map","cloud","slice","length","updatedUserClouds","selected","cloudids","parseInt","loadMemories","getMemories_PersonalOnly_Unshared","then","memories","error","getMemories_PersonalOnly_All","includes","getMemories_User_Words_Clouds","getMemories_User_Clouds","getMemories_Words_Clouds","getMemories_Clouds","loadUserClouds","temp","getUserClouds","push","id","name","reverse","startingClouds","handleAdminClick","handleRunTest","handleShowNewMemory","handleUploadInProgress","handleNewPost","memory","onNewMemory","handleCancelNewPost","renderStandardNav","cloudbox","adminButton","showAdminOnNavBar","cloudsLoaded","cloudDropSearch","renderSignInNav","renderAdminNav","render","userSignedin","currentRoute"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from \"./memrii_logo.png\";\nimport * as DropSearch from \"../dropsearch/dropsearch\";\nimport * as mem from \"../memriioserver\";\nimport * as ur from \"../userrolls\";\nimport NewMemoryModal from \"../memorymodal/newmemorymodal\";\nimport \"./navigation.css\";\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    searchwords: \"\",\n    userClouds: null,\n    selectedClouds: null,\n    showPersonalMemoryOptions: false,\n    personalMemoryunsharedOnly: false,\n    showNewPostModal: false,\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleSignOut = () => {\n    this.state = {\n      searchwords: \"\",\n      userClouds: null,\n      selectedClouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false,\n    };\n    console.log(\"handleSignout.userClouds \", this.state);\n    this.props.setCloudsLoaded(false);\n    this.props.onRouteChange(\"signin\");\n  };\n\n  //---------------------------------------------------------------------------------\n\n  componentDidMount = () => {\n    console.log(\"NAV.mount\");\n    console.log(\"\");\n  };\n\n  componentDidUpdate = () => {\n    console.log(\"NAV.update : \", this.props.user);\n    console.log(\"\");\n  };\n\n  //---------------------------------------------------------------------------------\n\n  onSearchBoxChange = (event) => {\n    let text = event.target.value.toLowerCase();\n    let tmparray = [];\n\n    console.log(\"navigation-onSearchBoxChange : \" + text.split(\" \"));\n\n    if (event.target.value !== \"\") {\n      tmparray = text.split(\" \");\n    }\n    this.setState({ searchwords: tmparray }, this.showMemories);\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleChangeSearchClouds = (clouds, userid) => {\n    let cloudstring = \"\";\n    clouds.map((cloud) => {\n      cloudstring += cloud.value + \",\";\n    });\n    if (cloudstring) {\n      cloudstring = cloudstring.slice(0, cloudstring.length - 1);\n    }\n\n    mem.updatedUserClouds(userid, cloudstring);\n\n    this.setState({ selectedClouds: clouds }, this.showMemories);\n  };\n\n  //---------------------------------------------------------------------------------\n\n  showMemories = () => {\n    let selected = this.state.selectedClouds;\n    let searchwords = this.state.searchwords;\n    let cloudids = [];\n\n    if (selected)\n      cloudids = selected.map((cloud) => {\n        return parseInt(cloud.value);\n      });\n    console.log(\"showMemories \", cloudids);\n\n    if (cloudids.length === 0) {\n      console.log(\"showMemories calling loadMemories(null)\");\n      this.props.loadMemories(null);\n    } else if (selected.length === 1 && selected[0].value === 0) {\n      // personal only\n      console.log(\"personal only \" + selected[0].value);\n      if (this.state.personalMemoryunsharedOnly) {\n        // personal only - unshared only\n\n        console.log(\n          \"personal : unshared \" + this.props.userid + \" \" + searchwords\n        );\n        mem\n          .getMemories_PersonalOnly_Unshared(this.props.userid, searchwords)\n          .then(\n            (memories) => {\n              this.props.loadMemories(memories);\n            },\n            (error) => {\n              this.props.loadMemories(null);\n            }\n          );\n      } else {\n        // personal only - bth shared and undshared\n\n        console.log(\"personal : all \" + this.props.userid + \" \" + searchwords);\n        mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      }\n    } else if (cloudids.includes(0)) {\n      // personal cloud + other clouds\n      console.log(\"personal cloud + other clouds  : cloudids \" + cloudids);\n\n      if (searchwords.length > 0) {\n        // clouds + searchwords\n\n        console.log(\n          \"personal cloud + other clouds with searchwords \" +\n            this.props.userid +\n            \" \" +\n            searchwords +\n            \" \" +\n            cloudids\n        );\n        mem\n          .getMemories_User_Words_Clouds(\n            this.props.userid,\n            searchwords,\n            cloudids\n          )\n          .then(\n            (memories) => {\n              this.props.loadMemories(memories);\n            },\n            (error) => {\n              this.props.loadMemories(null);\n            }\n          );\n      } else {\n        // clouds but no search words\n\n        console.log(\n          \"personal cloud + other clouds no searchwords \" +\n            this.props.userid +\n            \" : \" +\n            cloudids\n        );\n        mem.getMemories_User_Clouds(this.props.userid, cloudids).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      }\n    } else {\n      if (searchwords.length > 0) {\n        // clouds + searchwords\n\n        console.log(\n          \"other clouds only with searchwords : \" +\n            searchwords +\n            \" cloudids : \" +\n            cloudids\n        );\n        mem.getMemories_Words_Clouds(cloudids, searchwords).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      } else {\n        // clouds but no search words\n\n        console.log(\"other clouds only no searchwords : cloud ids\" + cloudids);\n        mem.getMemories_Clouds(cloudids).then(\n          (memories) => {\n            this.props.loadMemories(memories);\n          },\n          (error) => {\n            this.props.loadMemories(null);\n          }\n        );\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------------------\n\n  render() {\n    const { userSignedin, currentRoute } = this.props;\n    console.log(\"Nav.render \", this.state.userClouds);\n    if (userSignedin()) {\n      if (currentRoute === \"home\") {\n        return this.renderStandardNav();\n      } else if (currentRoute === \"displayMemory\") {\n        return null;\n      } else if (currentRoute === \"admin\") {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  }\n\n  //---------------------------------------------------------------------------------\n\n  loadUserClouds = (userid) => {\n    let temp = [];\n    console.log(\"loadUserClouds \", userid);\n    if (userid)\n      mem.getUserClouds(userid, (clouds) => {\n        clouds.push({\n          id: 0,\n          name: \"Personal\",\n        });\n        clouds.reverse();\n        clouds.map((cloud) => {\n          if (this.props.startingClouds.includes(parseInt(cloud.id)))\n            temp.push({ value: cloud.id, name: cloud.name });\n        });\n\n        this.setState({ userClouds: clouds, selectedClouds: temp }, () => {\n          this.props.setCloudsLoaded(true);\n          this.showMemories();\n        });\n      });\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleAdminClick = () => {\n    this.props.onRouteChange(\"admin\");\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleRunTest = () => {\n    console.log(\"this does nothing anymore\");\n  };\n  //-------------------------------------------------------------------------------\n\n  handleShowNewMemory = () => {\n    this.setState({ showNewPostModal: !this.state.showNewPostModal });\n  };\n\n  //-------------------------------------------------------------------------------\n\n  handleUploadInProgress = () => {\n    console.log(\"hide newmemory modal\");\n    this.setState({ showNewPostModal: !this.state.showNewPostModal });\n  };\n  //-------------------------------------------------------------------------------\n\n  handleNewPost = (memory) => {\n    this.props.onNewMemory(memory);\n  };\n\n  //---------------------------------------------------------------------------------\n\n  handleCancelNewPost = () => {\n    this.setState({ showNewPostModal: !this.state.showNewPostModal });\n  };\n\n  //---------------------------------------------------------------------------------\n\n  renderStandardNav = () => {\n    const { onRouteChange, userid } = this.props;\n    let cloudbox = null;\n    let adminButton = null;\n    let selected = this.state.selectedClouds;\n\n    if (ur.showAdminOnNavBar(userid)) {\n      adminButton = (\n        <li className=\"stdListItem\">\n          <a\n            className=\"linkText\"\n            onClick={this.handleAdminClick}\n            href=\"#admin\"\n            title=\"Administration\"\n          >\n            Admin\n          </a>\n        </li>\n      );\n    }\n    console.log(\"renderStandardNav.userClouds \", this.state.userClouds);\n    if (this.props.cloudsLoaded) {\n      cloudbox = DropSearch.cloudDropSearch(\n        null,\n        this.state.userClouds,\n        selected,\n        true,\n        false,\n        this.handleChangeSearchClouds,\n        userid\n      );\n    } else {\n      this.loadUserClouds(userid);\n    }\n\n    return (\n      <nav>\n        <div className=\"container\">\n          <div className=\"left\">\n            <ul>\n              <li className=\"floatLeft\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n              </li>\n            </ul>\n          </div>\n          <div className=\"center\">\n            <ul>\n              <li className=\"floatRight width50\">\n                <input\n                  onChange={this.onSearchBoxChange}\n                  className=\"searchBox\"\n                  type=\"text\"\n                  aria-describedby=\"name-desc\"\n                ></input>\n              </li>\n\n              <li className=\"floatRight width50\">{cloudbox}</li>\n            </ul>\n          </div>\n          <div className=\"right\">\n            <ul>\n              <li className=\"floatRight\">\n                <a\n                  className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\"\n                  onClick={this.handleShowNewMemory}\n                  href=\"#newpost\"\n                  title=\"New\"\n                >\n                  New\n                </a>\n              </li>\n              <li className=\"floatRight\">\n                <a\n                  className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\"\n                  onClick={this.handleAdminClick}\n                  href=\"#admin\"\n                  title=\"Administration\"\n                >\n                  Admin\n                </a>\n              </li>\n              <li className=\"floatRight\">\n                <a\n                  onClick={this.handleSignOut}\n                  className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\"\n                  href=\"#\"\n                  title=\"Log Out\"\n                >\n                  Sign Out\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <NewMemoryModal\n          key={\"memmodal\" + 42}\n          userid={this.props.userid}\n          userClouds={this.state.userClouds}\n          show={this.state.showNewPostModal}\n          onCancelNewMemory={this.handleCancelNewPost}\n          onAddNewMemory={this.handleNewPost}\n          onUploading={this.handleUploadInProgress}\n        ></NewMemoryModal>\n      </nav>\n    );\n  };\n\n  //---------------------------------------------------------------------------------\n\n  renderSignInNav = () => {\n    const onRouteChange = this.props.onRouteChange;\n    return (\n      <nav className=\"navBar\">\n        <ul>\n          <li className=\"floatRight\">\n            <a\n              onClick={() => onRouteChange(\"signin\")}\n              className=\"link dim dark-gray f6 f4-ns dib\"\n              href=\"#\"\n              title=\"Log \"\n            >\n              Sign In\n            </a>\n          </li>\n\n          <li className=\"floatLeft\">\n            <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n          </li>\n        </ul>\n      </nav>\n    );\n  };\n\n  //---------------------------------------------------------------------------------\n\n  renderAdminNav = () => {\n    const onRouteChange = this.props.onRouteChange;\n    return (\n      <nav className=\"navBar \">\n        <div className=\"logocell\" href=\"#\" title=\"Home\">\n          <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n        </div>\n        <div className=\"dtc v-mid w-75 tr\">\n          <a\n            onClick={() => onRouteChange(\"home\")}\n            className=\"link dim dark-gray f6 f4-ns dib\"\n            href=\"#\"\n            title=\"Home \"\n          >\n            Home\n          </a>\n        </div>\n      </nav>\n    );\n  };\n\n  //---------------------------------------------------------------------------------\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}