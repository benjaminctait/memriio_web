{"ast":null,"code":"import React from 'react'; // imageData\n//      imageID\n//      remoteURL\n//      ishero\n//      \n//--Returns and array of of images and related meta data from the server-----------------------------------------------\n\nexport function getAllMemoryFiles(memoryid, callback) {\n  console.log('Memriio.getAllImages : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('server response : ' + res.success);\n      console.log('server data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getTaggedPeople(memoryid, callback) {\n  console.log('Memriio.getTaggedPeople : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_associatedpeople_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('server response : ' + res.success);\n      console.log('server data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateHeroImage(memoryid, heroImageid) {\n  console.log('Memriio.getAllImages : memoryid ' + memoryid);\n} //------------------------------------------------------------\n\nexport function updateTitle(memoryid, newTitle) {\n  console.log('Memriio.updateTitle : memoryid ' + memoryid + ' title : ' + newTitle);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_title', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newTitle: newTitle\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateTitle : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateTitle : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateDescription(memoryid, newDescription) {\n  console.log('Memriio.updateDescription : memoryid ' + memoryid + ' description : ' + newDescription);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_description', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newDescription: newDescription\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateDescription : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateDescription : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateStory(memoryid, newStory) {\n  let len = 0;\n\n  if (newStory) {\n    len = newStory.length;\n  }\n\n  console.log('Memriio.updateStory : memoryid ' + memoryid + ' story.length : ' + len + ' chars');\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_story', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newStory: newStory\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateStory : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateStory : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateTaggedPeople(memoryid, taggedPeople) {} //------------------------------------------------------------\n\nexport function updateLocation(memoryid, newLocation) {\n  console.log('Memriio.updateLocation : memoryid ' + memoryid + ' location : ' + newLocation);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_location', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newLocation: newLocation\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateLocation :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateLocation :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memriioserver.js"],"names":["React","getAllMemoryFiles","memoryid","callback","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","res","success","data","error","getTaggedPeople","updateHeroImage","heroImageid","updateTitle","newTitle","updateDescription","newDescription","updateStory","newStory","len","length","updateTaggedPeople","taggedPeople","updateLocation","newLocation"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n\n// imageData\n//      imageID\n//      remoteURL\n//      ishero\n//      \n\n\n\n\n//--Returns and array of of images and related meta data from the server-----------------------------------------------\n\nexport function getAllMemoryFiles  (memoryid,callback) {\n    console.log('Memriio.getAllImages : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('server response : ' + res.success);\n                        console.log('server data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getTaggedPeople  (memoryid,callback) {\n    console.log('Memriio.getTaggedPeople : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_associatedpeople_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('server response : ' + res.success);\n                        console.log('server data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//------------------------------------------------------------\n\nexport function updateHeroImage (memoryid,heroImageid ){\n    console.log('Memriio.getAllImages : memoryid ' + memoryid )\n\n}\n\n//------------------------------------------------------------\n\nexport function updateTitle (memoryid,newTitle){\n    console.log('Memriio.updateTitle : memoryid ' + memoryid + ' title : ' + newTitle)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_title', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newTitle:newTitle})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateTitle : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateTitle : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n//------------------------------------------------------------\n\nexport function updateDescription (memoryid,newDescription){\n    console.log('Memriio.updateDescription : memoryid ' + memoryid + ' description : ' + newDescription)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_description', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newDescription:newDescription})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateDescription : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateDescription : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n\n//------------------------------------------------------------\n\nexport function updateStory (memoryid,newStory){\n    let len = 0\n    if(newStory){len = newStory.length}\n    console.log('Memriio.updateStory : memoryid ' + memoryid + ' story.length : ' + len + ' chars')\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_story', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newStory:newStory})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateStory : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateStory : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n\n}\n\n//------------------------------------------------------------\n\nexport function updateTaggedPeople (memoryid,taggedPeople){\n\n}\n\n\n//------------------------------------------------------------\n\nexport function updateLocation (memoryid,newLocation){\n    console.log('Memriio.updateLocation : memoryid ' + memoryid + ' location : ' + newLocation)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_location', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newLocation:newLocation})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateLocation :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateLocation :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}