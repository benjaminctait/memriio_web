{"ast":null,"code":"import React from 'react';\nconst memory = {\n  title: '',\n  // short title of the memory : string\n  story: '',\n  // text desciribing the memory : string\n  files: [],\n  // an array of local file paths : [ string ]\n  people: [],\n  // an array of userids : [ int ]\n  location: '',\n  // name of the location : string\n  groups: [],\n  // array of group IDs : [ int ]\n  remoteURLS: [],\n  // array of remote url S3 paths : [ string ]\n  userid: 0,\n  // id of the current user : int\n  MemoryID: 0,\n  // id of the newly created memory : int\n  errorLog: [] // array or error messages : [ string ]\n\n}; // imageData\n//      imageID\n//      remoteURL\n//      ishero\n//      \n\nconst Memriio = {\n  //--Returns and array of of images and related meta data from the server-----------------------------------------------\n  getAllMemoryFiles: function (memoryid) {\n    console.log('Memriio.getAllImages : memoryid ' + memoryid);\n    return new Promise((resolve, reject) => {\n      fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          memoryid: memoryid\n        })\n      }).then(response => {\n        response.json();\n        console.log('Memriio.getAllImages : after fetch  : ' + JSON.stringify(response));\n      }).then(res => {\n        if (res.status === 200) {\n          console.log('Memriio.getAllImages : before resolve : ' + JSON.stringify(res));\n          resolve(res.data);\n        } else {\n          reject(null);\n        }\n      });\n    });\n  },\n  //------------------------------------------------------------\n  setHeroImage: function (memoryid, heroImageid) {},\n  //------------------------------------------------------------\n  setTitle: function (memoryid, newTitle) {},\n  //------------------------------------------------------------\n  setDescription: function (memoryid, newDescription) {},\n  //------------------------------------------------------------\n  setStory: function (memoryid, newStory) {},\n  //------------------------------------------------------------\n  setTaggedPeople: function (memoryid, taggedPeople) {},\n  //------------------------------------------------------------\n  setLocation: function (memoryid, location) {}\n};\nexport default Memriio;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memriioserver.js"],"names":["React","memory","title","story","files","people","location","groups","remoteURLS","userid","MemoryID","errorLog","Memriio","getAllMemoryFiles","memoryid","console","log","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","res","status","data","setHeroImage","heroImageid","setTitle","newTitle","setDescription","newDescription","setStory","newStory","setTaggedPeople","taggedPeople","setLocation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAC,EADK;AACK;AAChBC,EAAAA,KAAK,EAAC,EAFK;AAEK;AAChBC,EAAAA,KAAK,EAAC,EAHK;AAGK;AAChBC,EAAAA,MAAM,EAAC,EAJI;AAIK;AAChBC,EAAAA,QAAQ,EAAC,EALE;AAKK;AAChBC,EAAAA,MAAM,EAAC,EANI;AAMK;AAChBC,EAAAA,UAAU,EAAC,EAPA;AAOK;AAChBC,EAAAA,MAAM,EAAC,CARI;AAQK;AAChBC,EAAAA,QAAQ,EAAC,CATE;AASK;AAChBC,EAAAA,QAAQ,EAAC,EAVE,CAUK;;AAVL,CAAf,C,CAcA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,OAAO,GAAG;AAEZ;AAEAC,EAAAA,iBAAiB,EAAE,UAASC,QAAT,EAAkB;AAEjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCF,QAAjD;AACA,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AAEnCC,MAAAA,KAAK,CAAC,2DAAD,EAA8D;AAC/DC,QAAAA,MAAM,EAAE,MADuD;AAChDC,QAAAA,OAAO,EAAE;AACpB,0BAAe;AADK,SADuC;AAGvDC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACX,UAAAA,QAAQ,EAACA;AAAV,SAAf;AAHkD,OAA9D,CAAL,CAIaY,IAJb,CAIkBC,QAAQ,IAAI;AACdA,QAAAA,QAAQ,CAACC,IAAT;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CQ,IAAI,CAACC,SAAL,CAAeE,QAAf,CAAvD;AACH,OAPb,EAQaD,IARb,CAQkBG,GAAG,IAAI;AACT,YAAKA,GAAG,CAACC,MAAJ,KAAe,GAApB,EAAwB;AACpBf,UAAAA,OAAO,CAACC,GAAR,CAAY,6CAA6CQ,IAAI,CAACC,SAAL,CAAeI,GAAf,CAAzD;AAEAX,UAAAA,OAAO,CAACW,GAAG,CAACE,IAAL,CAAP;AAEH,SALD,MAKK;AACDZ,UAAAA,MAAM,CAAC,IAAD,CAAN;AACH;AACJ,OAjBb;AAkBH,KApBM,CAAP;AAuBH,GA9BW;AAgCZ;AAEAa,EAAAA,YAAY,EAAE,UAASlB,QAAT,EAAkBmB,WAAlB,EAA+B,CAG5C,CArCW;AAuCZ;AAEAC,EAAAA,QAAQ,EAAC,UAASpB,QAAT,EAAkBqB,QAAlB,EAA2B,CAGnC,CA5CW;AA6CZ;AAEAC,EAAAA,cAAc,EAAC,UAAStB,QAAT,EAAkBuB,cAAlB,EAAiC,CAG/C,CAlDW;AAoDZ;AAEAC,EAAAA,QAAQ,EAAC,UAASxB,QAAT,EAAkByB,QAAlB,EAA2B,CAGnC,CAzDW;AA2DZ;AAEAC,EAAAA,eAAe,EAAC,UAAU1B,QAAV,EAAmB2B,YAAnB,EAAgC,CAE/C,CA/DW;AAkEZ;AAEAC,EAAAA,WAAW,EAAE,UAAS5B,QAAT,EAAkBR,QAAlB,EAA2B,CAEvC;AAtEW,CAAhB;AA4EA,eAAeM,OAAf","sourcesContent":["import React from 'react';\n\n\nconst memory = {\n    title:'',       // short title of the memory : string\n    story:'',       // text desciribing the memory : string\n    files:[],       // an array of local file paths : [ string ]\n    people:[],      // an array of userids : [ int ]\n    location:'',    // name of the location : string\n    groups:[],      // array of group IDs : [ int ]\n    remoteURLS:[],  // array of remote url S3 paths : [ string ]\n    userid:0,       // id of the current user : int\n    MemoryID:0,     // id of the newly created memory : int\n    errorLog:[],    // array or error messages : [ string ]\n   \n}\n\n// imageData\n//      imageID\n//      remoteURL\n//      ishero\n//      \n\n\nconst Memriio = {\n\n    //--Returns and array of of images and related meta data from the server-----------------------------------------------\n\n    getAllMemoryFiles: function(memoryid){\n\n        console.log('Memriio.getAllImages : memoryid ' + memoryid )\n        return new Promise((resolve,reject) => {\n        \n            fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n                method: 'post',headers: {\n                    'Content-Type':'application/json'},\n                        body:JSON.stringify({memoryid:memoryid})})\n                        .then(response => {\n                            response.json()\n                            console.log('Memriio.getAllImages : after fetch  : ' + JSON.stringify(response))\n                        })\n                        .then(res => {\n                            if ( res.status === 200){\n                                console.log('Memriio.getAllImages : before resolve : ' + JSON.stringify(res));\n                                \n                                resolve(res.data) \n\n                            }else{\n                                reject(null) \n                            }\n                        })\n        })\n\n\n    },\n\n    //------------------------------------------------------------\n\n    setHeroImage: function(memoryid,heroImageid ){\n\n\n    },\n    \n    //------------------------------------------------------------\n\n    setTitle:function(memoryid,newTitle){\n\n\n    },\n    //------------------------------------------------------------\n\n    setDescription:function(memoryid,newDescription){\n\n\n    },\n\n    //------------------------------------------------------------\n\n    setStory:function(memoryid,newStory){\n\n\n    },\n    \n    //------------------------------------------------------------\n\n    setTaggedPeople:function (memoryid,taggedPeople){\n\n    },\n    \n\n    //------------------------------------------------------------\n\n    setLocation: function(memoryid,location){\n\n    },\n    \n\n}\n\n\nexport default Memriio\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}