{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport NewPost from './components/newpost/newpost.js'; //import MemoryEditor from './components/memoryeditor/memoryeditor.js';\n\nimport './App.css';\nimport MemoryEditor from './components/memoryeditor/memoryeditor.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.userSignedin = () => {\n      return this.state.isSignedIn;\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email,\n          joined: data.joined\n        }\n      });\n      fetch('https://memriio-api-0.herokuapp.com/get_memories_userid', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid: data.id\n        })\n      }).then(response => response.json()).then(memories => {\n        if (memories) this.loadMemories(memories);\n      });\n    };\n\n    this.loadMemories = memories => {\n      console.log('loadMemories : memory count : ' + memories.length);\n      this.setState({\n        searchResult: {\n          memories: memories\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n    };\n\n    this.displayMemory = memory => {\n      this.focusedMemory = memory;\n      this.onRouteChange('displayMemory');\n    };\n\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n      focusedMemory: null,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        joined: ''\n      },\n      searchResult: {\n        memories: []\n      }\n    };\n  } //---------------------------------------------------------------------------------\n\n\n  //---------------------------------------------------------------------------------\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      userSignedin: this.userSignedin,\n      loadMemories: this.loadMemories,\n      user: this.state.user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(CardCollection, {\n      memories: this.state.searchResult.memories,\n      userid: this.state.user.id,\n      onExpandClick: this.displayMemory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }\n    }) : this.state.route === 'newpost' ? /*#__PURE__*/React.createElement(NewPost, {\n      userid: this.state.user.id,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }\n    }) : this.state.route === 'displayMemory' ? /*#__PURE__*/React.createElement(MemoryEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/App.js"],"names":["React","Navigation","CardCollection","Signin","Register","NewPost","MemoryEditor","App","Component","constructor","userSignedin","state","isSignedIn","loadUser","data","setState","user","id","firstname","lastname","email","joined","fetch","method","headers","body","JSON","stringify","userid","then","response","json","memories","loadMemories","console","log","length","searchResult","onRouteChange","route","displayMemory","memory","focusedMemory","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,OAAP,MAAoB,iCAApB,C,CACA;;AAEA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAIA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAqBbC,YArBa,GAqBE,MAAM;AACnB,aAAO,KAAKC,KAAL,CAAWC,UAAlB;AACD,KAvBY;;AAAA,SA2BbC,QA3Ba,GA2BDC,IAAD,IAAU;AAEnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AACNC,UAAAA,EAAE,EAAEH,IAAI,CAACG,EADH;AAENC,UAAAA,SAAS,EAAEJ,IAAI,CAACI,SAFV;AAGNC,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAHT;AAINC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAJN;AAKNC,UAAAA,MAAM,EAAEP,IAAI,CAACO;AALP;AADM,OAAd;AAWAC,MAAAA,KAAK,CAAC,yDAAD,EAA4D;AAC/DC,QAAAA,MAAM,EAAE,MADuD;AAE/DC,QAAAA,OAAO,EAAE;AAAC,0BAAe;AAAhB,SAFsD;AAG/DC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,UAAAA,MAAM,EAACd,IAAI,CAACG;AADI,SAAf;AAH0D,OAA5D,CAAL,CAOOY,IAPP,CAOYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPxB,EAQOF,IARP,CAQYG,QAAQ,IAAE;AACZ,YAAGA,QAAH,EAAa,KAAKC,YAAL,CAAkBD,QAAlB;AAChB,OAVP;AAWD,KAnDY;;AAAA,SAuDbC,YAvDa,GAuDED,QAAD,IAAc;AAC1BE,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCH,QAAQ,CAACI,MAAxD;AAGA,WAAKrB,QAAL,CAAc;AAACsB,QAAAA,YAAY,EAAC;AAACL,UAAAA,QAAQ,EAAGA;AAAZ;AAAd,OAAd;AAED,KA7DY;;AAAA,SAiEbM,aAjEa,GAiEIC,KAAD,IAAU;AACxB,WAAKxB,QAAL,CAAc;AAACwB,QAAAA,KAAK,EAAEA;AAAR,OAAd;;AAEA,UAAGA,KAAK,KAAK,SAAb,EAAuB;AACrB,aAAKxB,QAAL,CAAc;AAACH,UAAAA,UAAU,EAAG;AAAd,SAAd;AACD,OAFD,MAEM,IAAI2B,KAAK,KAAK,MAAd,EAAqB;AACzB,aAAKxB,QAAL,CAAc;AAACH,UAAAA,UAAU,EAAE;AAAb,SAAd;AAED;AAEF,KA3EY;;AAAA,SA+Ef4B,aA/Ee,GA+EEC,MAAD,IAAY;AAE1B,WAAKC,aAAL,GAAqBD,MAArB;AACA,WAAKH,aAAL,CAAmB,eAAnB;AAED,KApFc;;AAGX,SAAK3B,KAAL,GAAY;AACV4B,MAAAA,KAAK,EAAE,QADG;AAEV3B,MAAAA,UAAU,EAAE,KAFF;AAGV8B,MAAAA,aAAa,EAAC,IAHJ;AAIV1B,MAAAA,IAAI,EAAC;AACHC,QAAAA,EAAE,EAAC,EADA;AAEH0B,QAAAA,IAAI,EAAC,EAFF;AAGHvB,QAAAA,KAAK,EAAC,EAHH;AAIHC,QAAAA,MAAM,EAAC;AAJJ,OAJK;AAUVgB,MAAAA,YAAY,EAAC;AACXL,QAAAA,QAAQ,EAAC;AADE;AAVH,KAAZ;AAcD,GAlB+B,CAoBlC;;;AAmEA;AAEEY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE,KAAKN,aADtB;AAEE,MAAA,YAAY,EAAE,KAAK5B,YAFrB;AAGE,MAAA,YAAY,EAAE,KAAKuB,YAHrB;AAIE,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWK,IAAX,CAAgBC,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOI,KAAKN,KAAL,CAAW4B,KAAX,KAAqB,MAArB,gBACE,oBAAC,cAAD;AACE,MAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAW0B,YAAX,CAAwBL,QADpC;AAEE,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWK,IAAX,CAAgBC,EAF1B;AAGE,MAAA,aAAa,EAAE,KAAKuB,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAMG,KAAK7B,KAAL,CAAW4B,KAAX,KAAqB,QAArB,gBACA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAK1B,QAAvB;AAAiC,MAAA,aAAa,EAAE,KAAKyB,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEC,KAAK3B,KAAL,CAAW4B,KAAX,KAAqB,SAAtB,gBACE,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWK,IAAX,CAAgBC,EAAjC;AAAqC,MAAA,aAAa,EAAE,KAAKqB,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEG,KAAK3B,KAAL,CAAW4B,KAAX,KAAqB,eAAtB,gBACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,gBAKA,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAK1B,QAAzB;AAAmC,MAAA,aAAa,EAAE,KAAKyB,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBT,CADF;AA+BD;;AAzH+B;;AA0HjC;AAED,eAAe/B,GAAf","sourcesContent":["import React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport NewPost from './components/newpost/newpost.js'\n//import MemoryEditor from './components/memoryeditor/memoryeditor.js';\n\nimport './App.css';\nimport MemoryEditor from './components/memoryeditor/memoryeditor.js';\n\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    \n    this.state ={\n      route: 'signin',\n      isSignedIn: false,\n      focusedMemory:null,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        joined:''\n      },\n      searchResult:{\n        memories:[]\n      }\n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n  userSignedin = () => {\n    return this.state.isSignedIn;\n  }\n\n//---------------------------------------------------------------------------------\n\n  loadUser = (data) => {\n    \n    this.setState({\n      user: {\n      id: data.id,\n      firstname: data.firstname,\n      lastname: data.lastname,\n      email: data.email,\n      joined: data.joined\n      }\n    })\n    \n\n    fetch('https://memriio-api-0.herokuapp.com/get_memories_userid', {\n      method: 'post',\n      headers: {'Content-Type':'application/json'},\n      body:JSON.stringify({\n          userid:data.id\n          })\n        })\n          .then(response => response.json())\n          .then(memories=>{\n              if(memories) this.loadMemories(memories)\n          })\n  } \n\n//---------------------------------------------------------------------------------\n\n  loadMemories =(memories) => {\n    console.log('loadMemories : memory count : ' + memories.length);\n    \n    \n    this.setState({searchResult:{memories : memories}})\n    \n  }\n\n//---------------------------------------------------------------------------------\n\n  onRouteChange = (route) =>{\n    this.setState({route: route})  \n\n    if(route === 'signout'){\n      this.setState({isSignedIn : false})\n    }else if (route === 'home'){\n      this.setState({isSignedIn: true})\n      \n    }\n    \n  }\n\n//---------------------------------------------------------------------------------\n\ndisplayMemory = (memory) => {\n\n  this.focusedMemory = memory;\n  this.onRouteChange('displayMemory')\n\n}\n\n//---------------------------------------------------------------------------------\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation \n          onRouteChange={this.onRouteChange} \n          userSignedin={this.userSignedin}\n          loadMemories={this.loadMemories} \n          user={this.state.user.id}/>\n        \n        { this.state.route === 'home' \n          ? <CardCollection \n              memories={this.state.searchResult.memories} \n              userid={this.state.user.id} \n              onExpandClick={this.displayMemory}\n            />\n          : (this.state.route === 'signin'\n            ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            :(this.state.route === 'newpost')\n              ?<NewPost userid={this.state.user.id} onRouteChange={this.onRouteChange} />\n              :(this.state.route === 'displayMemory')\n              ?<MemoryEditor \n\n              \n              />\n              :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              \n\n          )\n        }\n\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}