{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js\";\nimport React, { useState } from 'react';\nimport * as mem from '../memriioserver';\nimport './admin.css';\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png';\nimport tag from '../images/tag.png';\nimport cross from '../images/x-symbol.png';\nimport Modal from 'react-modal';\nimport { Grid, Input, Select } from 'react-spreadsheet-grid';\nimport { getShortDate } from '../memriioserver';\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clouds: [],\n      users: [],\n      personModalIsOpen: false,\n      columns: null\n    };\n\n    this.handleCloudSearch = e => {\n      console.log(e.target.value);\n    };\n\n    this.handleSelectCloud = cloud => {\n      console.log(cloud.name);\n      let clouds = [];\n      clouds.push(cloud);\n      mem.getCloudPeople(clouds, null).then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handleShowAUsers = () => {\n      console.log('show all users');\n      mem.getAllUsers().then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handlePeopleSearch = e => {};\n\n    this.handleAddPerson = () => {\n      this.setState({\n        personModalIsOpen: true\n      });\n    };\n\n    this.handleSelectPerson = Person => {};\n\n    this.renderCloudPeople = () => {\n      if (this.state.people) {\n        if (!this.state.columns) this.state.columns = this.initColumns();\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-zone \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"floatLeft headtext\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }\n        }, \"Users\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"searchHeader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"textBox\",\n          placeholder: \"..people search\",\n          onChange: this.handlePeopleSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"textBox\",\n          placeholder: \"..cloud filter\",\n          onChange: this.handleCloudSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          id: \"newuserbtn\",\n          className: \"newButton\",\n          onClick: this.handleAddPerson,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        }, \"New User\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"floatLeft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          rows: this.state.people,\n          columns: this.state.columns,\n          getRowKey: row => row.userid,\n          isColumnsResizable: true,\n          onColumnResize: this.onColumnResize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        })));\n      } else {\n        return null;\n      }\n    };\n\n    this.afterOpenModal = () => {};\n\n    this.closeModal = () => {\n      this.setState({\n        personModalIsOpen: false\n      });\n    };\n\n    this.onColumnResize = widthValues => {\n      const newColumns = [].concat(this.state.columns);\n      Object.keys(widthValues).forEach(columnId => {\n        const column = this.state.columns.find(({\n          id\n        }) => id === columnId);\n        column.width = widthValues[columnId];\n      });\n      this.setState({\n        columns: newColumns\n      });\n    };\n\n    this.initColumns = () => {\n      return [{\n        id: 'photo',\n        title: () => 'Photo',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: row.avatar,\n            alt: 'image',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 22\n            }\n          });\n        },\n        width: 5\n      }, {\n        id: 'userid',\n        title: () => 'Id',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.userid,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 3\n      }, {\n        id: 'firstname',\n        title: () => 'First Name',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.firstname,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        id: 'lastname',\n        title: () => 'Last Name',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.lastname,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        id: 'email',\n        title: () => 'email',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.email,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 15\n      }, {\n        id: 'username',\n        title: () => 'Username',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.email,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 15\n      }, {\n        id: 'mobile',\n        title: () => 'mobile',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.mobile,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        id: 'joined',\n        title: () => 'Joined',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: getShortDate(row.joined),\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 8\n      }, {\n        id: 'clouds',\n        title: () => 'Clouds',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: getShortDate(row.joined),\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 24\n      }];\n    };\n  }\n\n  //---------------------------------------------------------------\n  componentDidMount() {\n    console.log('Administration.componentDidMount ');\n    mem.getAllClouds().then(clouds => {\n      console.log('all clouds');\n      console.log(clouds);\n      this.setState({\n        clouds: clouds\n      });\n      this.handleShowAUsers();\n    });\n  } //---------------------------------------------------------------\n\n\n  //---------------------------------------------------------------\n  render() {\n    const cloudpeople = this.renderCloudPeople();\n    const addPersonModel = this.renderAddPersonModal();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"some-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, addPersonModel, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), cloudpeople);\n  } //---------------------------------------------------------------\n\n\n  renderAddPersonModal() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.personModalIsOpen,\n      onAfterOpen: this.afterOpenModal,\n      onRequestClose: this.closeModal,\n      className: \"modal\",\n      overlayClassName: \"backdropStyle\",\n      contentLabel: \"Example Modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headtext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, \"Add Person\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelpair\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labeltext\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.onNewUserFirstNameChange,\n      className: \"textBox\",\n      placeholder: \"First Name\",\n      id: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"newButton\",\n      onClick: this.closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, \"close\"));\n  } //---------------------------------------------------------------\n  //---------------------------------------------------------------\n\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js"],"names":["React","useState","mem","CloudLabel","cloudImage","tag","cross","Modal","Grid","Input","Select","getShortDate","Admin","Component","state","clouds","users","personModalIsOpen","columns","handleCloudSearch","e","console","log","target","value","handleSelectCloud","cloud","name","push","getCloudPeople","then","people","setState","handleShowAUsers","getAllUsers","handlePeopleSearch","handleAddPerson","handleSelectPerson","Person","renderCloudPeople","initColumns","row","userid","onColumnResize","afterOpenModal","closeModal","widthValues","newColumns","concat","Object","keys","forEach","columnId","column","find","id","width","title","focus","avatar","firstname","lastname","email","mobile","joined","componentDidMount","getAllClouds","render","cloudpeople","addPersonModel","renderAddPersonModal","onNewUserFirstNameChange"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport * as mem from '../memriioserver'\nimport './admin.css'\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png'\nimport tag from '../images/tag.png'\nimport cross from '../images/x-symbol.png'\nimport Modal from 'react-modal'\nimport {Grid,Input,Select} from 'react-spreadsheet-grid'\nimport {getShortDate} from '../memriioserver'\n\n\nclass Admin extends React.Component{\n\nstate ={\n  clouds:[],\n  users:[],\n  personModalIsOpen:false,\n  columns:null\n}\n\n//---------------------------------------------------------------\n\ncomponentDidMount(){\n  console.log('Administration.componentDidMount ' )\n  \n  mem.getAllClouds().then(clouds => {\n    console.log('all clouds');    \n    console.log(clouds);\n    this.setState({clouds:clouds})\n    this.handleShowAUsers()\n  })\n}\n\n//---------------------------------------------------------------\n\nhandleCloudSearch = (e) => {\n  console.log(e.target.value);\n  \n}\n\n//---------------------------------------------------------------\n\nhandleSelectCloud = ( cloud ) => {\n  console.log(cloud.name);\n  let clouds = []\n  clouds.push(cloud)\n  mem.getCloudPeople(clouds,null).then(people => {this.setState({people:people})})\n  \n}\n\nhandleShowAUsers = () =>{\n  console.log('show all users');\n  \n  mem.getAllUsers().then(people=> {this.setState({people:people})})\n}\n//---------------------------------------------------------------\n\nhandlePeopleSearch = (e) => {\n\n}\n\n//---------------------------------------------------------------\n\nhandleAddPerson = () => { \n  this.setState({personModalIsOpen:true})\n\n}\n\n//---------------------------------------------------------------\nhandleSelectPerson = (Person) => {\n\n}\n\n//---------------------------------------------------------------\n\nrender(){\n \n  const cloudpeople     = this.renderCloudPeople()\n  const addPersonModel  = this.renderAddPersonModal()\n    return (\n      <div className='some-page-wrapper'>\n        {addPersonModel}\n        <div className ='headerrow'></div>\n               \n          {cloudpeople}\n        \n      </div>\n    )\n}\n\n//---------------------------------------------------------------\n\nrenderCloudPeople = () =>{\n  \n  if(this.state.people){\n    if(!this.state.columns) this.state.columns = this.initColumns()\n    \n    return ( \n      <div className='admin-zone '>\n        <div className='floatLeft headtext'>Users</div>\n        <div className = 'searchHeader'>\n          <input className='textBox' placeholder='..people search' onChange={this.handlePeopleSearch}/>\n          <input className='textBox' placeholder='..cloud filter' onChange ={this.handleCloudSearch}/>\n          <button id='newuserbtn' className='newButton' onClick={this.handleAddPerson}>New User</button>\n        </div>\n        \n        <div className='floatLeft'>\n          <Grid \n            rows={this.state.people}\n            columns = {this.state.columns}\n            getRowKey={row => row.userid}\n            isColumnsResizable\n            onColumnResize = {this.onColumnResize}\n          />\n        </div>\n      </div>\n    )\n  }else{\n    return null\n  }\n  \n\n}\n//---------------------------------------------------------------\n\nafterOpenModal =() =>{\n\n}\n\ncloseModal = () =>{\n  this.setState({personModalIsOpen:false})\n\n}\n\nrenderAddPersonModal (){\n\n  \n  return(\n    <Modal\n          isOpen          = {this.state.personModalIsOpen}\n          onAfterOpen     = {this.afterOpenModal}\n          onRequestClose  = {this.closeModal}\n          className       = 'modal'\n          overlayClassName= 'backdropStyle'\n          contentLabel    = \"Example Modal\"\n    >\n      \n      <div className='headtext' >Add Person</div>\n      <div className='labelpair'>\n        <label className=\"labeltext\" htmlFor=\"name\">First Name</label>\n        <input \n            onChange={this.onNewUserFirstNameChange}\n            className='textBox' \n            placeholder='First Name'\n            id='firstname' />  \n      </div>\n      \n            \n      <button className='newButton' onClick={this.closeModal}>close</button>\n        \n    </Modal>    \n  )\n  \n}\n\n//---------------------------------------------------------------\n\nonColumnResize = (widthValues) => {\n  \n  const newColumns = [].concat(this.state.columns)\n  Object.keys(widthValues).forEach((columnId) => {\n      const column = this.state.columns.find(({ id }) => id === columnId);\n      column.width = widthValues[columnId]\n  })\n  this.setState({columns:newColumns})\n}\n\n//---------------------------------------------------------------\n\ninitColumns = () =>{\n  return(\n    [\n      {\n        id: 'photo',\n        title: () => 'Photo',\n        value: (row, { focus }) => {\n            return ( <img src={row.avatar} alt={'image'} /> )\n        },\n        width:5,\n      }, {\n        id: 'userid',\n        title: () => 'Id',\n        value: (row, { focus }) => {\n          return ( <Input value={row.userid} focus={focus} /> )\n        },\n        width:3,\n      }, {\n        id: 'firstname',\n        title: () => 'First Name',\n        value: (row, { focus }) => {\n          return ( <Input value={row.firstname} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        id: 'lastname',\n        title: () => 'Last Name',\n        value: (row, { focus }) => {\n          return ( <Input value={row.lastname} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        id: 'email',\n        title: () => 'email',\n        value: (row, { focus }) => {\n          return ( <Input value={row.email} focus={focus} /> )\n        },\n        width:15,\n      }, {\n        id: 'username',\n        title: () => 'Username',\n        value: (row, { focus }) => {\n          return ( <Input value={row.email} focus={focus} /> )\n        },\n        width:15,\n      }, {\n        id: 'mobile',\n        title: () => 'mobile',\n        value: (row, { focus }) => {\n          return ( <Input value={row.mobile} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        id: 'joined',\n        title: () => 'Joined',\n        value: (row, { focus }) => {\n          return ( <Input value={ getShortDate(row.joined)} focus={focus} /> )\n        },\n        width:8,\n      }\n      , {\n        id: 'clouds',\n        title: () => 'Clouds',\n        value: (row, { focus }) => {\n          return ( <Input value={getShortDate(row.joined)} focus={focus} /> )\n        },\n        width:24,\n      }\n    ]\n  )\n}\n\n//---------------------------------------------------------------\n\n}\nexport default Admin"]},"metadata":{},"sourceType":"module"}