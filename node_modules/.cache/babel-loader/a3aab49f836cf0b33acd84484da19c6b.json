{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js\";\nimport React, { useState } from 'react';\nimport * as mem from '../memriioserver';\nimport './admin.css';\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png';\nimport tag from '../images/tag.png';\nimport cross from '../images/x-symbol.png';\nimport Modal from 'react-modal';\nimport { Grid, Input, Select } from 'react-spreadsheet-grid';\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clouds: [],\n      users: [],\n      personModalIsOpen: false,\n      columns: null,\n      newuser: null\n    };\n\n    this.handleCloudSearch = e => {\n      console.log(e.target.value);\n    };\n\n    this.handleSelectCloud = cloud => {\n      console.log(cloud.name);\n      let clouds = [];\n      clouds.push(cloud);\n      mem.getCloudPeople(clouds, null).then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handleShowAUsers = () => {\n      console.log('show all users');\n      mem.getAllUsers().then(people => {\n        this.setState({\n          people: people\n        });\n      });\n    };\n\n    this.handlePeopleSearch = () => {};\n\n    this.handleSelectPerson = Person => {};\n\n    this.renderCloudPeople = () => {\n      if (this.state.people) {\n        if (!this.state.columns) this.state.columns = this.initColumns();\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"admin-zone \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"floatLeft headtext\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }\n        }, \"Users\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"searchHeader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"textBox\",\n          placeholder: \"..people search\",\n          onChange: this.handlePeopleSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          className: \"textBox\",\n          placeholder: \"..cloud filter\",\n          onChange: this.handleCloudSearch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          id: \"newuserbtn\",\n          className: \"newButton\",\n          onClick: this.handleShowAddPersonModel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }\n        }, \"New User\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"floatLeft\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          rows: this.state.people,\n          columns: this.state.columns,\n          getRowKey: row => row.userid,\n          isColumnsResizable: true,\n          onColumnResize: this.onColumnResize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }\n        })));\n      } else {\n        return null;\n      }\n    };\n\n    this.handleShowAddPersonModel = () => {\n      this.setState({\n        personModalIsOpen: true\n      });\n    };\n\n    this.handleFirstNameChange = e => {\n      this.state.newuser.firstname = e.target.value;\n    };\n\n    this.handleLastNameChange = e => {\n      this.state.newuser.lastname = e.target.value;\n    };\n\n    this.handleEmailChange = e => {\n      this.state.newuser.email = e.target.value;\n    };\n\n    this.handleMobileChange = e => {\n      this.state.newuser.mobile = e.target.value;\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        personModalIsOpen: false\n      });\n    };\n\n    this.handleAddPerson = () => {\n      const n = this.state.newuser;\n\n      if (n.firstname === '' || n.lastname === '' || n.email === '') {\n        alert('Cannot have blank fields');\n      } else if (!mem.isEmailFormat(n.email)) {\n        alert('email format is invalid');\n      } else {\n        mem.getUserByEmail(n.email).then(result => {\n          if (result.success) {\n            alert('A user with this email already exists');\n          } else {\n            mem.setNewUser(user).then(result => {\n              if (result.success) {\n                this.setState({\n                  personModalIsOpen: false\n                });\n              } else {\n                alert('Opps ! something went wrong');\n              }\n            });\n          }\n        });\n      }\n    };\n\n    this.onColumnResize = widthValues => {\n      const newColumns = [].concat(this.state.columns);\n      Object.keys(widthValues).forEach(columnId => {\n        const column = this.state.columns.find(({\n          id\n        }) => id === columnId);\n        column.width = widthValues[columnId];\n      });\n      this.setState({\n        columns: newColumns\n      });\n    };\n\n    this.initColumns = () => {\n      return [{\n        id: 'photo',\n        title: () => 'Photo',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: row.avatar,\n            alt: 'image',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 22\n            }\n          });\n        },\n        width: 5\n      }, {\n        id: 'userid',\n        title: () => 'Id',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.userid,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 3\n      }, {\n        id: 'firstname',\n        title: () => 'First Name',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.firstname,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        id: 'lastname',\n        title: () => 'Last Name',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.lastname,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        id: 'email',\n        title: () => 'email',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.email,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 15\n      }, {\n        id: 'username',\n        title: () => 'Username',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.email,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 15\n      }, {\n        id: 'mobile',\n        title: () => 'mobile',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: row.mobile,\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 10\n      }, {\n        id: 'joined',\n        title: () => 'Joined',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: getShortDate(row.joined),\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 8\n      }, {\n        id: 'clouds',\n        title: () => 'Clouds',\n        value: (row, {\n          focus\n        }) => {\n          return /*#__PURE__*/React.createElement(Input, {\n            value: mem.getShortDate(row.joined),\n            focus: focus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 20\n            }\n          });\n        },\n        width: 24\n      }];\n    };\n  }\n\n  //---------------------------------------------------------------\n  componentDidMount() {\n    console.log('Administration.componentDidMount ');\n    this.state.newuser = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      mobile: ''\n    };\n    mem.getAllClouds().then(clouds => {\n      this.setState({\n        clouds: clouds\n      });\n      this.handleShowAUsers();\n    });\n  } //---------------------------------------------------------------\n\n\n  //---------------------------------------------------------------\n  render() {\n    const cloudpeople = this.renderCloudPeople();\n    const addPersonModel = this.renderAddPersonModal();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"some-page-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, addPersonModel, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), cloudpeople);\n  } //---------------------------------------------------------------\n\n\n  //-------------------------------------------------------------------------\n  renderAddPersonModal() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.personModalIsOpen,\n      onRequestClose: this.closeModal,\n      className: \"modal\",\n      overlayClassName: \"backdropStyle\",\n      contentLabel: \"Example Modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headtext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, \"Add Person\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelpair\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labeltext spacer\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"textBox\",\n      placeholder: \"...first Name\",\n      id: \"firstname\",\n      onChange: this.handleFirstNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelpair\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labeltext spacer\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"textBox\",\n      placeholder: \"...last Name\",\n      id: \"lastname\",\n      onChange: this.handleLastNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelpair\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labeltext spacer\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"textBox\",\n      placeholder: \"...email\",\n      id: \"email\",\n      onChange: this.handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelpair\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"labeltext spacer\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, \"Mobile\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"textBox\",\n      placeholder: \"...mobile\",\n      id: \"mobile\",\n      onChange: this.handleMobileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalfooter \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"newButton minw50 spacer\",\n      onClick: this.handleCloudSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }\n    }, \" Cancel \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"newButton minw50 spacer\",\n      onClick: this.handleAddPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, \" Add \")));\n  } //---------------------------------------------------------------\n  //---------------------------------------------------------------\n\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/admin/admin.js"],"names":["React","useState","mem","CloudLabel","cloudImage","tag","cross","Modal","Grid","Input","Select","Admin","Component","state","clouds","users","personModalIsOpen","columns","newuser","handleCloudSearch","e","console","log","target","value","handleSelectCloud","cloud","name","push","getCloudPeople","then","people","setState","handleShowAUsers","getAllUsers","handlePeopleSearch","handleSelectPerson","Person","renderCloudPeople","initColumns","handleShowAddPersonModel","row","userid","onColumnResize","handleFirstNameChange","firstname","handleLastNameChange","lastname","handleEmailChange","email","handleMobileChange","mobile","handleCloseModal","handleAddPerson","n","alert","isEmailFormat","getUserByEmail","result","success","setNewUser","user","widthValues","newColumns","concat","Object","keys","forEach","columnId","column","find","id","width","title","focus","avatar","getShortDate","joined","componentDidMount","getAllClouds","render","cloudpeople","addPersonModel","renderAddPersonModal","closeModal"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport * as mem from '../memriioserver'\nimport './admin.css'\nimport { CloudLabel } from '../buttons/buttons';\nimport cloudImage from '../images/cloud.png'\nimport tag from '../images/tag.png'\nimport cross from '../images/x-symbol.png'\nimport Modal from 'react-modal'\nimport {Grid,Input,Select} from 'react-spreadsheet-grid'\n\n\nclass Admin extends React.Component{\n\nstate ={\n  clouds:[],\n  users:[],\n  personModalIsOpen:false,\n  columns:null,\n  newuser:null\n}\n\n//---------------------------------------------------------------\n\ncomponentDidMount(){\n  console.log('Administration.componentDidMount ' )\n  this.state.newuser =\n    {\n      firstname:'',\n      lastname:'',\n      email:'',\n      mobile:''\n    }\n  mem.getAllClouds().then(clouds => {\n    this.setState({clouds:clouds})\n    this.handleShowAUsers()\n  })\n}\n\n//---------------------------------------------------------------\n\nhandleCloudSearch = (e) => {\n  console.log(e.target.value);\n  \n}\n\n//---------------------------------------------------------------\n\nhandleSelectCloud = ( cloud ) => {\n  console.log(cloud.name);\n  let clouds = []\n  clouds.push(cloud)\n  mem.getCloudPeople(clouds,null).then(people => {this.setState({people:people})})\n  \n}\n\nhandleShowAUsers = () =>{\n  console.log('show all users');\n  \n  mem.getAllUsers().then(people=> {this.setState({people:people})})\n}\n//---------------------------------------------------------------\n\nhandlePeopleSearch = ( ) => { \n\n}\n//---------------------------------------------------------------\n\nhandleSelectPerson = (Person) => {\n\n}\n\n//---------------------------------------------------------------\n\nrender(){\n \n  const cloudpeople     = this.renderCloudPeople()\n  const addPersonModel  = this.renderAddPersonModal()\n    return (\n      <div className='some-page-wrapper'>\n        {addPersonModel}\n        <div className ='headerrow'></div>\n               \n          {cloudpeople}\n        \n      </div>\n    )\n}\n\n//---------------------------------------------------------------\n\nrenderCloudPeople = () =>{\n  \n  if(this.state.people){\n    if(!this.state.columns) this.state.columns = this.initColumns()\n    \n    return ( \n      <div className='admin-zone '>\n        <div className='floatLeft headtext'>Users</div>\n        <div className = 'searchHeader'>\n          <input className='textBox' placeholder='..people search' onChange={this.handlePeopleSearch}/>\n          <input className='textBox' placeholder='..cloud filter' onChange ={this.handleCloudSearch}/>\n          <button id='newuserbtn' className='newButton' onClick={this.handleShowAddPersonModel}>New User</button>\n        </div>\n        \n        <div className='floatLeft'>\n          <Grid \n            rows={this.state.people}\n            columns = {this.state.columns}\n            getRowKey={row => row.userid}\n            isColumnsResizable\n            onColumnResize = {this.onColumnResize}\n          />\n        </div>\n      </div>\n    )\n  }else{\n    return null\n  }\n  \n\n}\n\n//--------------------------ADD PERSON MODAL -----------------------------\n//--------------------------================------------------------------\n\nhandleShowAddPersonModel  = ()  =>  { this.setState({personModalIsOpen:true})}\nhandleFirstNameChange     = (e) =>  { this.state.newuser.firstname = e.target.value }\nhandleLastNameChange      = (e) =>  { this.state.newuser.lastname  = e.target.value }\nhandleEmailChange         = (e) =>  { this.state.newuser.email     = e.target.value }\nhandleMobileChange        = (e) =>  { this.state.newuser.mobile    = e.target.value }\nhandleCloseModal          = ()  =>  { this.setState({personModalIsOpen:false})}\n\n//-------------------------------------------------------------------------\n\nhandleAddPerson           = ()  =>  { \n  const n = this.state.newuser \n  if(n.firstname === '' || n.lastname === '' || n.email===''){\n    alert('Cannot have blank fields')\n  }else if (!mem.isEmailFormat(n.email)) {\n    alert('email format is invalid')\n  }else{\n    mem.getUserByEmail(n.email)\n    .then(result =>{\n      if(result.success){\n        alert('A user with this email already exists')\n      }else{\n        mem.setNewUser(user)\n        .then(result=>{\n          if (result.success){\n            this.setState({personModalIsOpen:false})\n          }else{\n            alert('Opps ! something went wrong')\n          }\n        })\n      }\n    })\n  } \n  \n  \n}\n\n//-------------------------------------------------------------------------\n\nrenderAddPersonModal (){\n  \n  return(\n    <Modal\n          isOpen          = {this.state.personModalIsOpen}          \n          onRequestClose  = {this.closeModal}\n          className       = 'modal'\n          overlayClassName= 'backdropStyle'\n          contentLabel    = \"Example Modal\"\n    >\n     \n      <div className='headtext' >Add Person</div>\n      <div className='labelpair'>\n        <label className='labeltext spacer' htmlFor=\"name\">First Name</label>\n        <input className='textBox'  placeholder='...first Name'id='firstname' onChange={this.handleFirstNameChange}/>  \n      </div>\n\n      <div className='labelpair'>\n        <label className='labeltext spacer' htmlFor=\"name\">Last Name</label>\n        <input  className='textBox'  placeholder='...last Name' id='lastname' onChange={this.handleLastNameChange}/>  \n      </div>\n\n      <div className='labelpair'>\n        <label className='labeltext spacer' htmlFor=\"name\">Email</label>\n        <input className='textBox'  placeholder='...email' id='email' onChange={this.handleEmailChange}/>  \n      </div>\n\n      <div className='labelpair'>\n        <label className='labeltext spacer' htmlFor=\"name\">Mobile</label>\n        <input  className='textBox' placeholder='...mobile' id='mobile' onChange={this.handleMobileChange}/>  \n      </div>\n      <div className='spacer'></div>\n      <div className='modalfooter '>\n        <button className='newButton minw50 spacer' onClick={this.handleCloudSearch}> Cancel </button>\n        <button className='newButton minw50 spacer' onClick={this.handleAddPerson}> Add </button>\n      </div>      \n        \n    </Modal>    \n  )\n  \n}\n\n//---------------------------------------------------------------\n\nonColumnResize = (widthValues) => {\n  \n  const newColumns = [].concat(this.state.columns)\n  Object.keys(widthValues).forEach((columnId) => {\n      const column = this.state.columns.find(({ id }) => id === columnId);\n      column.width = widthValues[columnId]\n  })\n  this.setState({columns:newColumns})\n}\n\n//---------------------------------------------------------------\n\ninitColumns = () =>{\n  return(\n    [\n      {\n        id: 'photo',\n        title: () => 'Photo',\n        value: (row, { focus }) => {\n            return ( <img src={row.avatar} alt={'image'} /> )\n        },\n        width:5,\n      }, {\n        id: 'userid',\n        title: () => 'Id',\n        value: (row, { focus }) => {\n          return ( <Input value={row.userid} focus={focus} /> )\n        },\n        width:3,\n      }, {\n        id: 'firstname',\n        title: () => 'First Name',\n        value: (row, { focus }) => {\n          return ( <Input value={row.firstname} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        id: 'lastname',\n        title: () => 'Last Name',\n        value: (row, { focus }) => {\n          return ( <Input value={row.lastname} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        id: 'email',\n        title: () => 'email',\n        value: (row, { focus }) => {\n          return ( <Input value={row.email} focus={focus} /> )\n        },\n        width:15,\n      }, {\n        id: 'username',\n        title: () => 'Username',\n        value: (row, { focus }) => {\n          return ( <Input value={row.email} focus={focus} /> )\n        },\n        width:15,\n      }, {\n        id: 'mobile',\n        title: () => 'mobile',\n        value: (row, { focus }) => {\n          return ( <Input value={row.mobile} focus={focus} /> )\n        },\n        width:10,\n      }, {\n        id: 'joined',\n        title: () => 'Joined',\n        value: (row, { focus }) => {\n          return ( <Input value={ getShortDate(row.joined)} focus={focus} /> )\n        },\n        width:8,\n      }\n      , {\n        id: 'clouds',\n        title: () => 'Clouds',\n        value: (row, { focus }) => {\n          return ( <Input value={mem.getShortDate(row.joined)} focus={focus} /> )\n        },\n        width:24,\n      }\n    ]\n  )\n}\n\n//---------------------------------------------------------------\n\n}\nexport default Admin"]},"metadata":{},"sourceType":"module"}