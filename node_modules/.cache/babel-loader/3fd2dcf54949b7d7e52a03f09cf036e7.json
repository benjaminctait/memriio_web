{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memorymodal/memorymodal.js\";\nimport React from 'react';\nimport tick from '../images/checkmark.png';\nimport tag from '../images/tag.png';\nimport author from '../images/author.png';\nimport x from '../images/x-symbol.png';\nimport edit from '../images/edit.png';\nimport left from '../images/chevron-left.png';\nimport right from '../images/chevron-right.png';\nimport trash from '../images/trash.png';\nimport hero from '../images/hero-full.png';\nimport heroOutline from '../images/hero-outline-grey.png';\nimport MemoryFileViewer from '../memoryviewer/memoryImageViewer';\nimport * as Utils from './utils';\nimport './memorymodal.css';\nimport { getAllMemoryFiles, getTaggedPeople, getMemoryClouds, getMemorySearchWords, getCloudPeople, getUser } from '../memriioserver';\nimport { CheckBox, SubTag, ImageLabel } from '../buttons/buttons';\n\nclass MemoryModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memory: null,\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      keywords: [],\n      // this is temporary   \n      memfiles: null,\n      cloudPeople: [],\n      userClouds: [],\n      activefile: null,\n      author: null,\n      memfileIndex: 0,\n      editMode: false\n    };\n\n    this.onHide = () => {\n      this.props.onHideModal(this.props.memory);\n    };\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (this.props.memory) {\n        if (!prevProps.memory || this.props.memory.memid !== prevProps.memory.memid) {\n          this.populateMemoryFiles(this.props.memfiles);\n          getUser(this.props.memory.userid, author => {\n            this.setState({\n              author: author\n            });\n            console.log('Author + ' + JSON.stringify(author));\n          });\n          getTaggedPeople(this.props.memory.memid, people => {\n            this.setState({\n              taggedPeople: people\n            });\n          });\n          getMemoryClouds(this.props.memory.memid, clouds => {\n            this.populateCloudInfo(clouds);\n          });\n          getMemorySearchWords(this.props.memory.memid, words => {\n            this.populateSearchWords(words);\n          });\n        }\n      }\n    };\n\n    this.getHeroFile = () => {\n      this.state.memfileIndex = 0;\n      let hero = this.state.memfiles[0];\n      this.state.memfiles.map((memfile, index) => {\n        if (memfile.ishero) {\n          this.state.memfileIndex = index;\n          hero = memfile;\n        }\n      });\n      return hero;\n    };\n\n    this.populateMemoryFiles = memfiles => {\n      this.state.memfiles = memfiles;\n      this.setState({\n        activefile: this.getHeroFile()\n      });\n    };\n\n    this.populateSearchWords = words => {\n      this.state.keywords = [];\n      words.map(worditem => {\n        this.state.keywords.push(worditem.keyword);\n      });\n      this.setState({\n        searchWords: words\n      });\n    };\n\n    this.populateCloudInfo = clouds => {\n      this.setState({\n        memoryClouds: clouds\n      });\n      getCloudPeople(clouds, people => {\n        this.setState({\n          cloudPeople: people\n        });\n      });\n    };\n\n    this.onShowEditMode = () => {\n      this.setState({\n        editMode: true\n      });\n    };\n\n    this.userIsAuthorisedToEdit = () => {\n      return true;\n    };\n\n    this.deleteFileFromMemory = () => {\n      console.log('delte file from memroy');\n    };\n\n    this.makeHeroFile = () => {\n      console.log('make hero file');\n    };\n\n    this.activeFileisHero = () => {\n      console.log('active file : ' + this.state.activefile.ishero);\n\n      if (this.state.activefile) {\n        if (this.state.activefile.ishero) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    this.renderMemoryContent = () => {\n      const imageZone = this.renderImageZone();\n      const storyZone = this.renderStoryZone();\n      const detailsZone = this.renderDetailsZone();\n\n      if (this.state.activefile) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"modalrow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }\n        }, imageZone, storyZone, detailsZone);\n      } else {\n        return null;\n      }\n    };\n\n    this.renderKeyWords = () => {\n      const keywords = this.state.keywords.map((word, idx) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"wordListItem\",\n          key: 'k' + idx,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(CheckBox, {\n          checkedImg: tick,\n          label: word,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }\n        }));\n      });\n      return keywords;\n    };\n\n    this.renderTaggedPeople = () => {\n      const people = this.state.taggedPeople.map(p => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"wordListItem\",\n          key: 't' + p.userid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ImageLabel, {\n          img: tag,\n          label: p.firstname + ' ' + p.lastname,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 34\n          }\n        }));\n      });\n\n      if (this.state.author) {\n        people.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: 'a' + this.state.author.userid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ImageLabel, {\n          img: author,\n          label: this.state.author.firstname + ' ' + this.state.author.lastname,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      people.reverse();\n      return people;\n    };\n\n    this.renderDetails = () => {\n      const details = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"wordListItem\",\n        key: 'location',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ImageLabel, {\n        img: tag,\n        label: this.props.memory.location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 26\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"wordListItem\",\n        key: 'sss',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ImageLabel, {\n        img: tag,\n        label: this.props.memory.createdon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      })));\n      return details;\n    };\n\n    this.renderImageZone = () => {\n      let editControls = null;\n      var heroImg = this.activeFileisHero() ? hero : heroOutline;\n\n      if (this.state.editMode) {\n        editControls = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"imageEditConrols\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"closeBtn\",\n          src: trash,\n          onClick: this.deleteFileFromMemory(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          className: \"closeBtn\",\n          src: heroImg,\n          onClick: this.makeHeroFile(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 7\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"imgcolumn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(MemoryFileViewer, {\n        memfile: this.state.activefile,\n        thumbStyleClass: 'memoryModalImage',\n        fileStyleClass: 'memoryModalImage',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 7\n        }\n      }), editControls);\n    };\n\n    this.renderStoryZone = () => {\n      const mem = this.props.memory;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"infoColumn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 7\n        }\n      }, mem.title, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"f6 lh-copy i measure mt2 mid-gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }\n      }, mem.description), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"f6 lh-copy measure mt2 black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }\n      }, \" \", mem.story, \" \"));\n    };\n\n    this.renderCornerControls = () => {\n      let editBtn = null;\n\n      if (this.userIsAuthorisedToEdit()) {\n        editBtn = /*#__PURE__*/React.createElement(\"img\", {\n          className: \"closeBtn\",\n          src: edit,\n          onClick: this.onShowEditMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 7\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"closeBtn\",\n        src: x,\n        onClick: this.onHide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 7\n        }\n      }), editBtn);\n    };\n\n    this.renderDetailsZone = () => {\n      const keywords = this.renderKeyWords();\n      const people = this.renderTaggedPeople();\n      const details = this.renderDetails();\n      const cornderCtrls = this.renderCornerControls();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"detailsColumn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 7\n        }\n      }, \"Tags \"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"wordList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 7\n        }\n      }, \" \", keywords, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 7\n        }\n      }, \"People\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"wordList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 7\n        }\n      }, \" \", people, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 7\n        }\n      }, \"Details\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"wordList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 7\n        }\n      }, \" \", details, \" \"), cornderCtrls);\n    };\n\n    this.renderCarouselControls = () => {\n      if (this.state.memfiles) {\n        const mem = this.props.memory;\n        const mfiles = this.state.memfiles;\n        const thumbs = mfiles.map((mfile, index) => {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            key: 'thumb' + index,\n            className: \"thumb\",\n            src: mfile.thumburl,\n            onClick: index => {},\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 11\n            }\n          });\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"controlbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"closeBtn\",\n          src: left,\n          onClick: this.goBack,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"thumbArray\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 9\n          }\n        }, thumbs), /*#__PURE__*/React.createElement(\"img\", {\n          className: \"closeBtn\",\n          src: right,\n          onClick: this.goForward,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return null;\n      }\n    };\n\n    this.goBack = e => {\n      if (this.state.memfiles) {\n        let ubound = this.state.memfiles.length - 1;\n\n        if (this.state.memfileIndex === 0) {\n          this.state.memfileIndex = ubound;\n        } else {\n          this.state.memfileIndex--;\n        }\n\n        this.setState({\n          activefile: this.state.memfiles[this.state.memfileIndex]\n        });\n      }\n    };\n\n    this.goForward = e => {\n      if (this.state.memfiles) {\n        let ubound = this.state.memfiles.length - 1;\n\n        if (this.state.memfileIndex === ubound) {\n          this.state.memfileIndex = 0;\n        } else {\n          this.state.memfileIndex++;\n        }\n\n        this.setState({\n          activefile: this.state.memfiles[this.state.memfileIndex]\n        });\n      }\n    };\n  }\n\n  //------------------------------------------------------------------------\n  render() {\n    if (this.props.show) {\n      let memoryContent = this.renderMemoryContent();\n      let carouselControls = this.renderCarouselControls();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"backdropStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modalStyle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, memoryContent, carouselControls));\n    } else {\n      return null;\n    }\n  } //------------------------------------------------------------------------\n\n\n}\n\n;\nexport default MemoryModal;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memorymodal/memorymodal.js"],"names":["React","tick","tag","author","x","edit","left","right","trash","hero","heroOutline","MemoryFileViewer","Utils","getAllMemoryFiles","getTaggedPeople","getMemoryClouds","getMemorySearchWords","getCloudPeople","getUser","CheckBox","SubTag","ImageLabel","MemoryModal","Component","state","memory","taggedPeople","memoryClouds","searchWords","keywords","memfiles","cloudPeople","userClouds","activefile","memfileIndex","editMode","onHide","props","onHideModal","componentDidUpdate","prevProps","prevState","memid","populateMemoryFiles","userid","setState","console","log","JSON","stringify","people","clouds","populateCloudInfo","words","populateSearchWords","getHeroFile","map","memfile","index","ishero","worditem","push","keyword","onShowEditMode","userIsAuthorisedToEdit","deleteFileFromMemory","makeHeroFile","activeFileisHero","renderMemoryContent","imageZone","renderImageZone","storyZone","renderStoryZone","detailsZone","renderDetailsZone","renderKeyWords","word","idx","renderTaggedPeople","p","firstname","lastname","reverse","renderDetails","details","location","createdon","editControls","heroImg","mem","title","description","story","renderCornerControls","editBtn","cornderCtrls","renderCarouselControls","mfiles","thumbs","mfile","thumburl","goBack","goForward","e","ubound","length","render","show","memoryContent","carouselControls"],"mappings":"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","sourcesContent":["import React from 'react';\nimport tick from '../images/checkmark.png'\nimport tag from '../images/tag.png'\nimport author from '../images/author.png'\nimport x from '../images/x-symbol.png'\nimport edit from '../images/edit.png'\nimport left from '../images/chevron-left.png'\nimport right from '../images/chevron-right.png'\nimport trash from '../images/trash.png'\nimport hero from '../images/hero-full.png'\nimport heroOutline from '../images/hero-outline-grey.png'\nimport MemoryFileViewer from '../memoryviewer/memoryImageViewer'\nimport * as Utils from './utils'\nimport './memorymodal.css'\n\nimport {getAllMemoryFiles, \n  getTaggedPeople,\n  getMemoryClouds,\n  getMemorySearchWords, \n  getCloudPeople,\n  getUser,\n } from '../memriioserver'\nimport {CheckBox,SubTag,ImageLabel} from '../buttons/buttons'\n\n\n\nclass MemoryModal extends React.Component{\n\n    \n    state ={\n        memory:null,\n        taggedPeople:[],\n        memoryClouds:[],\n        searchWords:[], \n        keywords:[],    // this is temporary   \n        memfiles:null,\n        cloudPeople:[],\n        userClouds:[],\n        activefile:null,\n        author:null,\n        memfileIndex:0,\n        editMode:false,\n    }\n   \n\n    onHide = () =>{\n      this.props.onHideModal(this.props.memory)\n    }\n//---------------------------------------------------------------------------------\n\n  componentDidUpdate = (prevProps,prevState) =>{\n    \n    if(this.props.memory)\n    {\n      if(!prevProps.memory || this.props.memory.memid !== prevProps.memory.memid){\n        \n        this.populateMemoryFiles(this.props.memfiles)\n        getUser              (this.props.memory.userid,(author => {\n                                                              this.setState({author:author})\n                                                              console.log('Author + ' + JSON.stringify(author))\n                                                          }))\n        getTaggedPeople      (this.props.memory.memid,((people)=>{this.setState({taggedPeople:people})}))\n        getMemoryClouds      (this.props.memory.memid,((clouds)=>{this.populateCloudInfo(clouds)}))\n        getMemorySearchWords (this.props.memory.memid,((words =>{this.populateSearchWords(words)})))\n        \n        \n        \n      }      \n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n  getHeroFile = () => {\n    this.state.memfileIndex=0\n    let hero = this.state.memfiles[0]\n\n    this.state.memfiles.map((memfile,index)=> {\n\n        if(memfile.ishero){         \n            this.state.memfileIndex = index            \n            hero = memfile\n        }\n    })\n    return hero\n  }\n//---------------------------------------------------------------------------------\n  populateMemoryFiles = (memfiles) => {\n\n    this.state.memfiles = memfiles\n    this.setState({\n        activefile:this.getHeroFile()\n    })\n  }\n//---------------------------------------------------------------------------------\n  populateSearchWords = (words) =>{\n    this.state.keywords = []\n    words.map(worditem =>{\n        this.state.keywords.push(worditem.keyword)\n    })\n    this.setState({searchWords:words})\n  }\n\n//------------------------------------------------------------------------\n\n  populateCloudInfo = (clouds) =>{\n    this.setState({memoryClouds:clouds})\n    getCloudPeople (clouds,((people)=>{this.setState({cloudPeople:people})}))   \n  }\n\n//------------------------------------------------------------------------\n\n  onShowEditMode =() =>{\n    this.setState({editMode:true})\n    \n  }\n\n  //------------------------------------------------------------------------\n\n  userIsAuthorisedToEdit = () =>{\n    return true\n  }\n\n  //------------------------------------------------------------------------\n\n  deleteFileFromMemory =() =>{\n    console.log('delte file from memroy');\n    \n  }\n  \n  //------------------------------------------------------------------------\n\n  makeHeroFile =() =>{\n    console.log('make hero file');\n    \n  }\n  \n  //------------------------------------------------------------------------\n\n  activeFileisHero =() =>{\n    console.log('active file : '  + this.state.activefile.ishero);\n    \n    if(this.state.activefile){\n      if(this.state.activefile.ishero){\n        return true\n      }else{\n        return false\n      }\n    }else{\n      return false\n    }\n  }\n  \n  //------------------------------------------------------------------------\n\n  render(){\n      \n    if(this.props.show){\n      let memoryContent = this.renderMemoryContent()\n      let carouselControls = this.renderCarouselControls()\n      return(\n        <div className= 'backdropStyle'>\n          <div className='modalStyle'>\n            {memoryContent}              \n            {carouselControls}\n          </div>\n        </div>\n      )\n    }else{\n      return null\n    }        \n}\n\n//------------------------------------------------------------------------\n\nrenderMemoryContent = () => {\n    \n  const imageZone   = this.renderImageZone()\n  const storyZone   = this.renderStoryZone()\n  const detailsZone = this.renderDetailsZone()\n\n  if(this.state.activefile){\n    return (\n        <div className='modalrow'>\n          \n          {imageZone}\n          {storyZone}\n          {detailsZone}\n\n        </div>\n    )\n  } else {\n    return null\n  }\n  \n}\n\n//------------------------------------------------------------------------\n\nrenderKeyWords =() =>{\n  const keywords  = this.state.keywords.map(\n    (word, idx) => {\n      return (\n        <li \n            className='wordListItem'\n            key={'k'+idx}>\n          <CheckBox \n              checkedImg = {tick}\n              label = {word}/>\n        </li>\n        )\n      })\n  return keywords\n}\n\n//------------------------------------------------------------------------\n\nrenderTaggedPeople =() =>{\n  const people  = this.state.taggedPeople.map(\n    p => {\n        return (\n          <li \n            className='wordListItem'\n            key={'t' + p.userid}><ImageLabel img = {tag} label = {p.firstname+' '+p.lastname}/>                                                        \n          </li>\n        )\n      })\n      if(this.state.author){\n        people.push(      \n          <li key={'a' + this.state.author.userid}>\n            <ImageLabel \n              img = {author}\n              label = {this.state.author.firstname + ' ' + this.state.author.lastname}/>\n          </li>\n        ) \n      }\n      people.reverse()   \n  return people\n}\n\n//------------------------------------------------------------------------\n\nrenderDetails =() => {\n  const details = \n    <div>\n      <li \n        className='wordListItem'\n        key={'location'}><ImageLabel img = {tag} label = {this.props.memory.location}/>\n      </li>\n      <li \n        className='wordListItem'\n        key={'sss'}><ImageLabel img = {tag} label = {this.props.memory.createdon}/>\n      </li>\n    </div>\n  return details\n}\n\n//------------------------------------------------------------------------\n\nrenderImageZone =()=>{\n  let editControls=null\n  var heroImg = this.activeFileisHero() ? hero : heroOutline;\n\n  if(this.state.editMode){\n    editControls = \n    <div className = 'imageEditConrols' >\n      <img  \n        className='closeBtn'\n        src = {trash}\n        onClick={this.deleteFileFromMemory()} />\n      <img  \n        className='closeBtn'\n        src = {heroImg}\n        onClick={this.makeHeroFile()} />\n    </div>\n  }\n\n  return (\n    <div className='imgcolumn'>\n      <MemoryFileViewer \n        memfile={this.state.activefile}\n        thumbStyleClass={'memoryModalImage'}\n        fileStyleClass={'memoryModalImage'}\n      />\n      {editControls}\n    </div>\n  )\n}\n\n//------------------------------------------------------------------------\n\nrenderStoryZone = () =>{\n  const mem = this.props.memory\n  return (\n    <div className = 'infoColumn'>\n      <h4>{mem.title} </h4>\n      <p className=\"f6 lh-copy i measure mt2 mid-gray\">{mem.description}</p>\n      <p className=\"f6 lh-copy measure mt2 black\"> { mem.story } </p>\n    </div>  \n  )\n}\n\n//------------------------------------------------------------------------\n\nrenderCornerControls =() =>{\n  let editBtn = null\n  if(this.userIsAuthorisedToEdit()){\n    editBtn=\n      <img  \n      className='closeBtn'                   \n      src = {edit}\n      onClick={this.onShowEditMode} />\n  }\n  return (\n    <div className='footer'>                        \n      <img  \n        className='closeBtn'                   \n        src = {x}\n        onClick={this.onHide} />\n        {editBtn}\n\n    </div>\n\n  )\n}\n\n//------------------------------------------------------------------------\n\nrenderDetailsZone = () => {\n  const keywords     = this.renderKeyWords()\n  const people       = this.renderTaggedPeople()\n  const details      = this.renderDetails()\n  const cornderCtrls = this.renderCornerControls()\n\n  return (\n    <div className = 'detailsColumn'>\n      <h4>Tags </h4>\n      <ul className='wordList' > { keywords } </ul>\n      <h4>People</h4>\n      <ul className='wordList' > { people   } </ul>\n      <h4>Details</h4>\n      <ul className='wordList' > { details   } </ul>\n      {cornderCtrls}              \n    </div>  \n  )\n}\n//------------------------------------------------------------------------\n\nrenderCarouselControls = () => {\n  if(this.state.memfiles)\n  {\n    const mem = this.props.memory\n    const mfiles = this.state.memfiles\n    const thumbs = mfiles.map((mfile,index) =>{\n        return(\n          <img key={'thumb'+index} className='thumb' src = {mfile.thumburl} onClick={(index) =>{}}/> \n        )})\n    \n    return (\n      <div className='controlbox'>\n        <img className='closeBtn' src = {left} onClick={this.goBack} /> \n        <div className='thumbArray'>\n            {thumbs}\n        </div> \n        <img className='closeBtn' src = {right} onClick={this.goForward} /> \n      </div>\n    )\n  }else{\n    return null\n  }\n}\n\n//------------------------------------------------------------------------\n\ngoBack = (e) => {\n  if(this.state.memfiles)\n  {\n    let ubound = this.state.memfiles.length-1\n    if(this.state.memfileIndex === 0){\n      this.state.memfileIndex = ubound \n    }else{\n      this.state.memfileIndex--\n    }\n    this.setState({activefile:this.state.memfiles[this.state.memfileIndex]})\n  }\n}\n\ngoForward = (e) => {\n  if(this.state.memfiles)\n  {\n    let ubound = this.state.memfiles.length-1\n    if(this.state.memfileIndex === ubound){\n      this.state.memfileIndex = 0 \n    }else{\n      this.state.memfileIndex++\n    }\n    this.setState({activefile:this.state.memfiles[this.state.memfileIndex]})\n  }    \n}\n\n  \n\n};  \n\n\nexport default MemoryModal;\n\n\n"]},"metadata":{},"sourceType":"module"}