{"ast":null,"code":"import React from 'react'; //--Returns and array of of images and related meta data from the server-----------------------------------------------\n\nexport function getAllMemoryFiles(memoryid, callback) {\n  console.log('Memriio.getAllImages : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('server response : ' + res.success);\n      console.log('server data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getTaggedPeople(memoryid, callback) {\n  console.log('Memriio.getTaggedPeople : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_associatedpeople_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('server response : ' + res.success);\n      console.log('server data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getMemoryClouds(memoryid, callback) {\n  console.log('Memriio.getMemoryclouds : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/get_associatedclouds_memoryid', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('getMemoryclouds server response : ' + res.success);\n      console.log('getMemoryclouds response data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('getMemoryclouds server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getCloudPeople(clouds, callback) {\n  console.log('Memriio.getCloudPeople : clouds ' + JSON.stringify(clouds));\n  fetch('https://memriio-api-0.herokuapp.com/get_cloud_people_clouds', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      clouds: clouds\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('getCloudPeople server response : ' + res.success);\n      console.log('getCloudPeople response data : ' + JSON.stringify(res.data));\n      callback(res.data);\n    } else {\n      console.log('getCloudPeople server response : ' + res.success + ' with ' + res.error);\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateHeroImage(memoryid, heroImageid) {\n  console.log('Memriio.getAllImages : memoryid ' + memoryid);\n} //------------------------------------------------------------\n\nexport function updateTitle(memoryid, newTitle) {\n  console.log('Memriio.updateTitle : memoryid ' + memoryid + ' title : ' + newTitle);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_title', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newTitle: newTitle\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateTitle : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateTitle : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateDescription(memoryid, newDescription) {\n  console.log('Memriio.updateDescription : memoryid ' + memoryid + ' description : ' + newDescription);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_description', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newDescription: newDescription\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateDescription : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateDescription : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function deleteMemory(memoryid) {\n  console.log('Memriio.deleteMemory : memoryid ' + memoryid);\n  fetch('https://memriio-api-0.herokuapp.com/delete_memory', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('deleteMemory : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('deleteMemory : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateStory(memoryid, newStory) {\n  let len = 0;\n\n  if (newStory) {\n    len = newStory.length;\n  }\n\n  console.log('Memriio.updateStory : memoryid ' + memoryid + ' story.length : ' + len + ' chars');\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_story', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newStory: newStory\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateStory : server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateStory : server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function updateTaggedPeople(memoryid, taggedPeople) {} //------------------------------------------------------------\n\nexport function updateClouds(memoryid, clouds) {} //------------------------------------------------------------\n\nexport function updateLocation(memoryid, newLocation) {\n  console.log('Memriio.updateLocation : memoryid ' + memoryid + ' location : ' + newLocation);\n  fetch('https://memriio-api-0.herokuapp.com/set_memory_location', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      newLocation: newLocation\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('updateLocation :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('updateLocation :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n} //------------------------------------------------------------\n\nexport function addTaggedPerson(memoryid, userid) {\n  console.log('Memriio.addTaggedPerson : memoryid ' + memoryid + ' user : ' + userid);\n  fetch('https://memriio-api-0.herokuapp.com/associatePerson', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      memoryid: memoryid,\n      userid: userid\n    })\n  }).then(response => response.json()).then(res => {\n    if (res.success) {\n      console.log('addTaggedPerson :server response : ' + res.success);\n      return true;\n    } else {\n      console.log('addTaggedPerson :server response : ' + res.success + ' with ' + res.error);\n      return false;\n    }\n  });\n}","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memriioserver.js"],"names":["React","getAllMemoryFiles","memoryid","callback","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","res","success","data","error","getTaggedPeople","getMemoryClouds","getCloudPeople","clouds","updateHeroImage","heroImageid","updateTitle","newTitle","updateDescription","newDescription","deleteMemory","updateStory","newStory","len","length","updateTaggedPeople","taggedPeople","updateClouds","updateLocation","newLocation","addTaggedPerson","userid"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AAEA,OAAO,SAASC,iBAAT,CAA6BC,QAA7B,EAAsCC,QAAtC,EAAgD;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCH,QAAjD;AAGAI,EAAAA,KAAK,CAAC,2DAAD,EAA8D;AAC/DC,IAAAA,MAAM,EAAE,MADuD;AAChDC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADuC;AAGvDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA;AAAV,KAAf;AAHkD,GAA9D,CAAL,CAIaU,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBU,GAAG,CAACC,OAAvC;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBK,IAAI,CAACC,SAAL,CAAeI,GAAG,CAACE,IAAnB,CAA/B;AACAd,MAAAA,QAAQ,CAACY,GAAG,CAACE,IAAL,CAAR;AACH,KAJD,MAIK;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBU,GAAG,CAACC,OAA3B,GAAqC,QAArC,GAAgDD,GAAG,CAACG,KAAhE;AACH;AACJ,GAbb;AAeH,C,CAED;;AAEA,OAAO,SAASC,eAAT,CAA2BjB,QAA3B,EAAoCC,QAApC,EAA8C;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCH,QAApD;AAGAI,EAAAA,KAAK,CAAC,mEAAD,EAAsE;AACvEC,IAAAA,MAAM,EAAE,MAD+D;AACxDC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KAD+C;AAG/DC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA;AAAV,KAAf;AAH0D,GAAtE,CAAL,CAIaU,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBU,GAAG,CAACC,OAAvC;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBK,IAAI,CAACC,SAAL,CAAeI,GAAG,CAACE,IAAnB,CAA/B;AACAd,MAAAA,QAAQ,CAACY,GAAG,CAACE,IAAL,CAAR;AACH,KAJD,MAIK;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBU,GAAG,CAACC,OAA3B,GAAqC,QAArC,GAAgDD,GAAG,CAACG,KAAhE;AACH;AACJ,GAbb;AAeH,C,CAED;;AAEA,OAAO,SAASE,eAAT,CAA2BlB,QAA3B,EAAoCC,QAApC,EAA8C;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCH,QAApD;AAGAI,EAAAA,KAAK,CAAC,mEAAD,EAAsE;AACvEC,IAAAA,MAAM,EAAE,MAD+D;AACxDC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KAD+C;AAG/DC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA;AAAV,KAAf;AAH0D,GAAtE,CAAL,CAIaU,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCU,GAAG,CAACC,OAAvD;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCK,IAAI,CAACC,SAAL,CAAeI,GAAG,CAACE,IAAnB,CAAjD;AACAd,MAAAA,QAAQ,CAACY,GAAG,CAACE,IAAL,CAAR;AACH,KAJD,MAIK;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCU,GAAG,CAACC,OAA3C,GAAqD,QAArD,GAAgED,GAAG,CAACG,KAAhF;AACH;AACJ,GAbb;AAeH,C,CAED;;AAEA,OAAO,SAASG,cAAT,CAA0BC,MAA1B,EAAiCnB,QAAjC,EAA2C;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCK,IAAI,CAACC,SAAL,CAAeW,MAAf,CAAjD;AAGAhB,EAAAA,KAAK,CAAC,6DAAD,EAAgE;AACjEC,IAAAA,MAAM,EAAE,MADyD;AAClDC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADyC;AAGzDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACW,MAAAA,MAAM,EAACA;AAAR,KAAf;AAHoD,GAAhE,CAAL,CAKaV,IALb,CAKkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAL9B,EAMaF,IANb,CAMkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCU,GAAG,CAACC,OAAtD;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCK,IAAI,CAACC,SAAL,CAAeI,GAAG,CAACE,IAAnB,CAAhD;AACAd,MAAAA,QAAQ,CAACY,GAAG,CAACE,IAAL,CAAR;AACH,KAJD,MAIK;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCU,GAAG,CAACC,OAA1C,GAAoD,QAApD,GAA+DD,GAAG,CAACG,KAA/E;AACH;AACJ,GAdb;AAgBH,C,CAGD;;AAEA,OAAO,SAASK,eAAT,CAA0BrB,QAA1B,EAAmCsB,WAAnC,EAAgD;AACnDpB,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCH,QAAjD;AAEH,C,CAED;;AAEA,OAAO,SAASuB,WAAT,CAAsBvB,QAAtB,EAA+BwB,QAA/B,EAAwC;AAC3CtB,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCH,QAApC,GAA+C,WAA/C,GAA6DwB,QAAzE;AAEApB,EAAAA,KAAK,CAAC,sDAAD,EAAyD;AAC1DC,IAAAA,MAAM,EAAE,MADkD;AAC3CC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADkC;AAGlDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA,QAAV;AAAmBwB,MAAAA,QAAQ,EAACA;AAA5B,KAAf;AAH6C,GAAzD,CAAL,CAIad,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCU,GAAG,CAACC,OAArD;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCU,GAAG,CAACC,OAAzC,GAAmD,QAAnD,GAA8DD,GAAG,CAACG,KAA9E;AACA,aAAO,KAAP;AACH;AACJ,GAbb;AAeH,C,CACD;;AAEA,OAAO,SAASS,iBAAT,CAA4BzB,QAA5B,EAAqC0B,cAArC,EAAoD;AACvDxB,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAA0CH,QAA1C,GAAqD,iBAArD,GAAyE0B,cAArF;AAEAtB,EAAAA,KAAK,CAAC,4DAAD,EAA+D;AAChEC,IAAAA,MAAM,EAAE,MADwD;AACjDC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADwC;AAGxDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA,QAAV;AAAmB0B,MAAAA,cAAc,EAACA;AAAlC,KAAf;AAHmD,GAA/D,CAAL,CAIahB,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CU,GAAG,CAACC,OAA3D;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CU,GAAG,CAACC,OAA/C,GAAyD,QAAzD,GAAoED,GAAG,CAACG,KAApF;AACA,aAAO,KAAP;AACH;AACJ,GAbb;AAeH,C,CACD;;AAEA,OAAO,SAASW,YAAT,CAAuB3B,QAAvB,EAAgC;AAEnCE,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCH,QAAjD;AAEAI,EAAAA,KAAK,CAAC,mDAAD,EAAsD;AACvDC,IAAAA,MAAM,EAAE,MAD+C;AACxCC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KAD+B;AAG/CC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA;AAAV,KAAf;AAH0C,GAAtD,CAAL,CAIaU,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCU,GAAG,CAACC,OAAtD;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCU,GAAG,CAACC,OAA1C,GAAoD,QAApD,GAA+DD,GAAG,CAACG,KAA/E;AACA,aAAO,KAAP;AACH;AACJ,GAbb;AAeH,C,CAED;;AAEA,OAAO,SAASY,WAAT,CAAsB5B,QAAtB,EAA+B6B,QAA/B,EAAwC;AAC3C,MAAIC,GAAG,GAAG,CAAV;;AACA,MAAGD,QAAH,EAAY;AAACC,IAAAA,GAAG,GAAGD,QAAQ,CAACE,MAAf;AAAsB;;AACnC7B,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCH,QAApC,GAA+C,kBAA/C,GAAoE8B,GAApE,GAA0E,QAAtF;AAEA1B,EAAAA,KAAK,CAAC,sDAAD,EAAyD;AAC1DC,IAAAA,MAAM,EAAE,MADkD;AAC3CC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADkC;AAGlDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA,QAAV;AAAmB6B,MAAAA,QAAQ,EAACA;AAA5B,KAAf;AAH6C,GAAzD,CAAL,CAIanB,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCU,GAAG,CAACC,OAArD;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCU,GAAG,CAACC,OAAzC,GAAmD,QAAnD,GAA8DD,GAAG,CAACG,KAA9E;AACA,aAAO,KAAP;AACH;AACJ,GAbb;AAgBH,C,CAED;;AAEA,OAAO,SAASgB,kBAAT,CAA6BhC,QAA7B,EAAsCiC,YAAtC,EAAmD,CAGzD,C,CAED;;AAEA,OAAO,SAASC,YAAT,CAAuBlC,QAAvB,EAAgCoB,MAAhC,EAAuC,CAG7C,C,CAED;;AAEA,OAAO,SAASe,cAAT,CAAyBnC,QAAzB,EAAkCoC,WAAlC,EAA8C;AACjDlC,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCH,QAAvC,GAAkD,cAAlD,GAAmEoC,WAA/E;AAEAhC,EAAAA,KAAK,CAAC,yDAAD,EAA4D;AAC7DC,IAAAA,MAAM,EAAE,MADqD;AAC9CC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADqC;AAGrDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA,QAAV;AAAmBoC,MAAAA,WAAW,EAACA;AAA/B,KAAf;AAHgD,GAA5D,CAAL,CAIa1B,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCU,GAAG,CAACC,OAAvD;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCU,GAAG,CAACC,OAA3C,GAAqD,QAArD,GAAgED,GAAG,CAACG,KAAhF;AACA,aAAO,KAAP;AACH;AACJ,GAbb;AAcH,C,CAED;;AAEA,OAAO,SAASqB,eAAT,CAA0BrC,QAA1B,EAAmCsC,MAAnC,EAA0C;AAC7CpC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCH,QAAxC,GAAmD,UAAnD,GAAgEsC,MAA5E;AAEAlC,EAAAA,KAAK,CAAC,qDAAD,EAAwD;AACzDC,IAAAA,MAAM,EAAE,MADiD;AAC1CC,IAAAA,OAAO,EAAE;AACpB,sBAAe;AADK,KADiC;AAGjDC,IAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACT,MAAAA,QAAQ,EAACA,QAAV;AAAmBsC,MAAAA,MAAM,EAACA;AAA1B,KAAf;AAH4C,GAAxD,CAAL,CAIa5B,IAJb,CAIkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJ9B,EAKaF,IALb,CAKkBG,GAAG,IAAI;AACT,QAAKA,GAAG,CAACC,OAAT,EAAkB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCU,GAAG,CAACC,OAAxD;AACA,aAAO,IAAP;AACH,KAHD,MAGK;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCU,GAAG,CAACC,OAA5C,GAAsD,QAAtD,GAAiED,GAAG,CAACG,KAAjF;AACA,aAAO,KAAP;AACH;AACJ,GAbb;AAcH","sourcesContent":["import React from 'react';\n\n\n//--Returns and array of of images and related meta data from the server-----------------------------------------------\n\nexport function getAllMemoryFiles  (memoryid,callback) {\n    console.log('Memriio.getAllImages : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_memfiles_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('server response : ' + res.success);\n                        console.log('server data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getTaggedPeople  (memoryid,callback) {\n    console.log('Memriio.getTaggedPeople : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_associatedpeople_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('server response : ' + res.success);\n                        console.log('server data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getMemoryClouds  (memoryid,callback) {\n    console.log('Memriio.getMemoryclouds : memoryid ' + memoryid )\n   \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_associatedclouds_memoryid', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('getMemoryclouds server response : ' + res.success);\n                        console.log('getMemoryclouds response data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('getMemoryclouds server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n//--Returns and array of {userid,firstname,lastname} objects from the server-----------------------------------------------\n\nexport function getCloudPeople  (clouds,callback) {\n    console.log('Memriio.getCloudPeople : clouds ' + JSON.stringify(clouds) )\n    \n    \n    fetch('https://memriio-api-0.herokuapp.com/get_cloud_people_clouds', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({clouds:clouds})})\n\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('getCloudPeople server response : ' + res.success);\n                        console.log('getCloudPeople response data : ' + JSON.stringify(res.data))\n                        callback(res.data)\n                    }else{\n                        console.log('getCloudPeople server response : ' + res.success + ' with ' + res.error);  \n                    }\n                })\n\n}\n\n\n//------------------------------------------------------------\n\nexport function updateHeroImage (memoryid,heroImageid ){\n    console.log('Memriio.getAllImages : memoryid ' + memoryid )\n\n}\n\n//------------------------------------------------------------\n\nexport function updateTitle (memoryid,newTitle){\n    console.log('Memriio.updateTitle : memoryid ' + memoryid + ' title : ' + newTitle)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_title', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newTitle:newTitle})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateTitle : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateTitle : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n//------------------------------------------------------------\n\nexport function updateDescription (memoryid,newDescription){\n    console.log('Memriio.updateDescription : memoryid ' + memoryid + ' description : ' + newDescription)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_description', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newDescription:newDescription})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateDescription : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateDescription : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n//------------------------------------------------------------\n\nexport function deleteMemory (memoryid){\n    \n    console.log('Memriio.deleteMemory : memoryid ' + memoryid )\n  \n    fetch('https://memriio-api-0.herokuapp.com/delete_memory', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('deleteMemory : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('deleteMemory : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n}\n\n//------------------------------------------------------------\n\nexport function updateStory (memoryid,newStory){\n    let len = 0\n    if(newStory){len = newStory.length}\n    console.log('Memriio.updateStory : memoryid ' + memoryid + ' story.length : ' + len + ' chars')\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_story', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newStory:newStory})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateStory : server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateStory : server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n\n\n}\n\n//------------------------------------------------------------\n\nexport function updateTaggedPeople (memoryid,taggedPeople){\n   \n    \n}\n\n//------------------------------------------------------------\n\nexport function updateClouds (memoryid,clouds){\n    \n\n}\n\n//------------------------------------------------------------\n\nexport function updateLocation (memoryid,newLocation){\n    console.log('Memriio.updateLocation : memoryid ' + memoryid + ' location : ' + newLocation)\n  \n    fetch('https://memriio-api-0.herokuapp.com/set_memory_location', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,newLocation:newLocation})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('updateLocation :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('updateLocation :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n//------------------------------------------------------------\n\nexport function addTaggedPerson (memoryid,userid){\n    console.log('Memriio.addTaggedPerson : memoryid ' + memoryid + ' user : ' + userid)\n  \n    fetch('https://memriio-api-0.herokuapp.com/associatePerson', {\n        method: 'post',headers: {\n            'Content-Type':'application/json'},\n                body:JSON.stringify({memoryid:memoryid,userid:userid})})\n                .then(response => response.json())\n                .then(res => {\n                    if ( res.success ){\n                        console.log('addTaggedPerson :server response : ' + res.success);\n                        return true\n                    }else{\n                        console.log('addTaggedPerson :server response : ' + res.success + ' with ' + res.error);  \n                        return false\n                    }\n                })\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}