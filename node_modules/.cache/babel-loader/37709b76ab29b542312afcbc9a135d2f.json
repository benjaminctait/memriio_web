{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/cardcollection/card.js\";\nimport React from 'react';\nimport trash from '../images/trash.png';\nimport edit from '../images/edit.png';\nimport hero from '../images/heroshot.png';\nimport MemoryFileViewer from '../memoryviewer/memoryImageViewer';\nimport * as mem from '../memriioserver';\nimport './card.css'; //-----------------------------------------------------------------------------\n\nclass BaseCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memfiles: null,\n      viewState: 0\n    };\n\n    this.handleEditCard = () => {\n      this.props.onEdit(this.props.memory);\n    };\n\n    this.handleMoreClick = () => {\n      this.props.onShowModal(this.props.memory, this.state.memfiles);\n    };\n\n    this.handleClick = e => {\n      this.props.onCardClick(this.props.memory.memid);\n    };\n\n    this.getHeroFile = () => {\n      let hero = this.state.memfiles[0];\n      this.state.memfiles.map(memfile => {\n        if (memfile.ishero) {\n          hero = memfile;\n        }\n      });\n      return hero;\n    };\n\n    this.loadFiles = memfiles => {\n      let newMemFiles = [];\n      /* memfiles.forEach(memfile => {\n         \n          if(memfile.fileext == 'truck'){\n              let parts = memfile.thumburl.split('/')\n              let fname = parts[parts.length-2]+ '/' + parts[parts.length-1]\n              console.log('base card : loadFiles : ' + fname );\n              mem.getDownloadSignedurl(fname).then( surl => \n                  {\n                      console.log('base card : loadFiles memfile.thumbnail : ' + surl );\n                      memfile.thumburl = surl\n                  })\n          }\n          newMemFiles.push(memfile)\n      }) */\n\n      this.setState({\n        memfiles: memfiles\n      });\n    };\n\n    this.componentDidMount = () => {\n      mem.getAllMemoryFiles(this.props.memory.memid, this.loadFiles);\n    };\n\n    this.renderFileVIew = () => {\n      if (this.state.memfiles) {\n        let memf = this.getHeroFile();\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'imageContainer',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(MemoryFileViewer, {\n          memfile: memf,\n          thumbStyleClass: 'Xbasecardimg',\n          fileStyleClass: 'Xbasecardimg',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }));\n      }\n    };\n  }\n\n  //-----------------------------------------------------------------------------\n  render() {\n    const fileview = this.renderFileVIew();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"basecard\",\n      id: 'memcard' + this.props.memory.memid,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, fileview, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, this.props.memory.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"f6 lh-copy measure mt2 mid-gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, this.props.memory.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controlBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link dim controlFont \",\n      onClick: this.handleMoreClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"More\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link dim controlFont \",\n      onClick: this.handleEditCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"[..]\"))));\n  }\n\n} //-----------------------------------------------------------------------------\n\n\nclass ShortCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      memfiles: null\n    };\n\n    this.getHeroFile = () => {\n      let hero = this.state.memfiles[0];\n      this.state.memfiles.map(memfile => {\n        if (memfile.ishero) {\n          hero = memfile;\n        }\n      });\n      return hero;\n    };\n\n    this.loadFiles = memfiles => {\n      memfiles.forEach(memfile => {\n        console.log('memfile : ' + memfile);\n\n        if (memfile.fileext == 'mp4') {\n          let parts = memfile.thumburl.split('/');\n          let fname = parts[parts.length - 1];\n          mem.getDownloadSignedurl(fname).then(surl => {\n            memfile.thumburl = surl;\n          });\n        }\n      });\n      this.setState({\n        memfiles: memfiles\n      });\n    };\n\n    this.componentDidMount = () => {\n      console.log('didload : ');\n      mem.getAllMemoryFiles(this.props.memory.memid, this.loadFiles);\n    };\n\n    this.handleEditCard = () => {\n      this.props.onEdit(this.props.memory);\n    };\n\n    this.handleMoreClick = () => {\n      this.props.onShowModal(this.props.memory, this.state.memfiles);\n    };\n\n    this.renderFileVIew = () => {\n      if (this.state.memfiles) {\n        let memf = this.getHeroFile(); //return <img alt='memory' src={memf.thumburl} className='shortcardimg'/>\n\n        return /*#__PURE__*/React.createElement(MemoryFileViewer, {\n          memfile: memf,\n          thumbStyleClass: 'Xshortcardimg',\n          fileStyleClass: 'Xshortcardimg',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }\n        });\n      }\n    };\n  }\n\n  //-----------------------------------------------------------------------------\n  render() {\n    let fileview = this.renderFileVIew();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shortcard \",\n      onClick: this.props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"f6 lh-copy measure mt2 middlecenter white i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, this.props.memory.description), fileview, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controlBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link dim controlFont\",\n      onClick: this.handleMoreClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \"More\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"link dim controlFont\",\n      onClick: this.handleEditCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, \"[..]\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controlBackground\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} //-----------------------------------------------------------------------------\n//  NEW CARD CLASS\n//\n//-----------------------------------------------------------------------------\n\n\nclass MemoryImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileurl: null,\n      index: 0\n    };\n\n    this.handleClick = () => {\n      console.log('image clicked');\n    };\n\n    this.handleMakeHero = () => {\n      console.log('MemoryCard: handleMakeHero :' + this.props.memfile.fileurl);\n      this.props.setAsHero(this.props.memfile);\n    };\n\n    this.handleEditImage = () => {\n      console.log('edit image index :' + this.props.memfile.fileurl);\n    };\n\n    this.handleDeleteImage = () => {\n      console.log('delete image index :' + this.props.memfile.fileurl);\n      this.props.deleteImage(this.props.memfile);\n    };\n\n    this.renderEditControls = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bottomcenter self-center: center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"dib ma4 grow-large\",\n        src: hero,\n        alt: \"x\",\n        height: \"30\",\n        width: \"30\",\n        onClick: this.handleMakeHero,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"dib ma4 grow-large\",\n        src: edit,\n        alt: \"x\",\n        height: \"30\",\n        width: \"30\",\n        onClick: this.handleEditImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"dib ma4 grow-large\",\n        src: trash,\n        alt: \"x\",\n        height: \"30\",\n        width: \"30\",\n        onClick: this.handleDeleteImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    this.state = {\n      fileurl: props.fileurl,\n      fileext: props.fileext,\n      index: props.index\n    };\n    console.log('MemoryImage constructor : key' + this.props.index);\n  }\n\n  //-----------------------------------------------------------------------------\n  render() {\n    const controls = this.renderEditControls();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ma3 bg-black shadow-5 pointer \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"memory\",\n      src: this.props.memfile.fileurl,\n      className: \"vh-75 mvh75\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }), \"''\", controls);\n  }\n\n} //-----------------------------------------------------------------------------\n\n\nexport { BaseCard, MemoryImage, ShortCard };","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/cardcollection/card.js"],"names":["React","trash","edit","hero","MemoryFileViewer","mem","BaseCard","Component","state","memfiles","viewState","handleEditCard","props","onEdit","memory","handleMoreClick","onShowModal","handleClick","e","onCardClick","memid","getHeroFile","map","memfile","ishero","loadFiles","newMemFiles","setState","componentDidMount","getAllMemoryFiles","renderFileVIew","memf","render","fileview","title","description","ShortCard","forEach","console","log","fileext","parts","thumburl","split","fname","length","getDownloadSignedurl","then","surl","onClick","MemoryImage","constructor","fileurl","index","handleMakeHero","setAsHero","handleEditImage","handleDeleteImage","deleteImage","renderEditControls","controls"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport trash from '../images/trash.png'\nimport edit from '../images/edit.png'\nimport hero from '../images/heroshot.png'\nimport MemoryFileViewer from '../memoryviewer/memoryImageViewer'\nimport * as mem from '../memriioserver'\nimport './card.css';\n\n\n//-----------------------------------------------------------------------------\n\n\nclass BaseCard extends React.Component{\n\nstate = {\n    memfiles:null,\n    viewState:0\n}\n\n//------------------------------------------------------------------------------\n\nhandleEditCard = () =>{\n    \n    this.props.onEdit(this.props.memory)\n}\n\n//-----------------------------------------------------------------------------\n\nhandleMoreClick =() =>{\n\n    this.props.onShowModal(this.props.memory,this.state.memfiles)\n    \n}\n\nhandleClick = (e) =>{\n    \n    this.props.onCardClick(this.props.memory.memid)\n}\n//-----------------------------------------------------------------------------\n\ngetHeroFile = () => {\n    let hero = this.state.memfiles[0]    \n    this.state.memfiles.map(memfile => {\n        if(memfile.ishero){           \n            hero = memfile\n        }\n    })\n    return hero\n}\n\n//-----------------------------------------------------------------------------\n\nloadFiles = (memfiles) => {\n    let newMemFiles = []\n    /* memfiles.forEach(memfile => {\n       \n        if(memfile.fileext == 'truck'){\n            let parts = memfile.thumburl.split('/')\n            let fname = parts[parts.length-2]+ '/' + parts[parts.length-1]\n            console.log('base card : loadFiles : ' + fname );\n            mem.getDownloadSignedurl(fname).then( surl => \n                {\n                    console.log('base card : loadFiles memfile.thumbnail : ' + surl );\n                    memfile.thumburl = surl\n                })\n        }\n        newMemFiles.push(memfile)\n    }) */\n    this.setState({memfiles:memfiles})\n}\n\n//-----------------------------------------------------------------------------\n\ncomponentDidMount =  () => {\n    \n    mem.getAllMemoryFiles(this.props.memory.memid,this.loadFiles)\n}\n\n//-----------------------------------------------------------------------------\n\nrenderFileVIew = () => {\n    if(this.state.memfiles){\n        let memf = this.getHeroFile()\n        return (\n            <div className = {'imageContainer'}>\n                <MemoryFileViewer \n                    memfile={memf}\n                    thumbStyleClass={'Xbasecardimg'}\n                    fileStyleClass={'Xbasecardimg'}\n                />\n            </div>\n        )\n    }\n}\n\n//-----------------------------------------------------------------------------\n\n    render(){\n        const fileview = this.renderFileVIew()\n            return (\n                <div className='basecard'\n                    id={'memcard'+this.props.memory.memid}\n                    onClick={this.handleClick}\n                >\n\n                    {fileview}\n                    <div>\n                        <h3>{this.props.memory.title}</h3>\n                        <p className=\"f6 lh-copy measure mt2 mid-gray\">{this.props.memory.description}</p>\n                        <div className=\"controlBox\">\n                            <a className=\"link dim controlFont \" onClick={this.handleMoreClick  } >More</a>\n                            <a className=\"link dim controlFont \" onClick={this.handleEditCard } >[..]</a>\n                        </div>\n                    </div>\n                </div>\n            )\n    }\n\n}\n\n\n//-----------------------------------------------------------------------------\n\nclass ShortCard extends React.Component{\n\n\n    state = {\n        memfiles:null\n    }\n    //-----------------------------------------------------------------------------\n\ngetHeroFile = () => {\n    let hero = this.state.memfiles[0]\n    \n    this.state.memfiles.map(memfile => {\n        if(memfile.ishero){\n            \n            hero = memfile\n        }\n    })\n    return hero\n}\n\n//-----------------------------------------------------------------------------\n\nloadFiles = (memfiles) => {\n\n    memfiles.forEach(memfile => {\n        console.log('memfile : ' + memfile);\n        \n        if(memfile.fileext == 'mp4'){\n            let parts = memfile.thumburl.split('/')\n            let fname = parts[parts.length-1]\n            mem.getDownloadSignedurl(fname).then( surl => {memfile.thumburl = surl})\n        }\n    })\n    this.setState({memfiles:memfiles})\n}\n\n//-----------------------------------------------------------------------------\n\ncomponentDidMount =  () => {\n    console.log('didload : ');\n    mem.getAllMemoryFiles(this.props.memory.memid,this.loadFiles)\n}\n\nhandleEditCard = () =>{\n    this.props.onEdit(this.props.memory)\n}\n\n//-----------------------------------------------------------------------------\n\nhandleMoreClick =() =>{\n    this.props.onShowModal(this.props.memory,this.state.memfiles)\n    \n}\n\n//-----------------------------------------------------------------------------\n\nrenderFileVIew = () => {\n\n    if(this.state.memfiles) {\n        let memf = this.getHeroFile()\n        //return <img alt='memory' src={memf.thumburl} className='shortcardimg'/>\n\n        return (\n            \n            <MemoryFileViewer \n                memfile={memf}\n                thumbStyleClass={'Xshortcardimg'}\n                fileStyleClass={'Xshortcardimg'}\n            />\n         \n        )\n    }\n}\n\n//-----------------------------------------------------------------------------\n\n    render(){\n        let fileview = this.renderFileVIew()\n        return (\n            \n            <div className='shortcard '\n                onClick={this.props.onClick}\n            >\n                <p className=\"f6 lh-copy measure mt2 middlecenter white i\">{this.props.memory.description}</p>\n                {fileview}\n                \n                <div className=\"controlBox\">\n                    \n                    <a className=\"link dim controlFont\" onClick={this.handleMoreClick  }>More</a>\n                    <a className=\"link dim controlFont\" onClick={this.handleEditCard } >[..]</a>\n                    <div className='controlBackground'></div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n//-----------------------------------------------------------------------------\n//  NEW CARD CLASS\n//\n//-----------------------------------------------------------------------------\n\nclass MemoryImage extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            fileurl:props.fileurl,\n            fileext: props.fileext,\n            index:props.index,\n        }\n        console.log('MemoryImage constructor : key' + this.props.index);\n        \n        \n    }\n    state={\n        fileurl:null,\n        index:0,\n    }\n\n//-----------------------------------------------------------------------------\n\nhandleClick = () =>{\n    console.log('image clicked')\n    \n}\n\n//-----------------------------------------------------------------------------\n\nhandleMakeHero = () =>{\n    console.log('MemoryCard: handleMakeHero :' + this.props.memfile.fileurl)\n    this.props.setAsHero(this.props.memfile)\n    \n}\n\n//-----------------------------------------------------------------------------\n\nhandleEditImage = () =>{\n    console.log('edit image index :' + this.props.memfile.fileurl)\n    \n}\n\n//-----------------------------------------------------------------------------\n\nhandleDeleteImage = () =>{\n    console.log('delete image index :' + this.props.memfile.fileurl)\n    this.props.deleteImage(this.props.memfile)\n    \n}\n\n//-----------------------------------------------------------------------------\n\nrenderEditControls = () => {\n    return(\n\n        <div className='bottomcenter self-center: center'>\n            <img \n                className = 'dib ma4 grow-large' \n                src={hero} alt=\"x\" \n                height=\"30\" \n                width=\"30\"\n                onClick={this.handleMakeHero}\n            ></img>\n            <img \n                className = 'dib ma4 grow-large' \n                src={edit} \n                alt=\"x\" \n                height=\"30\" \n                width=\"30\"\n                onClick={this.handleEditImage}\n            ></img>\n            <img  className = 'dib ma4 grow-large' \n                src={trash} \n                alt=\"x\" \n                height=\"30\" \n                width=\"30\"\n                onClick={this.handleDeleteImage}\n            ></img>\n        </div>\n    )\n}\n//-----------------------------------------------------------------------------\n\n    render(){\n        const controls = this.renderEditControls()\n        return (\n        \n            <div className='ma3 bg-black shadow-5 pointer '>\n                <img alt='memory' src={this.props.memfile.fileurl} className='vh-75 mvh75'/>''\n                {controls}\n                \n            </div>\n        )\n    }\n\n}\n\n//-----------------------------------------------------------------------------\n\nexport {BaseCard,MemoryImage,ShortCard};\n\n"]},"metadata":{},"sourceType":"module"}