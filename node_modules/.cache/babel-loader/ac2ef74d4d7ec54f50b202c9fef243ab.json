{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BaseCard, MemoryImage, ShortCard } from '../cardcollection/card';\nimport { SubTag } from '../buttons/buttons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css';\nimport logo from \"../navigation/memriio_logo.png\";\nimport { Icon, ICONS } from '../icons/icons';\nimport WordExctractor from 'keyword-extractor';\nimport { getAllMemoryFiles, getTaggedPeople, getMemoryClouds, getCloudPeople, updateHeroImage, updateDescription, updateLocation, updateStory, updateTitle, updateTaggedPeople, updateClouds, deleteMemory, addTaggedPerson, deleteTaggedPerson, getUserClouds, deleteTaggedCloud, addTaggedCloud, updateCardType, setMemorySearchWords, getMemorySearchWords, deleteMemoryImage, setHeroImage } from '../memriioserver';\nimport { Container, Row, Col, Form, Carousel, Dropdown, DropdownButton } from 'react-bootstrap';\n\nclass MemoryEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.titleChange = event => {\n      this.setState({\n        title: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.descriptionChange = event => {\n      this.setState({\n        description: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.locationChange = event => {\n      this.setState({\n        location: event.target.value,\n        uploadNeeded: true\n      });\n    };\n\n    this.handleExpandStory = () => {\n      const expanded = !this.state.storyExpanded;\n      this.setState({\n        storyExpanded: expanded\n      });\n      console.log('storyExpanded ' + this.state.storyExpanded);\n    };\n\n    this.populateSearchWords = words => {\n      words.map(worditem => {\n        this.state.keywords.push(worditem.keyword);\n      });\n      this.setState({\n        searchWords: words\n      });\n    };\n\n    this.populateCloudInfo = clouds => {\n      this.setState({\n        memoryClouds: clouds\n      });\n      getCloudPeople(clouds, people => {\n        this.setState({\n          cloudPeople: people\n        });\n      });\n    };\n\n    this.populateUserClouds = clouds => {\n      console.log('populateUserClouds : clouds : ' + JSON.stringify(clouds));\n      this.setState({\n        userClouds: clouds\n      });\n    };\n\n    this.handleDeleteMemory = () => {\n      console.log('handleDeleteMemory ' + this.state.memid);\n      deleteMemory(this.state.memid);\n      this.props.onRouteChange('memoryUpdated');\n    };\n\n    this.updateMemory = () => {\n      updateTitle(this.state.memid, this.state.title);\n      eDescription(this.state.memid, this.state.description);\n      updateLocation(this.state.memid, this.state.location);\n      updateStory(this.state.memid, this.state.story);\n      setMemorySearchWords(this.state.memid, this.state.searchWords);\n      this.props.onRouteChange('memoryUpdated');\n    };\n\n    this.handleStoryChange = event => {\n      let addarray = [];\n      let story = event.target.value;\n      let words = WordExctractor.extract(story, {\n        language: \"english\",\n        remove_digits: true,\n        return_changed_case: true,\n        remove_duplicates: true\n      });\n      words.map(word => {\n        addarray.push({\n          keyword: word,\n          strength: 0\n        });\n      });\n      this.setState({\n        searchWords: addarray,\n        keywords: words,\n        uploadNeeded: true,\n        story: story\n      });\n      console.log('handleStoryChange  : searchwords ' + JSON.stringify(this.state.keywords));\n    };\n\n    this.addPerson = (userid, event) => {\n      let alreadyTagged = false;\n      let newArray = this.state.taggedPeople;\n      this.state.taggedPeople.map(person => {\n        if (person.userid == userid) {\n          alreadyTagged = true;\n        }\n      });\n\n      if (!alreadyTagged) {\n        let p = this.getCloudPersonDetails(userid);\n        if (p) newArray.push(p);\n        this.setState({\n          taggedPeople: newArray\n        });\n        console.log('addPerson memid is ' + this.state.memid);\n        addTaggedPerson(this.state.memid, p.userid);\n      }\n    };\n\n    this.getCloudPersonDetails = userid => {\n      let person = null;\n      this.state.cloudPeople.map(p => {\n        if (p.userid == userid) {\n          person = p;\n        }\n      });\n      return person;\n    };\n\n    this.getUserCloudDetails = cloudid => {\n      let cloud = null;\n      this.state.userClouds.map(c => {\n        if (c.id == cloudid) {\n          cloud = c;\n        }\n      });\n      return cloud;\n    };\n\n    this.handleDeleteTaggedPerson = userid => {\n      let array = this.state.taggedPeople;\n      this.state.taggedPeople.map((p, index) => {\n        if (p.userid == userid) {\n          array.splice(index, 1);\n        }\n      });\n      this.setState({\n        taggedPeople: array\n      });\n      deleteTaggedPerson(this.state.memid, userid);\n    };\n\n    this.handleDeleteCloud = cloudid => {\n      let array = this.state.memoryClouds;\n      this.state.memoryClouds.map((cloud, index) => {\n        if (cloud.id == cloudid) array.splice(index, 1);\n      });\n      this.setState({\n        memoryClouds: array\n      });\n      deleteTaggedCloud(this.state.memid, cloudid);\n    };\n\n    this.handleCardSelect = cardid => {\n      console.log('card select : ' + cardid);\n      updateCardType(this.state.memid, cardid);\n    };\n\n    this.handleSearchWordsChanged = value => {\n      console.log('handleSearchWordsChanged : ' + value);\n    };\n\n    this.handleAddCloud = cloudid => {\n      let alreadyTagged = false;\n      let newArray = this.state.memoryClouds;\n      this.state.memoryClouds.map(cloud => {\n        if (cloud.id == cloudid) {\n          alreadyTagged = true;\n        }\n      });\n\n      if (!alreadyTagged) {\n        let c = this.getUserCloudDetails(cloudid);\n        if (c) newArray.push(c);\n        this.setState({\n          memoryClouds: newArray\n        });\n        console.log('handleAddCloud cloud is ' + cloudid);\n        addTaggedCloud(this.state.memid, cloudid);\n      }\n    };\n\n    this.handleDeleteMemoryImage = memfile => {\n      let addarray = [];\n      console.log('handleDeleteMemoryImage : index ' + JSON.stringify(memfile));\n\n      if (memfile.hero) {\n        alert('Cannot delete a hero shot');\n      } else {\n        deleteMemoryImage(this.state.memid, memfile.fileurl);\n        this.state.memfiles.map(mf => {\n          console.log('handleDeleteMemoryImage mf : ' + mf.fileurl);\n\n          if (mf.fileurl !== memfile.fileurl) {\n            addarray.push(mf);\n          }\n        });\n        console.log('handleDeleteMemoryImage addarray : ' + JSON.stringify(addarray));\n        this.setState({\n          memfiles: addarray\n        });\n      }\n    };\n\n    this.handleSetAsHero = memfile => {\n      console.log('handleSetAsHero : memfile ' + JSON.stringify(memfile));\n\n      if (!memfile.hero) {\n        setHeroImage(this.state.memid, memfile.fileurl);\n        this.setState({\n          fileurl: memfile.fileurl\n        });\n      }\n    };\n\n    console.log('location ' + props.memory.title);\n    this.state = {\n      memid: props.memory.memid,\n      title: props.memory.title,\n      description: props.memory.description,\n      story: props.memory.story,\n      location: props.memory.location,\n      userid: props.memory.userid,\n      fileurl: props.memory.fileurl,\n      cardtype: props.memory.cardtype,\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      keywords: [],\n      // this is temporary   \n      memfiles: null,\n      cloudPeople: [],\n      userClouds: [],\n      uploadNeeded: false,\n      storyExpanded: false\n    };\n  } //------------------------------------------------------------------------\n\n\n  componentDidMount() {\n    getAllMemoryFiles(this.props.memory.memid, memoryFiles => {\n      this.setState({\n        memfiles: memoryFiles\n      });\n    });\n    getTaggedPeople(this.props.memory.memid, people => {\n      this.setState({\n        taggedPeople: people\n      });\n    });\n    getMemoryClouds(this.props.memory.memid, clouds => {\n      this.populateCloudInfo(clouds);\n    });\n    getUserClouds(this.props.memory.userid, clouds => {\n      this.populateUserClouds(clouds);\n    });\n    getMemorySearchWords(this.props.memory.memid, words => {\n      this.populateSearchWords(words);\n    });\n  } //------------------------------------------------------------------------\n\n\n  //----------------------------------------------------------------------------------------------------------\n  render() {\n    let imageArray = [];\n    let upperform = null;\n    let lowerform = null;\n\n    if (this.state.memfiles) {\n      this.state.memfiles.map((item, index) => {\n        imageArray.push({\n          src: item.fileurl\n        });\n      });\n    } else {//do something else here\n    }\n\n    if (!this.state.storyExpanded) {\n      upperform = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.title,\n        onChange: this.titleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2 pb0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.description,\n        onChange: this.descriptionChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2 pb0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }\n      }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.location,\n        onChange: this.locationChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }\n      }, \"Tagged People\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dib  w-100 float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 29\n        }\n      }, this.state.taggedPeople.map(person => {\n        let fullname = person.firstname + ' ' + person.lastname;\n        return /*#__PURE__*/React.createElement(SubTag, {\n          tagKey: person.userid,\n          text: fullname,\n          onClick: () => this.handleDeleteTaggedPerson(person.userid),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 48\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex ma1 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        size: \"sm\",\n        title: \"++\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 37\n        }\n      }, this.state.cloudPeople.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: person.userid.toString(),\n          onSelect: this.addPerson,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 49\n          }\n        }, person.firstname + ' ' + person.lastname);\n      })))), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }\n      }, \"Memory Clouds\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dib  w-100 float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 29\n        }\n      }, this.state.memoryClouds.map(cloud => {\n        return /*#__PURE__*/React.createElement(SubTag, {\n          tagKey: cloud.id,\n          text: cloud.name,\n          onClick: () => this.handleDeleteCloud(cloud.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 48\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex ma1 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        id: \"dropdown-basic-button\",\n        size: \"sm\",\n        title: \"++\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 37\n        }\n      }, this.state.userClouds.map((cloud, index) => {\n        return /*#__PURE__*/React.createElement(Dropdown.Item, {\n          eventKey: cloud.id.toString(),\n          onSelect: this.handleAddCloud,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 49\n          }\n        }, cloud.name);\n      })))));\n      lowerform = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex w-100 justify-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \" W-50 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 29\n        }\n      }, \"Story\"), /*#__PURE__*/React.createElement(Icon, {\n        icon: ICONS.CHEVRON_UP,\n        onClick: this.handleExpandStory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"10\",\n        value: this.state.story,\n        onChange: this.handleStoryChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }\n      }));\n    } else {\n      upperform = null;\n      lowerform = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inline-flex w-100 justify-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \" W-50 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 29\n        }\n      }, \"Story\"), /*#__PURE__*/React.createElement(Icon, {\n        icon: ICONS.CHEVRON_DOWN,\n        onClick: this.handleExpandStory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Form.Control, {\n        className: \"mvh60  \",\n        as: \"textarea\",\n        rows: \"10\",\n        value: this.state.story,\n        onChange: this.handleStoryChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2 pb0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }, \"Key Words\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        value: this.state.keywords,\n        onChange: this.handleSearchWordsChanged,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }));\n    }\n\n    if (this.props.memory && this.state.memfiles) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr4-ns pa2\",\n        onClick: () => this.props.onRouteChange(\"home\"),\n        href: \"#\",\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 37\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray  f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.updateMemory,\n        href: \"#\",\n        title: \"Post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 37\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleDeleteMemory,\n        className: \"link dim dark-gray f4-ns dib\",\n        href: \"#\",\n        title: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 37\n        }\n      }, \"Delete\"))), /*#__PURE__*/React.createElement(Container, {\n        fluid: \"xl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        float: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        className: \"ba pa2 br3\",\n        autoPlay: false,\n        interval: 1200000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 29\n        }\n      }, this.state.memfiles.map((item, i) => {\n        return /*#__PURE__*/React.createElement(Carousel.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(MemoryImage, {\n          key: i,\n          memfile: item,\n          deleteImage: this.handleDeleteMemoryImage,\n          setAsHero: this.handleSetAsHero,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 45\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ba pa2 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 29\n        }\n      }, upperform, lowerform))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        className: \"ba pa2 br3 \",\n        interval: 1200000,\n        nextIcon: /*#__PURE__*/React.createElement(Icon, {\n          icon: ICONS.CHEVRON_RIGHT,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 45\n          }\n        }),\n        prevIcon: /*#__PURE__*/React.createElement(Icon, {\n          icon: ICONS.CHEVRON_LEFT,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 45\n          }\n        }),\n        onSelect: this.handleCardSelect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Carousel.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(BaseCard, {\n        key: \"1\",\n        memory: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Carousel.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(ShortCard, {\n        key: \"2\",\n        memory: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 38\n        }\n      })))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 17\n        }\n      }, \"No Memory To Display\");\n    }\n  }\n\n} //------------------------------------------------------------------------    \n\n\nexport default MemoryEditor;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js"],"names":["React","useState","ReactDOM","BaseCard","MemoryImage","ShortCard","SubTag","logo","Icon","ICONS","WordExctractor","getAllMemoryFiles","getTaggedPeople","getMemoryClouds","getCloudPeople","updateHeroImage","updateDescription","updateLocation","updateStory","updateTitle","updateTaggedPeople","updateClouds","deleteMemory","addTaggedPerson","deleteTaggedPerson","getUserClouds","deleteTaggedCloud","addTaggedCloud","updateCardType","setMemorySearchWords","getMemorySearchWords","deleteMemoryImage","setHeroImage","Container","Row","Col","Form","Carousel","Dropdown","DropdownButton","MemoryEditor","Component","constructor","props","titleChange","event","setState","title","target","value","uploadNeeded","descriptionChange","description","locationChange","location","handleExpandStory","expanded","state","storyExpanded","console","log","populateSearchWords","words","map","worditem","keywords","push","keyword","searchWords","populateCloudInfo","clouds","memoryClouds","people","cloudPeople","populateUserClouds","JSON","stringify","userClouds","handleDeleteMemory","memid","onRouteChange","updateMemory","eDescription","story","handleStoryChange","addarray","extract","language","remove_digits","return_changed_case","remove_duplicates","word","strength","addPerson","userid","alreadyTagged","newArray","taggedPeople","person","p","getCloudPersonDetails","getUserCloudDetails","cloudid","cloud","c","id","handleDeleteTaggedPerson","array","index","splice","handleDeleteCloud","handleCardSelect","cardid","handleSearchWordsChanged","handleAddCloud","handleDeleteMemoryImage","memfile","hero","alert","fileurl","memfiles","mf","handleSetAsHero","memory","cardtype","componentDidMount","memoryFiles","render","imageArray","upperform","lowerform","item","src","fullname","firstname","lastname","toString","name","CHEVRON_UP","CHEVRON_DOWN","i","CHEVRON_RIGHT","CHEVRON_LEFT"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BaseCard,MemoryImage,ShortCard} from '../cardcollection/card'\nimport {SubTag} from '../buttons/buttons'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css'\nimport logo from \"../navigation/memriio_logo.png\"\nimport {Icon, ICONS} from '../icons/icons'\nimport WordExctractor from 'keyword-extractor'\n\n\n\nimport {getAllMemoryFiles, \n        getTaggedPeople,\n        getMemoryClouds,\n        getCloudPeople,\n        updateHeroImage,\n        updateDescription,\n        updateLocation,\n        updateStory,\n        updateTitle,\n        updateTaggedPeople,\n        updateClouds,\n        deleteMemory,\n        addTaggedPerson,\n        deleteTaggedPerson,\n        getUserClouds,\n        deleteTaggedCloud,\n        addTaggedCloud,\n        updateCardType,\n        setMemorySearchWords,\n        getMemorySearchWords,\n        deleteMemoryImage,\n        setHeroImage\n       \n       } from '../memriioserver'\n       \n\nimport {Container,\n        Row,\n        Col,\n        Form,\n        Carousel,\n  \n        Dropdown,\n        DropdownButton,\n    \n        } from 'react-bootstrap'\n\n\nclass MemoryEditor extends React.Component{\n\n    constructor(props){\n        super(props);\n        console.log('location ' + props.memory.title);\n        \n        this.state = {\n                memid:props.memory.memid,\n                title:props.memory.title,\n                description:props.memory.description,\n                story:props.memory.story,\n                location:props.memory.location,\n                userid:props.memory.userid,\n                fileurl:props.memory.fileurl,\n                cardtype:props.memory.cardtype,\n\n                taggedPeople:[],\n                memoryClouds:[],\n                searchWords:[], \n                keywords:[],    // this is temporary   \n                memfiles:null,\n                cloudPeople:[],\n                userClouds:[],\n                \n        \n                uploadNeeded:false,\n                storyExpanded:false,\n            }\n            \n    }    \n\n    \n\n//------------------------------------------------------------------------\n\n    componentDidMount(){\n\n       \n        getAllMemoryFiles    (this.props.memory.memid,((memoryFiles)=>{this.setState({memfiles:memoryFiles})}))\n        getTaggedPeople      (this.props.memory.memid,((people)=>{this.setState({taggedPeople:people})}))\n        getMemoryClouds      (this.props.memory.memid,((clouds)=>{this.populateCloudInfo(clouds)}))\n        getUserClouds        (this.props.memory.userid,((clouds =>{this.populateUserClouds(clouds)})))\n        getMemorySearchWords (this.props.memory.memid,((words =>{this.populateSearchWords(words)})))\n\n    }\n\n    \n\n//------------------------------------------------------------------------\n\ntitleChange         = (event) => {this.setState({title:event.target.value,uploadNeeded:true})}\ndescriptionChange   = (event) => {this.setState({description:event.target.value,uploadNeeded:true})}\nlocationChange      = (event) => {this.setState({location:event.target.value,uploadNeeded:true})}\n\n//------------------------------------------------------------------------\n\nhandleExpandStory   =  ()   =>   {\n    const expanded = !this.state.storyExpanded\n    this.setState({storyExpanded:expanded})\n    console.log('storyExpanded ' + this.state.storyExpanded);\n    \n}\n\n//------------------------------------------------------------------------\n\npopulateSearchWords = (words) =>{\n    words.map(worditem =>{\n        this.state.keywords.push(worditem.keyword)\n    })\n    this.setState({searchWords:words})\n}\n\n//------------------------------------------------------------------------\n\npopulateCloudInfo = (clouds) =>{\n\n    this.setState({memoryClouds:clouds})\n    getCloudPeople (clouds,((people)=>{this.setState({cloudPeople:people})}))\n\n    \n}\n\n//------------------------------------------------------------------------\n\npopulateUserClouds = (clouds) =>{\n\n    console.log('populateUserClouds : clouds : ' +JSON.stringify(clouds));\n    \n    this.setState({userClouds:clouds})\n    \n}\n\n//------------------------------------------------------------------------\n\nhandleDeleteMemory = () =>{\n    console.log('handleDeleteMemory ' + this.state.memid);\n    deleteMemory(this.state.memid)\n    this.props.onRouteChange('memoryUpdated')\n}\n\n\n//------------------------------------------------------------------------\n\nupdateMemory = () =>{\n\n    updateTitle          ( this.state.memid,this.state.title )    \n    eDescription    ( this.state.memid,this.state.description )\n    updateLocation       ( this.state.memid,this.state.location )\n    updateStory          ( this.state.memid,this.state.story )\n    setMemorySearchWords ( this.state.memid,this.state.searchWords ) \n    \n    \n\n    this.props.onRouteChange('memoryUpdated')\n\n}\n\n\n//------------------------------------------------------------------------\nhandleStoryChange = (event) =>{\n    let addarray =[]\n    \n    let story = event.target.value\n    let words = WordExctractor.extract(story,\n                                        {\n                                            language:\"english\",\n                                            remove_digits: true,\n                                            return_changed_case:true,\n                                            remove_duplicates: true\n                                        });\n    words.map(word =>{\n        addarray.push({\n            keyword:word,\n            strength:0\n        })\n    })\n   \n    this.setState({searchWords:addarray,keywords:words,uploadNeeded:true,story:story})\n    console.log('handleStoryChange  : searchwords ' + JSON.stringify(this.state.keywords));\n}\n\n//------------------------------------------------------------------------\n\naddPerson = (userid,event) =>{\n    let alreadyTagged = false\n    let newArray = this.state.taggedPeople\n    \n    this.state.taggedPeople.map(person =>{\n        \n       if(person.userid == userid){\n            alreadyTagged = true\n        }\n    })\n    \n    if(!alreadyTagged){\n        let p = this.getCloudPersonDetails(userid)\n        if(p) newArray.push(p)\n        this.setState({taggedPeople:newArray})\n        console.log('addPerson memid is ' + this.state.memid);\n        \n        addTaggedPerson(this.state.memid ,p.userid)\n    }\n}\n\n//------------------------------------------------------------------------\n\ngetCloudPersonDetails = (userid) =>{\n    let person = null\n    this.state.cloudPeople.map(p =>{\n        if(p.userid == userid){person = p}\n    })\n    return person\n}\n\n//------------------------------------------------------------------------\n\ngetUserCloudDetails = (cloudid) =>{\n    let cloud = null\n    this.state.userClouds.map(c =>{\n        if(c.id == cloudid){cloud = c}\n    })\n    return cloud\n}\n\n//------------------------------------------------------------------------\n\nhandleDeleteTaggedPerson = (userid) =>{\n    \n    let array = this.state.taggedPeople\n    \n    this.state.taggedPeople.map((p,index) =>{\n        if(p.userid == userid){\n            array.splice(index,1)\n        }\n    })\n    this.setState({taggedPeople:array})\n    deleteTaggedPerson(this.state.memid ,userid)\n}\n\n//------------------------------------------------------------------------\n\nhandleDeleteCloud = (cloudid) =>{\n    let array = this.state.memoryClouds\n    this.state.memoryClouds.map((cloud,index) =>{\n        if(cloud.id == cloudid) array.splice(index,1)\n    })\n    this.setState({memoryClouds:array})\n    deleteTaggedCloud(this.state.memid,cloudid)\n}\n//------------------------------------------------------------------------\n\nhandleCardSelect = (cardid) =>{\n    console.log('card select : ' + cardid);\n    updateCardType(this.state.memid,cardid)\n\n}\n\n//------------------------------------------------------------------------\n\nhandleSearchWordsChanged = (value) => {\n    console.log('handleSearchWordsChanged : '+ value);\n    \n}\n\n//------------------------------------------------------------------------\n\nhandleAddCloud = (cloudid) =>{\n    let alreadyTagged = false\n    let newArray = this.state.memoryClouds\n    \n    this.state.memoryClouds.map(cloud =>{\n        \n       if(cloud.id == cloudid){\n            alreadyTagged = true\n        }\n    })\n    \n    if(!alreadyTagged){\n        let c = this.getUserCloudDetails(cloudid)\n        if(c) newArray.push(c)\n        this.setState({memoryClouds:newArray})\n        console.log('handleAddCloud cloud is ' + cloudid);\n        \n        addTaggedCloud(this.state.memid ,cloudid)\n    }\n}\n\n//------------------------------------------------------------------------\n\nhandleDeleteMemoryImage = (memfile) =>{\n    let addarray = []\n    console.log('handleDeleteMemoryImage : index ' + JSON.stringify(memfile));\n    if(memfile.hero){\n        alert('Cannot delete a hero shot')\n    }else{\n        deleteMemoryImage ( this.state.memid, memfile.fileurl)\n        this.state.memfiles.map(mf => { \n            console.log('handleDeleteMemoryImage mf : ' + mf.fileurl );\n            \n            if(mf.fileurl !== memfile.fileurl){\n                addarray.push(mf)}\n            })\n            console.log('handleDeleteMemoryImage addarray : ' + JSON.stringify(addarray) );\n        this.setState({memfiles:addarray})\n    }\n\n}\n\n//----------------------------------------------------------------------------------------------------------\n\nhandleSetAsHero = (memfile) =>{\n    \n    console.log('handleSetAsHero : memfile ' + JSON.stringify(memfile));\n    if(!memfile.hero){    \n        setHeroImage ( this.state.memid, memfile.fileurl)        \n        this.setState({fileurl:memfile.fileurl})\n    }\n\n}\n\n\n//----------------------------------------------------------------------------------------------------------\n\n\n    render(){\n        let imageArray = []\n        let upperform = null\n        let lowerform = null\n       \n        \n        if(this.state.memfiles){\n            this.state.memfiles.map((item,index)=>{imageArray.push({ src: item.fileurl})})\n        }else{\n            //do something else here\n        }\n        \n        if(!this.state.storyExpanded){\n            upperform = \n                    <div>\n                        <Form.Label className='float-left W-100' >Title</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            value={this.state.title} \n                            onChange={this.titleChange}\n                        />\n\n                        <Form.Label className='float-left W-100 pt2 pb0'>Description</Form.Label>\n                        <Form.Control\n                            type=\"text\" \n                            value={this.state.description} \n                            onChange={this.descriptionChange}\n                            \n                        />\n                        \n                        <Form.Label className='float-left W-100 pt2 pb0'>Location</Form.Label>\n                        <Form.Control\n                            type=\"text\" \n                            value={this.state.location} \n                            onChange={this.locationChange}\n                        />\n                        \n                        <Form.Label className='float-left W-100 pt2'>Tagged People</Form.Label>\n                            <div className='dib  w-100 float-left'>\n                                {this.state.taggedPeople.map(person => {\n                                    let fullname = person.firstname + ' ' + person.lastname\n                                   \n                                        return(<SubTag \n                                                tagKey={person.userid}\n                                                text={fullname} \n                                                onClick={() => this.handleDeleteTaggedPerson(person.userid)}\n                                              />)\n                                    })\n                                }\n                                <div className='inline-flex ma1 br3' >\n                                    <DropdownButton\n                                        id='dropdown-basic-button'\n                                        size=\"sm\"\n                                        title=\"++\"\n                                        >\n                                        {this.state.cloudPeople.map((person,index) => {\n                                            \n                                            return(\n                                                <Dropdown.Item \n                                                    eventKey={person.userid.toString()}\n                                                    onSelect={this.addPerson}\n                                                >\n                                                    {person.firstname + ' ' + person.lastname}\n                                                </Dropdown.Item>)})\n                                        } \n                                    </DropdownButton> \n                                 </div>    \n                            </div>\n\n                        <Form.Label className='float-left W-100 pt2'>Memory Clouds</Form.Label>\n                            <div className='dib  w-100 float-left'>\n                                {this.state.memoryClouds.map(cloud => {\n                                    \n                                        return(<SubTag \n                                                tagKey={cloud.id}\n                                                text={cloud.name} \n                                                onClick={() => this.handleDeleteCloud(cloud.id)}\n                                            />)\n                                    })\n                                }\n                                 <div className='inline-flex ma1 br3' >\n                                    <DropdownButton\n                                        id='dropdown-basic-button'\n                                        size=\"sm\"\n                                        title=\"++\"\n                                        >\n                                        {this.state.userClouds.map((cloud,index) => {\n                                            \n                                            return(\n                                                <Dropdown.Item \n                                                    eventKey={cloud.id.toString()}\n                                                    onSelect={this.handleAddCloud}\n                                                >\n                                                    {cloud.name}\n                                                </Dropdown.Item>)})\n                                        } \n                                    </DropdownButton> \n                                 </div>    \n                            </div>\n                    </div>\n            lowerform = \n                    <div>\n                        <div className='inline-flex w-100 justify-between'>\n                            <Form.Label className=' W-50 pt2'>Story</Form.Label>\n                            <Icon icon={ICONS.CHEVRON_UP} onClick={this.handleExpandStory}/>\n                        </div>\n                        \n                        <Form.Control \n                            as=\"textarea\" \n                            rows='10' \n                            value={this.state.story} \n                            onChange={this.handleStoryChange}\n                        />\n                    </div>\n\n        }else{\n            upperform = null\n            lowerform = \n                    <div>\n                        <div className='inline-flex w-100 justify-between'>\n                            <Form.Label className=' W-50 pt2'>Story</Form.Label>\n                            <Icon icon={ICONS.CHEVRON_DOWN} onClick={this.handleExpandStory}/>\n                        </div>\n                        \n                        <Form.Control className= 'mvh60  '\n                            as=\"textarea\" \n                            rows='10' \n                            value={this.state.story} \n                            onChange={this.handleStoryChange}\n                        />\n                        <Form.Label className='float-left W-100 pt2 pb0'>Key Words</Form.Label>\n                        <Form.Control \n                            as=\"textarea\" \n                            rows='3' \n                            value={this.state.keywords} \n                            onChange={this.handleSearchWordsChanged}\n                        />\n\n                    </div>\n        }\n\n        if(this.props.memory && this.state.memfiles){\n            return (\n                <div>\n                    <nav className='navBar'>\n                        <div className=\"logocell\" href=\"#\" title=\"Home\">\n                            <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n                        </div>\n                            <div className=\"dtc v-mid w-75 tr\">\n                                    \n                                    <a className=\"link dim dark-gray f4-ns dib mr4-ns pa2\" \n                                        onClick={()=>this.props.onRouteChange(\"home\")}\n                                        href=\"#\" \n                                        title=\"Post\">Cancel</a>\n                                    <a className=\"link dim dark-gray  f4-ns dib mr3 mr4-ns pa2\" \n                                        onClick={this.updateMemory}\n                                        href=\"#\" \n                                        title=\"Post\">Update</a>\n                                    <a  onClick={this.handleDeleteMemory}\n                                        className=\"link dim dark-gray f4-ns dib\" \n                                        href=\"#\" \n                                        title=\"Login\">Delete</a>\n                                </div>\n                        </nav>\n                \n                    \n                <Container fluid='xl'>\n                   <Row>\n                        <Col xs={5} float='center'>\n                            <Carousel \n                                className='ba pa2 br3' \n                                autoPlay={false} \n                                interval={1200000}\n                                >\n                                {\n                                    this.state.memfiles.map((item,i) => {\n                                    return (\n                                        <Carousel.Item>\n                                            <MemoryImage\n                                                key={i} \n                                                memfile={item}\n                                                deleteImage={this.handleDeleteMemoryImage}\n                                                setAsHero={this.handleSetAsHero}\n                                            />\n                                        </Carousel.Item>\n                                        )\n                                    })\n                                }\n                                \n                            </Carousel>\n                        </Col>\n                        <Col>\n                            <div class ='ba pa2 br3'>\n                            <Form > \n                               {upperform}\n                               {lowerform}\n                               \n                            </Form>\n                            </div>\n                        </Col>\n                        <Col>\n                            <Carousel \n                                className='ba pa2 br3 ' \n                                interval={1200000}\n                                nextIcon = {<Icon icon={ICONS.CHEVRON_RIGHT}/>}\n                                prevIcon = {<Icon icon={ICONS.CHEVRON_LEFT}/>}\n                                onSelect = {this.handleCardSelect}\n                            >\n                                <Carousel.Item>\n                                    <BaseCard key = '1' memory={this.state} />    \n                                </Carousel.Item>\n                                <Carousel.Item>\n                                   \n                                     <ShortCard key = '2' memory={this.state} /> \n                                    \n                                </Carousel.Item>\n                                        \n                                    \n                            </Carousel>\n                            \n                        </Col>\n                    </Row>                 \n                </Container>   \n            </div>  \n            )\n        }else{\n            return (\n                <div>                \n                    No Memory To Display\n                    \n                </div>   \n            )\n\n        }\n    }\n\n}\n        \n//------------------------------------------------------------------------    \n\n\n\nexport default MemoryEditor;\n"]},"metadata":{},"sourceType":"module"}