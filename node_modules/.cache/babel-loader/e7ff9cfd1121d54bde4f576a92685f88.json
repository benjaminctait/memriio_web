{"ast":null,"code":"var makeString = require('./helper/makeString');\n\nvar htmlEntities = require('./helper/htmlEntities');\n\nmodule.exports = function unescapeHTML(str) {\n  return makeString(str).replace(/\\&([^;]{1,10});/g, function (entity, entityCode) {\n    var match;\n\n    if (entityCode in htmlEntities) {\n      return htmlEntities[entityCode];\n      /*eslint no-cond-assign: 0*/\n    } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {\n      return String.fromCharCode(parseInt(match[1], 16));\n      /*eslint no-cond-assign: 0*/\n    } else if (match = entityCode.match(/^#(\\d+)$/)) {\n      return String.fromCharCode(~~match[1]);\n    } else {\n      return entity;\n    }\n  });\n};","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/node_modules/underscore.string/unescapeHTML.js"],"names":["makeString","require","htmlEntities","module","exports","unescapeHTML","str","replace","entity","entityCode","match","String","fromCharCode","parseInt"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,qBAAD,CAAxB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA1B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAC1C,SAAON,UAAU,CAACM,GAAD,CAAV,CAAgBC,OAAhB,CAAwB,kBAAxB,EAA4C,UAASC,MAAT,EAAiBC,UAAjB,EAA6B;AAC9E,QAAIC,KAAJ;;AAEA,QAAID,UAAU,IAAIP,YAAlB,EAAgC;AAC9B,aAAOA,YAAY,CAACO,UAAD,CAAnB;AACF;AACC,KAHD,MAGO,IAAIC,KAAK,GAAGD,UAAU,CAACC,KAAX,CAAiB,mBAAjB,CAAZ,EAAmD;AACxD,aAAOC,MAAM,CAACC,YAAP,CAAoBC,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAA5B,CAAP;AACF;AACC,KAHM,MAGA,IAAIA,KAAK,GAAGD,UAAU,CAACC,KAAX,CAAiB,UAAjB,CAAZ,EAA0C;AAC/C,aAAOC,MAAM,CAACC,YAAP,CAAoB,CAAC,CAACF,KAAK,CAAC,CAAD,CAA3B,CAAP;AACD,KAFM,MAEA;AACL,aAAOF,MAAP;AACD;AACF,GAdM,CAAP;AAeD,CAhBD","sourcesContent":["var makeString = require('./helper/makeString');\nvar htmlEntities = require('./helper/htmlEntities');\n\nmodule.exports = function unescapeHTML(str) {\n  return makeString(str).replace(/\\&([^;]{1,10});/g, function(entity, entityCode) {\n    var match;\n\n    if (entityCode in htmlEntities) {\n      return htmlEntities[entityCode];\n    /*eslint no-cond-assign: 0*/\n    } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {\n      return String.fromCharCode(parseInt(match[1], 16));\n    /*eslint no-cond-assign: 0*/\n    } else if (match = entityCode.match(/^#(\\d+)$/)) {\n      return String.fromCharCode(~~match[1]);\n    } else {\n      return entity;\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}