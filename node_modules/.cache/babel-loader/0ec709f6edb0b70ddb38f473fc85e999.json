{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/memrii/web/memriio_web/src/App.js\";\nimport React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport Admin from './components/admin/admin.js';\nimport * as mem from './components/memriioserver.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.userSignedin = () => {\n      return this.state.isSignedIn;\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          userid: data.userid,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          email: data.email,\n          joined: data.joined,\n          cloudSelection: this.extractSelectedClouds(data.webclouds)\n        }\n      });\n    };\n\n    this.extractSelectedClouds = webClouds => {\n      let tempArray = [];\n\n      if (webClouds) {\n        webClouds.split(',').map(cid => {\n          tempArray.push(parseInt(cid));\n        });\n      }\n\n      return tempArray;\n    };\n\n    this.handleNewMemory = memory => {\n      console.log('handleNewMemory : ' + JSON.stringify(memory));\n      let newMemories = this.state.searchResult.memories;\n      newMemories.push(memory);\n      this.loadMemories(newMemories);\n    };\n\n    this.loadMemories = memories => {\n      if (memories) {\n        console.log('App-loadMemories : memory count : ' + memories.length);\n      } else {\n        console.log('App-loadMemories : memory count : ' + 0);\n      }\n\n      this.setState({\n        searchResult: {\n          memories: memories\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      console.log('app.onRouteChange : route = ' + route);\n\n      if (route === 'signin') {\n        this.setState({\n          searchResult: {\n            memories: []\n          },\n          route: route,\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else if (route === 'memoryUpdated') {\n        this.loadUser(this.state.user);\n        this.setState({\n          route: 'home',\n          isSignedIn: true\n        });\n      } else if (route === 'admin') {\n        this.setState({\n          route: route,\n          isSignedIn: true\n        });\n      } else {\n        this.setState({\n          route: route\n        });\n      }\n    };\n\n    this.handleEditMemory = memory => {\n      this.state.activeMemory = memory;\n      console.log('App.displayMemory : activeMemory.id ' + memory.memid);\n      this.onRouteChange('displayMemory');\n    };\n\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory: null,\n      cloudSelection: [],\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        joined: ''\n      },\n      searchResult: {\n        memories: []\n      }\n    };\n  } //---------------------------------------------------------------------------------\n\n\n  //---------------------------------------------------------------------------------\n  render() {\n    let routeName = this.state.route;\n    let content = null;\n    console.log('Navigation.render.user ', this.state.user);\n    let nav = /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      userSignedin: this.userSignedin,\n      loadMemories: this.loadMemories,\n      onNewMemory: this.handleNewMemory,\n      startingClouds: this.state.user.cloudSelection,\n      currentRoute: this.state.route,\n      userid: this.state.user.userid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    });\n\n    if (routeName === 'home') {\n      content = /*#__PURE__*/React.createElement(CardCollection, {\n        memories: this.state.searchResult.memories,\n        userid: this.state.user.userid,\n        onEditMemory: this.handleEditMemory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'signin') {\n      content = /*#__PURE__*/React.createElement(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'admin') {\n      console.log('app.render : route = ' + routeName);\n      content = /*#__PURE__*/React.createElement(Admin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      });\n    } else if (routeName === 'register') {\n      content = /*#__PURE__*/React.createElement(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, nav, content);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/bentait/memrii/web/memriio_web/src/App.js"],"names":["React","Navigation","CardCollection","Signin","Register","Admin","mem","App","Component","constructor","userSignedin","state","isSignedIn","loadUser","data","setState","user","userid","firstname","lastname","email","joined","cloudSelection","extractSelectedClouds","webclouds","webClouds","tempArray","split","map","cid","push","parseInt","handleNewMemory","memory","console","log","JSON","stringify","newMemories","searchResult","memories","loadMemories","length","onRouteChange","route","handleEditMemory","activeMemory","memid","id","name","render","routeName","content","nav"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport CardCollection from './components/cardcollection/cardcollection.js';\nimport Signin from './components/signin/signin.js';\nimport Register from './components/register/register.js';\nimport Admin from './components/admin/admin.js'\nimport * as mem from './components/memriioserver.js'\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    \n    this.state ={\n      route: 'signin',\n      isSignedIn: false,\n      activeMemory:null,\n      cloudSelection:[],\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        joined:''\n      },\n      searchResult:{\n        memories:[]\n      }\n    }\n  }\n\n//---------------------------------------------------------------------------------\n\n  userSignedin = () => {\n    return this.state.isSignedIn;\n  }\n\n//---------------------------------------------------------------------------------\n\n  loadUser = (data) => {\n    \n    this.setState({ user : {  userid    : data.userid, \n                              firstname : data.firstname,\n                              lastname  : data.lastname,\n                              email     : data.email,\n                              joined    : data.joined,\n                              cloudSelection : this.extractSelectedClouds(data.webclouds)\n                            }\n      })\n      \n  } \n//---------------------------------------------------------------------------------\n\nextractSelectedClouds = (webClouds) => {\n  let tempArray = []\n  if(webClouds){\n    webClouds.split(',').map(cid => {tempArray.push(parseInt(cid))})\n  }\n  return tempArray\n}\n\n//---------------------------------------------------------------------------------\n\n  handleNewMemory = (memory) => {\n    console.log('handleNewMemory : ' + JSON.stringify(memory));\n    \n    let newMemories = this.state.searchResult.memories\n    newMemories.push(memory)\n    this.loadMemories(newMemories)\n  } \n\n//---------------------------------------------------------------------------------\n\n  loadMemories =(memories) => {\n\n    if(memories){\n      console.log('App-loadMemories : memory count : ' + memories.length);\n    }else{\n      console.log('App-loadMemories : memory count : ' + 0);\n    }\n\n      \n    this.setState({searchResult:{memories : memories}})\n    \n  }\n\n//---------------------------------------------------------------------------------\n\n  onRouteChange = (route) =>{\n   \n    console.log('app.onRouteChange : route = ' + route);\n    \n    if(route === 'signin'){\n      this.setState({\n        searchResult:{memories:[]},\n        route:route, \n        isSignedIn : false\n      })\n    }else if (route === 'home'){\n      this.setState({route:route, isSignedIn: true})\n    }else if (route === 'memoryUpdated'){\n      this.loadUser(this.state.user)\n      this.setState({route:'home', isSignedIn: true})\n    }else if (route === 'admin'){\n      \n     this.setState({route:route, isSignedIn: true})\n    }else{\n      this.setState({route:route})\n    }\n    \n  }\n\n//---------------------------------------------------------------------------------\n\nhandleEditMemory = (memory) => {\n  this.state.activeMemory = memory;\n  console.log('App.displayMemory : activeMemory.id ' + memory.memid);\n  this.onRouteChange('displayMemory')\n}\n\n//---------------------------------------------------------------------------------\n\nrender() {\n\n  \n    let routeName = this.state.route\n    let content = null\n    console.log('Navigation.render.user ' , this.state.user);\n    \n    \n    let nav = <Navigation \n                onRouteChange   = { this.onRouteChange    }   \n                userSignedin    = { this.userSignedin       }\n                loadMemories    = { this.loadMemories       }     \n                onNewMemory     = { this.handleNewMemory    }     \n                startingClouds  = { this.state.user.cloudSelection }    \n                currentRoute    = { this.state.route        }\n                userid          = { this.state.user.userid  }\n              />\n\n    if(routeName === 'home'){\n      content = <CardCollection \n              memories      = { this.state.searchResult.memories } \n              userid        = { this.state.user.userid } \n              onEditMemory  = { this.handleEditMemory  }/>\n              \n    }else if(routeName === 'signin'){\n      content = <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n    }else if (routeName === 'admin'){\n      console.log('app.render : route = ' + routeName);\n      content = <Admin/>\n\n    }else if (routeName === 'register'){\n      content = <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n    }\n\n\n    return (\n      <div className=\"App\">\n          { nav     }\n          { content }\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}