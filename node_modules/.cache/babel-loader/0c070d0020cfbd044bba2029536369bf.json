{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js\";\nimport React from 'react';\nimport { BennyCard, MemoryImage } from '../cardcollection/card';\nimport { Container, Row, Col, Form, Button, Carousel } from 'react-bootstrap';\nimport Gallery from 'react-images-viewer';\nimport { getAllMemoryFiles, setHeroImage } from '../memriioserver';\nimport Masonry from 'react-masonry-component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './memoryeditor.css';\n\nclass MemoryEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      owner: 0,\n      title: '',\n      description: '',\n      location: '',\n      story: '',\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      memfiles: null,\n      uploadNeeded: false\n    };\n\n    this.getCompiledMemory = () => {\n      return {\n        id: this.state.id,\n        owner: this.state.owner,\n        title: this.state.title,\n        description: this.state.description,\n        location: this.state.location,\n        story: this.state.story,\n        fileurl: this.memfiles[0]\n      };\n    };\n\n    this.state = {\n      id: props.memory.id,\n      title: props.memory.title,\n      description: props.memory.description,\n      story: props.memory.story,\n      location: props.memory.location,\n      owner: props.memory.userid,\n      taggedPeople: [],\n      memoryClouds: [],\n      searchWords: [],\n      memfiles: null,\n      uploadNeeded: false\n    };\n  }\n\n  //------------------------------------------------------------------------\n  componentDidMount() {\n    getAllMemoryFiles(this.props.memory.id, memoryFiles => {\n      this.setState({\n        memfiles: memoryFiles\n      });\n    });\n  } //---------------------------------------------------------------------------------    \n\n\n  //------------------------------------------------------------------------\n  render() {\n    let imageArray = [];\n\n    if (this.state.memfiles) {\n      this.state.memfiles.map((item, index) => {\n        imageArray.push({\n          src: item.fileurl\n        });\n      });\n    } else {//do something else here\n    }\n\n    if (this.props.memory && this.state.memfiles) {\n      return /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 5,\n        float: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        className: \"ba pa2 br3\",\n        interval: 600000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, this.state.memfiles.map((item, i) => {\n        return /*#__PURE__*/React.createElement(Carousel.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(MemoryImage, {\n          key: i,\n          fileurl: item.fileurl //onExpand = {this.props.onExpandClick }\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 45\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ba pa2 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => {\n          this.setState({\n            title: event.value,\n            uploadNeeded: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.description,\n        onChange: event => {\n          this.setState({\n            description: event.value,\n            uploadNeeded: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.location,\n        onChange: event => {\n          this.setState({\n            location: event.value,\n            uploadNeeded: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      }, \"Tagged People\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: \"NOT IMPLEMENTED\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }, \"Memory Clouds\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        value: \"NOT IMPLEMENTED\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"float-left W-100 pt2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, \"Story\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"10\",\n        value: this.state.story,\n        onChange: event => {\n          this.setState({\n            story: event.value,\n            uploadNeeded: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"ba pa2 br3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(BennyCard, {\n        key: 0,\n        memory: this.getCompiledMemory(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      })))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, \"No Memory To Display\");\n    }\n  }\n\n} //------------------------------------------------------------------------    \n\n\nexport default MemoryEditor;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/memoryeditor/memoryeditor.js"],"names":["React","BennyCard","MemoryImage","Container","Row","Col","Form","Button","Carousel","Gallery","getAllMemoryFiles","setHeroImage","Masonry","MemoryEditor","Component","constructor","props","state","id","owner","title","description","location","story","taggedPeople","memoryClouds","searchWords","memfiles","uploadNeeded","getCompiledMemory","fileurl","memory","userid","componentDidMount","memoryFiles","setState","render","imageArray","map","item","index","push","src","i","event","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BennyCard,MemoryImage} from '../cardcollection/card'\nimport {Container,\n        Row,\n        Col,\n        Form,\n        Button,\n        Carousel,\n        } from 'react-bootstrap'\n\nimport Gallery from 'react-images-viewer'\nimport {getAllMemoryFiles, setHeroImage} from '../memriioserver'\nimport Masonry from 'react-masonry-component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport './memoryeditor.css'\n\n\n\n\n\nclass MemoryEditor extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n                id:props.memory.id,\n                title:props.memory.title,\n                description:props.memory.description,\n                story:props.memory.story,\n                location:props.memory.location,\n                owner:props.memory.userid,\n\n                taggedPeople:[],\n                memoryClouds:[],\n                searchWords:[],\n                memfiles:null,\n        \n                uploadNeeded:false,\n            }\n    }    \n\n    state = {\n        \n        id:0,\n        owner:0,\n        title:'',\n        description:'',\n        location:'',        \n        story:'',\n\n        taggedPeople:[],\n        memoryClouds:[],\n        searchWords:[],\n        memfiles:null,\n        \n        uploadNeeded:false,\n    }\n\n//------------------------------------------------------------------------\n\n    componentDidMount(){\n        getAllMemoryFiles(this.props.memory.id,((memoryFiles)=>{this.setState({memfiles:memoryFiles})}))\n    }\n\n//---------------------------------------------------------------------------------    \n    \n    getCompiledMemory = () =>{\n        return {\n            id:this.state.id,\n            owner:this.state.owner,\n            title:this.state.title,\n            description:this.state.description,\n            location:this.state.location,\n            story:this.state.story,\n            fileurl:this.memfiles[0]\n        \n        }\n\n        \n    }\n\n\n//------------------------------------------------------------------------\n\n    render(){\n        let imageArray = []\n\n        \n        if(this.state.memfiles){\n            this.state.memfiles.map((item,index)=>{imageArray.push({ src: item.fileurl})})\n        }else{\n            //do something else here\n        }\n            \n        if(this.props.memory && this.state.memfiles){\n            return (\n                <Container fluid>\n                   <Row>\n                        <Col xs={5} float='center'>\n                            <Carousel className='ba pa2 br3' interval={600000}>\n                                {\n                                    this.state.memfiles.map((item,i) => {\n                                    return (\n                                        <Carousel.Item>\n                                            <MemoryImage\n                                                key={i} \n                                                fileurl={item.fileurl}\n                                                //onExpand = {this.props.onExpandClick }\n                                            />\n                                        </Carousel.Item>\n                                        )\n                                    })\n                                }\n                            </Carousel>\n                        </Col>\n                        <Col>\n                            <div class ='ba pa2 br3'>\n                            <Form > \n                                <Form.Label className='float-left W-100' >Title</Form.Label>\n                                <Form.Control \n                                    type=\"text\" \n                                    value={this.state.title} \n                                    onChange={(event) => {this.setState({title:event.value,uploadNeeded:true})}}\n                                />\n\n                                <Form.Label className='float-left W-100 pt2'>Description</Form.Label>\n                                <Form.Control\n                                    type=\"text\" \n                                    value={this.state.description} \n                                    onChange={(event) => {this.setState({description:event.value,uploadNeeded:true})}}\n                                />\n                                \n                                <Form.Label className='float-left W-100 pt2'>Location</Form.Label>\n                                <Form.Control\n                                    type=\"text\" \n                                    value={this.state.location} \n                                    onChange={(event) => {this.setState({location:event.value,uploadNeeded:true})}}\n                                />\n                                \n                                <Form.Label className='float-left W-100 pt2'>Tagged People</Form.Label>\n                                <Form.Control type=\"text\" value='NOT IMPLEMENTED' />\n\n                                <Form.Label className='float-left W-100 pt2'>Memory Clouds</Form.Label>\n                                <Form.Control type=\"text\" value='NOT IMPLEMENTED' />\n                                \n                                <Form.Label className='float-left W-100 pt2'>Story</Form.Label>\n                                <Form.Control \n                                    as=\"textarea\" \n                                    rows='10' \n                                    value={this.state.story} \n                                    onChange={(event) => {this.setState({story:event.value,uploadNeeded:true})}}\n                                />\n                            </Form>\n                            </div>\n                        </Col>\n                        <Col>\n                            <div class ='ba pa2 br3'>\n                                <BennyCard\n                                    key = {0}\n                                    memory={this.getCompiledMemory()}\n                                />  \n                            </div>\n                        </Col>\n                    </Row>                 \n                </Container>   \n            )\n        }else{\n            return (\n                <div>                \n                    No Memory To Display\n                </div>   \n            )\n\n        }\n    }\n\n}\n        \n//------------------------------------------------------------------------    \n\n\nexport default MemoryEditor;\n"]},"metadata":{},"sourceType":"module"}