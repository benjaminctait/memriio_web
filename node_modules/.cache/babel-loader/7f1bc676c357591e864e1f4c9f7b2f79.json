{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/navigation/navigation.js\";\nimport React from 'react';\nimport logo from \"./memrii_logo.png\";\nimport * as DropSearch from '../dropsearch/dropsearch';\nimport * as mem from '../memriioserver';\nimport NewMemoryModal from '../memorymodal/newmemorymodal';\nimport './navigation.css';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchwords: '',\n      userClouds: null,\n      selectedclouds: null,\n      showPersonalMemoryOptions: false,\n      personalMemoryunsharedOnly: false,\n      showNewPostModal: false\n    };\n\n    this.onSearchBoxChange = event => {\n      let text = event.target.value.toLowerCase();\n      let tmparray = [];\n      console.log('navigation-onSearchBoxChange : ' + text.split(\" \"));\n\n      if (event.target.value !== '') {\n        tmparray = text.split(\" \");\n      }\n\n      this.setState({\n        searchwords: tmparray\n      }, this.showMemories);\n    };\n\n    this.componentDidMount = () => {\n      console.log('XXX ' + this.props.startingClouds);\n      this.showMemories();\n    };\n\n    this.handleChangeSearchClouds = (clouds, userid) => {\n      let cloudstring = '';\n      clouds.map(cloud => {\n        cloudstring += cloud.value + ',';\n      });\n\n      if (cloudstring) {\n        cloudstring = cloudstring.slice(0, cloudstring.length - 1);\n      }\n\n      mem.updatedUserClouds(userid, cloudstring);\n      this.setState({\n        selectedclouds: clouds\n      }, this.showMemories);\n    };\n\n    this.showMemories = () => {\n      let selected = this.state.selectedclouds;\n      let searchwords = this.state.searchwords;\n      let cloudids = [];\n      if (selected) cloudids = selected.map(cloud => {\n        return parseInt(cloud.value);\n      });\n      console.log('showMemories ' + cloudids + ': cloudids.length ' + cloudids.length);\n\n      if (cloudids.length === 0) {\n        console.log('showMemories calling loadMemories(null)');\n        this.props.loadMemories(null);\n      } else if (selected.length === 1 && selected[0].value === 0) {\n        // personal only\n        console.log('personal only ' + selected[0].value);\n\n        if (this.state.personalMemoryunsharedOnly) {\n          // personal only - unshared only\n          console.log('personal : unshared ' + this.props.userid + ' ' + searchwords);\n          mem.getMemories_PersonalOnly_Unshared(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // personal only - bth shared and undshared\n          console.log('personal : all ' + this.props.userid + ' ' + searchwords);\n          mem.getMemories_PersonalOnly_All(this.props.userid, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else if (cloudids.includes(0)) {\n        // personal cloud + other clouds\n        console.log('personal cloud + other clouds  : cloudids ' + cloudids);\n\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log('personal cloud + other clouds with searchwords ' + this.props.userid + ' ' + searchwords + ' ' + cloudids);\n          mem.getMemories_User_Words_Clouds(this.props.userid, searchwords, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log('personal cloud + other clouds no searchwords ' + this.props.userid + ' : ' + cloudids);\n          mem.getMemories_User_Clouds(this.props.userid, cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      } else {\n        if (searchwords.length > 0) {\n          // clouds + searchwords\n          console.log('other clouds only with searchwords : ' + searchwords + ' cloudids : ' + cloudids);\n          mem.getMemories_Words_Clouds(cloudids, searchwords).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        } else {\n          // clouds but no search words\n          console.log('other clouds only no searchwords : cloud ids' + cloudids);\n          mem.getMemories_Clouds(cloudids).then(memories => {\n            this.props.loadMemories(memories);\n          }, error => {\n            this.props.loadMemories(null);\n          });\n        }\n      }\n    };\n\n    this.loadUserClouds = userid => {\n      if (userid) mem.getUserClouds(userid, clouds => {\n        clouds.push({\n          id: 0,\n          name: 'Personal'\n        });\n        clouds.reverse();\n        this.setState({\n          userClouds: clouds\n        });\n      });\n    };\n\n    this.handleSignOut = () => {\n      this.state = {\n        searchwords: '',\n        userClouds: null,\n        selectedclouds: null,\n        showPersonalMemoryOptions: false,\n        personalMemoryunsharedOnly: false\n      };\n      this.props.onRouteChange('signin');\n    };\n\n    this.handleAdminClick = () => {\n      this.props.onRouteChange('admin');\n    };\n\n    this.handleRunTest = () => {\n      console.log('this does nothing anymore');\n    };\n\n    this.handleShowNewMemory = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleUploadInProgress = () => {\n      console.log('hide newmemory modal');\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.handleNewPost = memory => {\n      this.props.onNewMemory(memory);\n    };\n\n    this.handleCancelNewPost = () => {\n      this.setState({\n        showNewPostModal: !this.state.showNewPostModal\n      });\n    };\n\n    this.renderStandardNav = () => {\n      const {\n        onRouteChange,\n        userid\n      } = this.props;\n      let cloudbox = null;\n\n      if (this.state.userClouds) {\n        cloudbox = DropSearch.cloudDropSearch(null, this.state.userClouds, null, true, false, this.handleChangeSearchClouds, userid);\n      } else {\n        this.loadUserClouds(userid);\n      }\n\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: this.handleSignOut,\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        href: \"#\",\n        title: \"Log Out\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, \"Sign Out\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleAdminClick,\n        href: \"#admin\",\n        title: \"Administration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      }, \"Admin\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleShowNewMemory,\n        href: \"#newpost\",\n        title: \"New\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, \"New\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\",\n        onClick: this.handleRunTest,\n        href: \"#newpost\",\n        title: \"New\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, \"Test\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.onSearchBoxChange,\n        className: \"searchBox\",\n        type: \"text\",\n        \"aria-describedby\": \"name-desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatRight width50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, cloudbox), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"floatLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(NewMemoryModal, {\n        key: 'memmodal' + 42,\n        userid: this.props.userid,\n        userClouds: this.state.userClouds,\n        show: this.state.showNewPostModal,\n        onCancelNewMemory: this.handleCancelNewPost,\n        onAddNewMemory: this.handleNewPost,\n        onUploading: this.handleUploadInProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    this.renderSignInNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange(\"signin\"),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Log \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, \"Sign In\")));\n    };\n\n    this.renderAdminNav = () => {\n      const onRouteChange = this.props.onRouteChange;\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navBar \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logocell\",\n        href: \"#\",\n        title: \"Home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"memriio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dtc v-mid w-75 tr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => onRouteChange('home'),\n        className: \"link dim dark-gray f6 f4-ns dib\",\n        href: \"#\",\n        title: \"Home \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 17\n        }\n      }, \"Home\")));\n    };\n\n    this.state = {\n      searchwords: '',\n      userClouds: null,\n      selectedclouds: this.props.startingClouds\n    };\n  }\n\n  //---------------------------------------------------------------------------------\n  render() {\n    const {\n      userSignedin,\n      currentRoute\n    } = this.props;\n\n    if (userSignedin()) {\n      if (currentRoute === 'home') {\n        return this.renderStandardNav();\n      } else if (currentRoute === 'displayMemory') {\n        return null;\n      } else if (currentRoute === 'admin') {\n        return this.renderAdminNav();\n      }\n    } else {\n      return this.renderSignInNav();\n    }\n  } //---------------------------------------------------------------------------------\n  //---------------------------------------------------------------------------------\n\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/navigation/navigation.js"],"names":["React","logo","DropSearch","mem","NewMemoryModal","Navigation","Component","constructor","props","state","searchwords","userClouds","selectedclouds","showPersonalMemoryOptions","personalMemoryunsharedOnly","showNewPostModal","onSearchBoxChange","event","text","target","value","toLowerCase","tmparray","console","log","split","setState","showMemories","componentDidMount","startingClouds","handleChangeSearchClouds","clouds","userid","cloudstring","map","cloud","slice","length","updatedUserClouds","selected","cloudids","parseInt","loadMemories","getMemories_PersonalOnly_Unshared","then","memories","error","getMemories_PersonalOnly_All","includes","getMemories_User_Words_Clouds","getMemories_User_Clouds","getMemories_Words_Clouds","getMemories_Clouds","loadUserClouds","getUserClouds","push","id","name","reverse","handleSignOut","onRouteChange","handleAdminClick","handleRunTest","handleShowNewMemory","handleUploadInProgress","handleNewPost","memory","onNewMemory","handleCancelNewPost","renderStandardNav","cloudbox","cloudDropSearch","renderSignInNav","renderAdminNav","render","userSignedin","currentRoute"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport logo from \"./memrii_logo.png\"\nimport * as DropSearch from '../dropsearch/dropsearch'\nimport * as mem from '../memriioserver'\nimport NewMemoryModal from '../memorymodal/newmemorymodal'\nimport './navigation.css'\n\n\n\nclass Navigation extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state ={\n            searchwords:'',\n            userClouds:null,\n            selectedclouds:this.props.startingClouds\n        }\n    }\n\n    state={\n        searchwords:'',\n        userClouds:null,\n        selectedclouds:null,\n        showPersonalMemoryOptions:false,\n        personalMemoryunsharedOnly : false,\n        showNewPostModal:false,           \n        \n    }\n\n\n//---------------------------------------------------------------------------------    \n    \nonSearchBoxChange = (event) =>{\n    \n    let text = event.target.value.toLowerCase()\n    let tmparray = []\n\n    console.log('navigation-onSearchBoxChange : ' + text.split(\" \"))\n    \n    if(event.target.value !== ''){\n        tmparray = text.split(\" \")\n    }\n    this.setState({searchwords:tmparray},this.showMemories )      \n}\n\n//---------------------------------------------------------------------------------\n\ncomponentDidMount = () =>{\n    console.log('XXX ' + this.props.startingClouds );\n    this.showMemories()\n}\n\n//---------------------------------------------------------------------------------\n\nhandleChangeSearchClouds = (clouds,userid) =>{\n\n    let cloudstring = ''\n    clouds.map(cloud => {\n        cloudstring += cloud.value + ','\n    })\n    if(cloudstring){cloudstring = cloudstring.slice(0,cloudstring.length-1)}\n    \n    mem.updatedUserClouds(userid,cloudstring)\n\n    this.setState({selectedclouds:clouds},this.showMemories )\n}\n\n//---------------------------------------------------------------------------------\n\nshowMemories = () =>{\n    let selected = this.state.selectedclouds\n    let searchwords = this.state.searchwords\n    let cloudids = []\n\n    if(selected) cloudids = selected.map(cloud => {return parseInt(cloud.value)})\n    console.log( 'showMemories ' + cloudids + ': cloudids.length ' + cloudids.length)\n\n    \n    if(cloudids.length === 0){\n        console.log('showMemories calling loadMemories(null)');\n        this.props.loadMemories(null)\n\n    }else if (selected.length === 1 && selected[0].value === 0 ){  // personal only\n        console.log('personal only ' + selected[0].value);\n        if(this.state.personalMemoryunsharedOnly){                 // personal only - unshared only\n            \n            console.log('personal : unshared ' + this.props.userid + ' ' + searchwords);\n            mem.getMemories_PersonalOnly_Unshared(this.props.userid,searchwords)\n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n\n        }else {                                                     // personal only - bth shared and undshared\n            \n            console.log('personal : all ' + this.props.userid + ' ' + searchwords);\n            mem.getMemories_PersonalOnly_All(this.props.userid,searchwords)\n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n\n        }\n    }else if (cloudids.includes(0) ){                                // personal cloud + other clouds\n        console.log('personal cloud + other clouds  : cloudids ' + cloudids );\n \n        if(searchwords.length>0){                                   // clouds + searchwords\n            \n            console.log('personal cloud + other clouds with searchwords ' + this.props.userid + ' ' + searchwords + ' ' + cloudids );\n            mem.getMemories_User_Words_Clouds(this.props.userid,searchwords,cloudids)\n           .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        \n        }else{                                                      // clouds but no search words\n            \n            console.log('personal cloud + other clouds no searchwords ' + this.props.userid + ' : ' +  cloudids );\n            mem.getMemories_User_Clouds(this.props.userid,cloudids)            \n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        }\n    }else{\n        if(searchwords.length>0){                                   // clouds + searchwords\n            \n            console.log('other clouds only with searchwords : ' +  searchwords + ' cloudids : ' + cloudids );\n            mem.getMemories_Words_Clouds(cloudids,searchwords)\n           .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        \n        }else{                                                      // clouds but no search words\n            \n            console.log('other clouds only no searchwords : cloud ids' + cloudids );\n            mem.getMemories_Clouds(cloudids)            \n            .then(memories => {this.props.loadMemories(memories)}, \n                  error => {this.props.loadMemories(null)})\n        }\n    }\n    \n}\n\n//---------------------------------------------------------------------------------\n\nrender(){\n    const {userSignedin,currentRoute} = this.props\n    \n    if(userSignedin()){\n        if      (currentRoute === 'home')           { return ( this.renderStandardNav())\n        }else if(currentRoute === 'displayMemory')  { return ( null ) \n        }else if(currentRoute === 'admin')          { return ( this.renderAdminNav()) }\n            \n    }else{ return ( this.renderSignInNav())}\n}\n\n//---------------------------------------------------------------------------------\n\nloadUserClouds = (userid) => {    \n    if(userid) mem.getUserClouds(userid,(clouds => {      \n        clouds.push({\n            id:0,\n            name:'Personal'\n        })  \n        clouds.reverse()\n        this.setState({userClouds:clouds})\n    }))\n}\n\n//---------------------------------------------------------------------------------\n\nhandleSignOut = () => {\n    this.state={\n        searchwords:'',\n        userClouds:null,\n        selectedclouds:null,\n        showPersonalMemoryOptions:false,\n        personalMemoryunsharedOnly : false,          \n    }\n    this.props.onRouteChange('signin')\n}\n\nhandleAdminClick = () =>{\n    this.props.onRouteChange('admin')\n}\n\nhandleRunTest = () => {\n    console.log('this does nothing anymore')\n}\n//-------------------------------------------------------------------------------\n\nhandleShowNewMemory = () =>{\n   this.setState({showNewPostModal:!this.state.showNewPostModal})\n}\n\n//-------------------------------------------------------------------------------\n\nhandleUploadInProgress = () => {\n    console.log('hide newmemory modal');\n    this.setState({showNewPostModal:!this.state.showNewPostModal})\n}\n//-------------------------------------------------------------------------------\n\nhandleNewPost = (memory) =>{    \n    this.props.onNewMemory(memory)\n}\n\n\n//---------------------------------------------------------------------------------\n\nhandleCancelNewPost = () =>{\n    this.setState({showNewPostModal:!this.state.showNewPostModal})\n}\n\n//---------------------------------------------------------------------------------\n\nrenderStandardNav =() =>{\n    const {onRouteChange,userid} = this.props\n    let cloudbox = null\n    if(this.state.userClouds){        \n        cloudbox = DropSearch.cloudDropSearch( null,this.state.userClouds,null,true,false , this.handleChangeSearchClouds,userid)\n    }else{\n        this.loadUserClouds(userid)\n    }\n    \n    return(\n        <nav className='navBar'>\n            <ul>\n                <li className='floatRight'>\n                    <a  onClick={this.handleSignOut}\n                        className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        href=\"#\" \n                        title=\"Log Out\">Sign Out</a>\n                </li>\n\n                <li className='floatRight'>\n                    <a className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        onClick={this.handleAdminClick}\n                        href=\"#admin\" \n                        title=\"Administration\">Admin</a>\n                </li>\n                <li className='floatRight'>\n                    <a className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        onClick={this.handleShowNewMemory}\n                        href=\"#newpost\" \n                        title=\"New\">New</a>\n                </li>\n\n                <li className='floatRight'>\n                    <a className=\"link dim dark-gray f4-ns dib mr3 mr4-ns pa2\" \n                        onClick={this.handleRunTest}\n                        href=\"#newpost\" \n                        title=\"New\">Test</a>\n                </li>\n\n\n                <li className='floatRight width50'>\n                    <input \n                        onChange ={this.onSearchBoxChange}\n                        className = 'searchBox'\n                        type=\"text\" \n                        aria-describedby=\"name-desc\"></input>\n                </li>\n\n                <li className='floatRight width50'>\n                    {cloudbox}\n                </li>                \n                \n                <li className='floatLeft'>\n                    <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n                </li>\n            </ul>\n            <NewMemoryModal \n                key                 = { 'memmodal' + 42}\n                userid              = { this.props.userid }\n                userClouds          = { this.state.userClouds }\n                show                = { this.state.showNewPostModal}\n                onCancelNewMemory   = { this.handleCancelNewPost }\n                onAddNewMemory      = { this.handleNewPost }\n                onUploading         = { this.handleUploadInProgress}\n                >\n                \n            </NewMemoryModal>      \n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\nrenderSignInNav = () => {\n    const onRouteChange = this.props.onRouteChange\n    return (\n        <nav className=\"navBar \">\n            <div className=\"logocell\" href=\"#\" title=\"Home\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n            </div>\n            <div className=\"dtc v-mid w-75 tr\">\n                \n                <a  onClick={()=>onRouteChange (\"signin\")}\n                    className=\"link dim dark-gray f6 f4-ns dib\" \n                    href=\"#\" \n                    title=\"Log \">Sign In</a>\n                \n            </div>\n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\nrenderAdminNav = () => {\n    const onRouteChange = this.props.onRouteChange\n    return (\n        <nav className=\"navBar \">\n            <div className=\"logocell\" href=\"#\" title=\"Home\">\n                <img src={logo} className=\"logo\" alt=\"memriio\"></img>\n            </div>\n            <div className=\"dtc v-mid w-75 tr\">\n                \n                <a  onClick={()=>onRouteChange ('home')}\n                    className=\"link dim dark-gray f6 f4-ns dib\" \n                    href=\"#\" \n                    title=\"Home \">Home</a>\n                \n            </div>\n        </nav>\n    )\n}\n\n//---------------------------------------------------------------------------------\n\n}        \n    \n\n\nexport default Navigation;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}