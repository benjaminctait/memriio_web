{"ast":null,"code":"var _jsxFileName = \"/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js\";\nimport React from 'react';\nimport tag from '../images/tag.png';\nimport './dropsearch.css';\nimport { ImageLabel } from '../buttons/buttons';\nimport SelectDropDown from 'react-dropdown-select'; //-------------------------------------------------------------------\n\nexport function peopleDropSearch(people, callBack) {\n  let peoplesNames = people.map((person, idx) => {\n    return {\n      value: idx,\n      label: person.firstname + ' ' + person.lastname\n    };\n  });\n  return /*#__PURE__*/React.createElement(SelectDropDown, {\n    placeholder: \"+ add\",\n    options: peoplesNames,\n    searchable: true,\n    closeOnSelect: true,\n    clearOnSelect: true //------------\n    ,\n    onChange: items => {\n      let index = items[0].value;\n      console.log(people[index]);\n      if (callBack) callBack(people[index]);\n    } //------------\n    //------------\n    ,\n    itemRenderer: ({\n      item,\n      itemIndex,\n      props,\n      state,\n      methods\n    }) => /*#__PURE__*/React.createElement(ImageLabel, {\n      className: \"dropItem\",\n      key: 'i' + itemIndex,\n      onClick: () => methods.addItem(item),\n      leftImg: tag,\n      label: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  });\n} //-------------------------------------------------------------------","map":{"version":3,"sources":["/Users/bentait/Desktop/memriio/memriio_web/src/components/dropsearch/dropsearch.js"],"names":["React","tag","ImageLabel","SelectDropDown","peopleDropSearch","people","callBack","peoplesNames","map","person","idx","value","label","firstname","lastname","items","index","console","log","item","itemIndex","props","state","methods","addItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,kBAAP;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,uBAA3B,C,CAGA;;AAEA,OAAO,SAASC,gBAAT,CAA4BC,MAA5B,EAAoCC,QAApC,EAA6C;AAElD,MAAIC,YAAY,GAAGF,MAAM,CAACG,GAAP,CAAW,CAACC,MAAD,EAAQC,GAAR,KAAgB;AAC1C,WAAO;AAACC,MAAAA,KAAK,EAAGD,GAAT;AAAcE,MAAAA,KAAK,EAAGH,MAAM,CAACI,SAAP,GAAmB,GAAnB,GAAyBJ,MAAM,CAACK;AAAtD,KAAP;AAAwE,GADzD,CAAnB;AAEA,sBAIA,oBAAC,cAAD;AAEI,IAAA,WAAW,EAAK,OAFpB;AAGI,IAAA,OAAO,EAAWP,YAHtB;AAII,IAAA,UAAU,EAAQ,IAJtB;AAKI,IAAA,aAAa,EAAK,IALtB;AAMI,IAAA,aAAa,EAAK,IANtB,CASI;AATJ;AAWI,IAAA,QAAQ,EACJQ,KAAK,IAAI;AACP,UAAIC,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASJ,KAArB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYb,MAAM,CAACW,KAAD,CAAlB;AACA,UAAGV,QAAH,EAAaA,QAAQ,CAACD,MAAM,CAACW,KAAD,CAAP,CAAR;AACd,KAhBT,CAmBI;AAIA;AAvBJ;AAyBI,IAAA,YAAY,EAAI,CAAC;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA,KAA1B;AAAiCC,MAAAA;AAAjC,KAAD,kBAEd,oBAAC,UAAD;AACE,MAAA,SAAS,EAAE,UADb;AAEE,MAAA,GAAG,EAAE,MAAMH,SAFb;AAGE,MAAA,OAAO,EAAE,MAAMG,OAAO,CAACC,OAAR,CAAgBL,IAAhB,CAHjB;AAIE,MAAA,OAAO,EAAIlB,GAJb;AAKE,MAAA,KAAK,EAAIkB,IAAI,CAACP,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA;AA0CD,C,CAED","sourcesContent":["import React from 'react';\n\nimport tag from '../images/tag.png'\nimport './dropsearch.css'\nimport {ImageLabel} from '../buttons/buttons'\nimport SelectDropDown from 'react-dropdown-select'\n\n\n//-------------------------------------------------------------------\n\nexport function peopleDropSearch ( people ,callBack){\n \n  let peoplesNames = people.map((person,idx) => {\n      return {value : idx, label: (person.firstname + ' ' + person.lastname)}})\n  return (\n  \n\n    \n  <SelectDropDown \n    \n      placeholder   = '+ add'\n      options       = { peoplesNames } \n      searchable    = { true }\n      closeOnSelect = { true }\n      clearOnSelect = { true }\n      \n      \n      //------------\n\n      onChange = { \n          items => {\n            let index = items[0].value\n            console.log(people[index]);\n            if(callBack) callBack(people[index])\n          }\n        }\n\n      //------------\n      \n\n\n      //------------\n\n      itemRenderer = {({ item, itemIndex, props, state, methods }) => (\n          \n        <ImageLabel \n          className ='dropItem'\n          key={'i' + itemIndex} \n          onClick={() => methods.addItem(item)} \n          leftImg = {tag}\n          label = {item.label}\n        />\n      )}\n      \n  />\n  )\n}\n\n//-------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"module"}